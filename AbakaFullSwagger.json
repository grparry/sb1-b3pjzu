{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Abaka APIs"
    },
    "host": "localhost:28710",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/accessmanagement/users": {
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_BulkDeleteAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a list of Admin profile"
                    },
                    "403": {
                        "description": "User is not allowed to access profile's enterprise"
                    }
                }
            },
            "post": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_GetFilteredPaginatedUsers",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileFilterViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List paginated users",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[MinimumProfileRM]"
                        }
                    }
                }
            }
        },
        "/api/accessmanagement/roles/all": {
            "get": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_GetApplicationRoles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List available roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationRoleRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/accessmanagement/roles/{profileId}": {
            "get": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_GetRolesForProfileAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List available roles for user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationRoleRM"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_UpdateRolesForProfileAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileRoles",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleStatusRM"
                            }
                        }
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/accessmanagement/user/{id}": {
            "get": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_FetchAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch an Admin profile",
                        "schema": {
                            "$ref": "#/definitions/BusinessProfileRM"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_UpdateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "adminProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessProfileRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update an existing Admin profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_DeleteAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete an existing Admin profile"
                    },
                    "403": {
                        "description": "User is not allowed to access profile's enterprise"
                    }
                }
            }
        },
        "/api/accessmanagement/user": {
            "post": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_CreateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "adminProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessProfileRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new Admin profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/accessmanagement/user/{id}/enable": {
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_EnableProfileAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enable Admin profile"
                    }
                }
            }
        },
        "/api/accessmanagement/user/{id}/disable": {
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_DisableProfileAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disable Admin profile"
                    }
                }
            }
        },
        "/api/accessmanagement/user/{id}/invite": {
            "post": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_SendInvitationAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Send invitation mail to an Admin profile"
                    }
                }
            }
        },
        "/api/accessmanagement/users/enable": {
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_BulkEnableProfileAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bulk enable Admin profile"
                    }
                }
            }
        },
        "/api/accessmanagement/users/disable": {
            "put": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_BulkDisableProfileAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bulk disable Admin profile"
                    }
                }
            }
        },
        "/api/accessmanagement/activities": {
            "post": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_SearchActivities",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivityFilterViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provides a paginated and searchable list of activities",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[AppInsightsEventRM]"
                        }
                    }
                }
            }
        },
        "/api/accessmanagement/user/{id}/activities": {
            "post": {
                "tags": [
                    "AccessManagementApi"
                ],
                "operationId": "AccessManagementApi_FetchUserActivities",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivityFilterViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search activities done by a given profile",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[AppInsightsEventRM]"
                        }
                    }
                }
            }
        },
        "/api/provider": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Get providers",
                "operationId": "AIP_SearchProviders",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Name of the provider to search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "query",
                        "description": "Country of the provider to search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of element to return",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkService",
                        "in": "query",
                        "description": "List of link services to use (left empty to use all the services available for this enterprise)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "onlyAutomation",
                        "in": "query",
                        "description": "Return only providers which support automation linking",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "accountFilterType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "getSuggestedProviders",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of providers",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[Provider]"
                        }
                    }
                }
            }
        },
        "/api/provideraccount/{id}/account/all": {
            "get": {
                "tags": [
                    "Provider Account"
                ],
                "summary": "Get accounts for provideraccount",
                "description": "Get financial accounts related to a provider account for a specific user",
                "operationId": "AIP_GetAccountsDetailsFromProvider",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/projection": {
            "get": {
                "tags": [
                    "Graph"
                ],
                "summary": "Get an account projection, in today's money",
                "description": "Get the projection for a financial account",
                "operationId": "AIP_GetAccountProjectionValues",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "numberOfYear",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Graphic account datas",
                        "schema": {
                            "$ref": "#/definitions/EstimateAccountProjection"
                        }
                    }
                }
            }
        },
        "/api/asset": {
            "post": {
                "tags": [
                    "Asset"
                ],
                "summary": "Search assets",
                "operationId": "AIP_SearchAssets",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "Assets filter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FundsSearchFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of assets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/asset/exist": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Check reseller assets exist",
                "description": "Check if reseller has assets in our database to propose the switch asset use case",
                "operationId": "AIP_ResellerAssetsExist",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Reseller assets exist",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/asset/{id}": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get asset",
                "description": "Get asset by Id",
                "operationId": "AIP_GetAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the asset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset",
                        "schema": {
                            "$ref": "#/definitions/AssetRM"
                        }
                    }
                }
            }
        },
        "/api/asset/factsheet": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get asset factsheet",
                "description": "Get the requested asset fact sheet (PDF document)",
                "operationId": "AIP_GetAssetFactSheetDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "isin",
                        "in": "query",
                        "description": "ISIN of the asset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/asset/keyinvestor": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get asset key investor",
                "description": "Get the requested asset key investor information (PDF document)",
                "operationId": "AIP_GetAssetKeyInvestorDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "isin",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/pension/active": {
            "get": {
                "tags": [
                    "Pension"
                ],
                "summary": "Get active pension",
                "description": "Get user active pension",
                "operationId": "AIP_GetActivePension",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Pension"
                ],
                "summary": "Check if active pension exists",
                "description": "Check if the user has an active pension",
                "operationId": "AIP_HasActivePension",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Active pension exist",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/type": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Check accounts' types exist",
                "description": "Determine if the current user possesses accounts of the given types",
                "operationId": "AIP_HasAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountCategories",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accounts type exist",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/transaction/other": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Check other transactions",
                "description": "Check if the user has less than 15% of transactions with type = OTHER with at least one full month of transactions. If user does not have enough transactions, return true\r\n            only consider DEBIT base type",
                "operationId": "AIP_HasOtherTransactions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Too many other transactions",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/transaction/category": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get transaction category details",
                "description": "Get the details of a given transaction category",
                "operationId": "AIP_GetCategoriesTansactionDetail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "AIPCategoryId",
                        "in": "query",
                        "description": "Transaction category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction category",
                        "schema": {
                            "$ref": "#/definitions/CategoriesTansaction"
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account",
                "description": "Get account details",
                "operationId": "AIP_GetAccountDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Delete account",
                "description": "Delete account from database. If no more accounts linked to the related provider account, then delete provider account",
                "operationId": "AIP_DeleteAccount",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/investments": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account investments",
                "description": "Get account investments details",
                "operationId": "AIP_GetAccountInvestmentDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account investment details",
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/currency": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account",
                "description": "Get account details in original currency",
                "operationId": "AIP_GetAccountDetailsOriginalCurrency",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details in original currency",
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                }
            }
        },
        "/api/account/transaction": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Get accounts transactions",
                "operationId": "AIP_GetTransactions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "Transaction filter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "$ref": "#/definitions/PagingAccountTransactionsModel"
                        }
                    }
                }
            }
        },
        "/api/account/transaction/all": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get all accounts and transactions",
                "description": "Get all accounts and transactions",
                "operationId": "AIP_GetAllAccountsTransactions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts and transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/account/currency": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get accounts in original currency",
                "description": "Get accounts details, without currency conversion and without transactions.",
                "operationId": "AIP_GetAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountTypes",
                        "in": "query",
                        "description": "Account type, pipe separated string eg : PRIVATEACCOUNT|SAVINGS",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceProviderId",
                        "in": "query",
                        "description": "Pension provider id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "Pension provider service id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts in original currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get accounts in preferred currency",
                "description": "Get accounts details, converted to user preferred currency but without transactions.",
                "operationId": "AIP_GetAccountsInPreferredCurrency",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountTypes",
                        "in": "query",
                        "description": "Account categories, pipe separated string eg : PRIVATEACCOUNT|SAVINGS",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceProviderId",
                        "in": "query",
                        "description": "Pension provider id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "Pension provider service id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts in user preferred currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountRM"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Save account",
                "operationId": "AIP_SaveAccount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "body",
                        "description": "Account model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account",
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                }
            }
        },
        "/api/account/goal": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Refresh accounts and related goals",
                "description": "Update accounts and related goals, recalculating retirement forecast income",
                "operationId": "AIP_RefreshAccountsAndGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/provider/{linkServiceId}/{linkServiceProviderId}": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Get provider",
                "description": "Get provider details",
                "operationId": "AIP_GetProviderDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkServiceProviderId",
                        "in": "path",
                        "description": "Id of the provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "path",
                        "description": "LinkService Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    }
                }
            }
        },
        "/api/account/silent/{accountId}": {
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Same as DeleteAccount route but without raising signalR update notification back to the user",
                "operationId": "AIP_DeleteAccountSilently",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/goals": {
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Delete account",
                "description": "Delete account from database and reset the attached goal plan if it exist. If no more accounts linked to the related provider account, then delete provider account",
                "operationId": "AIP_DeleteAccountAndResetGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/account/transaction/rule": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Apply transaction rule",
                "operationId": "AIP_ApplyTransactionRule",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Transaction rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/provideraccount": {
            "post": {
                "tags": [
                    "Provider Account"
                ],
                "summary": "Link provider account",
                "operationId": "AIP_SendMFA",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "body",
                        "description": "Link provider account input",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LinkProviderAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/provideraccount/eligibleforrefresh/{providerAccountId}": {
            "get": {
                "tags": [
                    "Provider Account"
                ],
                "summary": "Checks the provider account is eligible for refresh",
                "operationId": "AIP_IsEligibleForRefresh",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "providerAccountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/account/{accountId}/beneficiaries": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get beneficiaries",
                "description": "Get list of beneficiatries",
                "operationId": "AIP_GetBeneficiaries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of beneficiary of the account",
                        "schema": {
                            "$ref": "#/definitions/Beneficiary"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Update beneficiaries",
                "description": "Update list of beneficiaries",
                "operationId": "AIP_UpdateBeneficiaries",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "beneficiariesRM",
                        "in": "body",
                        "description": "List of beneficiaries",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryInputRM"
                            }
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update the list of beneficiaries",
                        "schema": {
                            "$ref": "#/definitions/Beneficiary"
                        }
                    }
                }
            }
        },
        "/api/account/beneficiariesrelationships": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get beneficiaries relationships",
                "description": "It represents all possible relationships between the beneficiaries and an account holder.",
                "operationId": "AIP_GetBeneficiariesRelationships",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "beneficiaries relationships",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/api/account/{id}/performance": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Return the performance of the asset lines of an account",
                "operationId": "AIP_AccountPerformance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accounts type exist",
                        "schema": {
                            "$ref": "#/definitions/FundPerformanceRM"
                        }
                    }
                }
            }
        },
        "/api/account/{id}/performance/periods": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Return the available periods of performance for an account",
                "operationId": "AIP_AccountPerformancePeriods",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available fund performance period",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Perf1M",
                                    "Perf3M",
                                    "Perf6M",
                                    "Perf12M",
                                    "Perf1Y",
                                    "Perf3Y",
                                    "Perf5Y"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/fundsoperations": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Process account funds oprerations",
                "description": "Process account operations",
                "operationId": "AIP_ProcessAccountFundsOperations",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "Operations to execute on account funds",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountFundsOperationsRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/account/statement/import": {
            "post": {
                "tags": [
                    "Account"
                ],
                "operationId": "AIP_ImportStatementOCR",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/probe/aip": {
            "get": {
                "tags": [
                    "Maintenance",
                    "AIP"
                ],
                "summary": "Run AIP probing to ensure registered VM are alive",
                "operationId": "AIP_ProbeAIP",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/budget/categories-monthly-average": {
            "get": {
                "tags": [
                    "Budget"
                ],
                "summary": "Return the average monthly spending per category for the request's sender.\r\n<remarks>Only the last 3 full months are used</remarks>",
                "operationId": "BudgetApi_GetCategoriesMonthlyAverage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "User average spending",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryMonthlyAverage"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/budget/monthly-savings": {
            "get": {
                "tags": [
                    "Budget"
                ],
                "summary": " Get the monthly savings of a user on a date range, calculations are made on full months so the date range is sanitized\r\n<remarks>If you need only one month you can use the same value for {rangeFrom} and {rangeTo}</remarks>",
                "operationId": "BudgetApi_GetMonthlySavings",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "rangeFrom",
                        "in": "query",
                        "description": "The start of the date range, it's going to be flattened as the first day of {rangeFrom} month",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeTo",
                        "in": "query",
                        "description": "The end of the date range, it's going to be flattened as the last day of {rangeTo} month\r\n            It needs to be inferior or equal to {rangeFrom}",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User monthly savings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SavingsSpendingsModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/campaign/activate": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "operationId": "CampaignApi_Activate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activate campaign nudges"
                    }
                }
            }
        },
        "/api/campaign/deactivate": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "operationId": "CampaignApi_Deactivate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deactivate campaign nudges"
                    }
                }
            }
        },
        "/api/campaign/test": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "operationId": "CampaignApi_CreateTestCampaignNotifications",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created notifications ID for campaign",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/profilecommunicationpreferences/all": {
            "get": {
                "tags": [
                    "ProfileCommunicationPreference"
                ],
                "summary": "List of Communication Preferences Categories",
                "description": "Geting a List of Communication Preferences Categories using profile",
                "operationId": "CommunicationPreferenceApi_GetProfileCommunicationPreference",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Communication Prefrences Categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileCommunicationPreferenceRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/profilecommunicationpreferences": {
            "post": {
                "tags": [
                    "SaveProfileCommunicationPreference"
                ],
                "summary": "Save Profile Communication Preferences",
                "description": "Saving Profile Communication Preferences using Profile List",
                "operationId": "CommunicationPreferenceApi_SaveProfileCommunicationPreference",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileCommunicationPreferences",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileCommunicationPreferenceRM"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/country/uk/address": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get address from postcode",
                "description": "Get address from postcode using GetAddressIO api",
                "operationId": "CountryApi_FindAddressFromPostCode",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "postCode",
                        "in": "query",
                        "description": "Postcode",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of addresses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AddressModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/account/category/all": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country accounts categories",
                "description": "Get country accounts categories",
                "operationId": "CountryApi_GetAccountCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountTypeRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/uk/equityrelease": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Get equity release value",
                "description": "Get equity release value based on property value and owner age",
                "operationId": "CountryApi_GetEquityReleaseValue",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "body",
                        "description": "Equity release inputs",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquityReleaseValueInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equity release value",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/country/uk/property": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get estimated property value",
                "description": "",
                "operationId": "CountryApi_GetEstimatedPropertyValue",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "postCode",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "numberOfBedRooms",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numberOfBathRooms",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offStreetParkingSpaces",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "propertyType",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estimated property value",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/country/uk/equityrelease/term": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Get monthly equity release value",
                "description": "Get monthly equity release value based on number of year term",
                "operationId": "CountryApi_GetMonthlyEquityReleaseValue",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "body",
                        "description": "Equity release inputs",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquityReleaseValueInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estimated property value",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/country/uk/equityrelease/flex": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Get flex equity release",
                "description": "Get flex equity release",
                "operationId": "CountryApi_GetFlexEquityReleaseValue",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "body",
                        "description": "Equity release flex value input",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquityReleaseFlexValueInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of values",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Money"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/uk/equityrelease/contract": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get available equity release contrat duration",
                "description": "Get available equity release contrat duration (yearly)",
                "operationId": "CountryApi_GetAvailableEquityReleaseYearlyContractDurationsForUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ownerAge",
                        "in": "query",
                        "description": "Owner age",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contract duration",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/phone": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Check valid phone number",
                "description": "Check if phone number is valid given the country code",
                "operationId": "CountryApi_IsValidPhoneNumber",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "in": "query",
                        "description": "Phone number",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "Country code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Is phone number valid",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/country/email": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Check if email is valid",
                "description": "Check if email is valid",
                "operationId": "CountryApi_IsValidEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Is email valid",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/country/area": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get geographic areas",
                "description": "Get the geographic areas available for the user in the country",
                "operationId": "CountryApi_GetGeographicAreas",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "areaType",
                        "in": "query",
                        "description": "Area type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CITY",
                            "COUNTY"
                        ]
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "description": "Parent area id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of geographic areas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GeographicAreaRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/city": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get geographic area",
                "description": "Get the geographic area detail",
                "operationId": "CountryApi_GetGeographicArea",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "areaId",
                        "in": "query",
                        "description": "Area type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Geographic area",
                        "schema": {
                            "$ref": "#/definitions/GeographicAreaRM"
                        }
                    }
                }
            }
        },
        "/api/country/expense/category": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get market average category expense",
                "description": "Get the sum of the expenses incomes of the current user, for given period types and category",
                "operationId": "CountryApi_GetCategoryExpensesIncomesPerPeriod",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "Period type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "aipCategoryId",
                        "in": "query",
                        "description": "Category Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sum of market average cagegory expense",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/country/expense": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get market average expenses per period",
                "description": "Get the sum of the expenses incomes of the current user, for given period types",
                "operationId": "CountryApi_GetExpensesIncomesPerPeriod",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sum of market average expenses",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/country/lifestyle/all": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country lifestyles",
                "description": "Get the lifestyles available for the user in the country",
                "operationId": "CountryApi_GetLifeStyles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "areaId",
                        "in": "query",
                        "description": "Area Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of life styles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LifeStyleRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/lifestyle": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get lifestyle",
                "description": "Get the lifestyle corresponding to the given Id",
                "operationId": "CountryApi_GetLifeStyle",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lifeStyleId",
                        "in": "query",
                        "description": "lifeStyleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Life style",
                        "schema": {
                            "$ref": "#/definitions/LifeStyleRM"
                        }
                    }
                }
            }
        },
        "/api/country/all": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get supported countries",
                "operationId": "CountryApi_GetCountries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of countries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Countries"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/{countryId}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country details",
                "operationId": "CountryApi_GetCountry",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/api/country/taxtranches": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country tax tranches",
                "description": "Get the list of tax tranches for the user country",
                "operationId": "CountryApi_GetTaxSelectors",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of tax tranches for the user country",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaxTrancheSelector"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/system": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get world countries",
                "description": "Get the List of all countries in the world",
                "operationId": "CountryApi_GetWorldCountries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of all countries in the world",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortCountryRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/working": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country business days",
                "description": "Get the first business days of the next twelve months for the UK country",
                "operationId": "CountryApi_GetFirstBusinessDayForNextTwelveMonths",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of all countries in the world",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "date-time",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/country/statepension": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Provide country's state pension",
                "operationId": "CountryApi_FetchCountryStatePension",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Country's most recent state pension",
                        "schema": {
                            "$ref": "#/definitions/StatePensionRM"
                        }
                    }
                }
            }
        },
        "/api/application/suitability": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get suitability report",
                "description": "Get the suitability report (PDF document) for a given application",
                "operationId": "CustodianApi_GetApplicationPackPdf",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/application": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get application",
                "description": "Get the application information related to a given goal",
                "operationId": "CustodianApi_GetApplication",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "query",
                        "description": "ID of the goal",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application",
                        "schema": {
                            "$ref": "#/definitions/CustodianApplication"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Save application",
                "description": "Save an application in database from its structured data",
                "operationId": "CustodianApi_SaveApplication",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Application model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustodianApplicationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the application",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Submit application",
                "description": "Submit a new application for the connected user. Also adds related information such as e.g. suitability report. It opens the account and create the monthly debit.",
                "operationId": "CustodianApi_SubmitApplication",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustodianApplicationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the applications",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/application/count": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get fiscal year applications count",
                "description": "Get the number of applications that were submitted during the current fiscal year for a given account type",
                "operationId": "CustodianApi_GetCustodianAppsSubmittedInCurrentFiscalYear",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountType",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of applications",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/application/bank": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get bank accounts",
                "description": "Get bank account information",
                "operationId": "CustodianApi_GetBankAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Application",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BankAccount"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Save application bank account",
                "description": "Save in database a bank account for the current user in the context of an account opening application",
                "operationId": "CustodianApi_SaveBankAccount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Bank account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveBankAccountModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved bank account",
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    }
                }
            }
        },
        "/api/application/open": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Submit application",
                "description": "Submit a new application for the connected user. Also adds related information such as e.g. suitability report. It only opens the account.",
                "operationId": "CustodianApi_SubmitApplicationOpenAccountOnly",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustodianApplicationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the applications",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/studio/data/document/all": {
            "get": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Get all documents",
                "description": "Get the documents of the enterprise (or reseller) of the current user",
                "operationId": "DataStudioApi_GetEnterpriseDocuments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "mediaType",
                        "in": "query",
                        "description": "Media type (PDF, IMAGE, VIDEO)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    },
                    {
                        "name": "security",
                        "in": "query",
                        "description": "Media security type",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Media status",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search paramater in Friendly Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdFromDate",
                        "in": "query",
                        "description": "From filter on media created date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "createdToDate",
                        "in": "query",
                        "description": "To filter on media created date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enterpriseName",
                        "in": "query",
                        "description": "To filter on media enterprise",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resellerName",
                        "in": "query",
                        "description": "To filter on media reseller",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[EnterpriseDocumentRM]"
                        }
                    }
                }
            }
        },
        "/api/studio/data/document/{id}": {
            "get": {
                "tags": [
                    "DataStudioApi"
                ],
                "operationId": "DataStudioApi_GetEnterpriseDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseDocumentRM"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Delete document",
                "operationId": "DataStudioApi_DeleteDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete document for the document id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/studio/data/document": {
            "put": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Edit document",
                "description": "Expect FormData format",
                "operationId": "DataStudioApi_EditEnterpriseDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Edit document",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseDocumentRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Add document",
                "description": "Expect FormData format",
                "operationId": "DataStudioApi_AddEnterpriseDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Add document",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseDocumentRM"
                        }
                    }
                }
            }
        },
        "/api/studio/data/document/{id}/file": {
            "get": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Get enterprise document",
                "description": "Get the document by id",
                "operationId": "DataStudioApi_GetEnterpriseDocumentFile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get enterprise document file"
                    }
                }
            }
        },
        "/api/studio/data/document/folder/all": {
            "get": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Get abstract folders for the reseller",
                "description": "Logic around which folder to return based on enterprise is not clear yet",
                "operationId": "DataStudioApi_GetAbstractFoldersForDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Get all folders for document",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentAbstractFolderRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/studio/data/document/folder": {
            "put": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Update document abstract folder name",
                "description": "Only name update is supported for now",
                "operationId": "DataStudioApi_UpdateFolder",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "folderRM",
                        "in": "body",
                        "description": "folder to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentAbstractFolderRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Document abstract folder",
                        "schema": {
                            "$ref": "#/definitions/DocumentAbstractFolderRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Add Document abstract folder",
                "description": "The folder is created on the reseller",
                "operationId": "DataStudioApi_AddFolder",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "folder",
                        "in": "body",
                        "description": "folder to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentAbstractFolderRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add Document abstract folder",
                        "schema": {
                            "$ref": "#/definitions/DocumentAbstractFolderRM"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DataStudioApi"
                ],
                "summary": "Delete document abstract folder id",
                "description": "Sub folders will not be deleted and will be top folders. Documents using this folder will not be deleted, and will be in no folder",
                "operationId": "DataStudioApi_DeleteFolder",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of folder to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete Document abstract folder"
                    }
                }
            }
        },
        "/api/document/all": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get documents",
                "description": "Get all documents of the connected profile",
                "operationId": "DocumentsApi_GetDocuments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of documents",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentRM"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Document"
                ],
                "summary": "Delete all profile documents",
                "description": "Delete all documents of the connected profile",
                "operationId": "DocumentsApi_DeleteDocuments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/document/{documentId}": {
            "delete": {
                "tags": [
                    "Document"
                ],
                "summary": "Delete profile document",
                "description": "Delete a document of the connected profile",
                "operationId": "DocumentsApi_DeleteDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/document": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Download document",
                "operationId": "DocumentsApi_DownloadProfileDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "Name of the file to download",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentType",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "TRANSFER_FORM",
                            "SUITABILITY_REPORT",
                            "PROOF_OF_IDENTITY",
                            "ANNUITY_ATTACHMENT",
                            "PENSION_TRACING_FORM",
                            "DRAWDOWN_ATTACHMENT",
                            "WITHDRAW_ATTACHMENT",
                            "KEEPINVESTED_ATTACHMENT",
                            "COMPLETION_CERTIFICATE",
                            "DRAWDOWN_APPLICATION_FORM",
                            "PENSION_TRACING_DOC",
                            "WELCOME_PACK",
                            "WAKEUP_PACK",
                            "WAKEUP_PACK_5Y_FROM_GOAL",
                            "ANNUAL_STATEMENT",
                            "GDPR_EXPORT",
                            "FLAG_INTERNAL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/document/tracing/upload": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "Upload tracing documents",
                "description": "Upload all LOA documents related to tracing",
                "operationId": "DocumentsApi_UploadTracingLOADocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise/list": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get employer for autocomplete",
                "description": "Search an employer by name for autocompletion",
                "operationId": "EmployerApi_GetEmployerAutocomplete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "input for the autocomplete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployerRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/profile": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employers linked to the user",
                "operationId": "EmployerApi_FetchProfileEmployers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of employers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployerRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/scheduledTransactions": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employers linked to the user",
                "operationId": "EmployerApi_FetchScheduledTransactions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of employers",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/EmployerScheduledTransactionsRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/all": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get all enterprises",
                "description": "Get all employer type enterprises defined in Abaka",
                "operationId": "EmployerApi_GetEmployers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of all employers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnterpriseRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/pension": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer pension information",
                "description": "Get the pension information of the current employer(s) of the current user",
                "operationId": "EmployerApi_GetCurrentEmployerInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Employer pension info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CurrentEmployerInfoModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/provider/scheme": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get provider schemes for employer",
                "description": "Get provider schemes for employer",
                "operationId": "EmployerApi_GetProvidersFromEmployer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employer pension schemes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployerViewModel"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/employer/provider/scheme/{id}": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer provider scheme",
                "operationId": "EmployerApi_GetEmployerPensionSchemeBySchemeId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the scheme",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employer pension scheme",
                        "schema": {
                            "$ref": "#/definitions/EmployerPensionScheme"
                        }
                    }
                }
            }
        },
        "/api/employer/current": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get current employers",
                "description": "Get information of the current employers of the current user",
                "operationId": "EmployerApi_GetUserEmployerInfos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of current user enterprises",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnterpriseRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer",
                "description": "Get employer information from its given unique name",
                "operationId": "EmployerApi_GetEmployerDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "employerUniqueName",
                        "in": "query",
                        "description": "Name of the employer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise details",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseRM"
                        }
                    }
                }
            }
        },
        "/api/employer/contribution": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer contribution",
                "description": "Get the employer contribution for given employer and pension provider, according to a given employee contribution",
                "operationId": "EmployerApi_GetPensionContributionDetailsForEmployeeContributionPercentage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "employeeContributionPercentage",
                        "in": "query",
                        "description": "Contribution (in percent) of the employee",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "pensionProviderId",
                        "in": "query",
                        "description": "ID of the pension provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerUniqueName",
                        "in": "query",
                        "description": "Name of the employer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "Link Service Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employer contribution details",
                        "schema": {
                            "$ref": "#/definitions/ContributionDetailsModel"
                        }
                    }
                }
            }
        },
        "/api/employer/contribution/all": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer contributions",
                "description": "Get the different contributions for given employer and pension provider",
                "operationId": "EmployerApi_GetPensionContributionDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pensionProviderId",
                        "in": "query",
                        "description": "ID of the pension provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerUniqueName",
                        "in": "query",
                        "description": "Name of the employer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "LinkService Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employer contribution details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContributionDetailsModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/contribution/default": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get default employer contribution",
                "description": "Get the default employer and, if applicable, employee contributions for given employer and pension provider",
                "operationId": "EmployerApi_GetDefaultPensionContributionDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pensionProviderId",
                        "in": "query",
                        "description": "ID of the pension provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerUniqueName",
                        "in": "query",
                        "description": "Name of the employer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "Link Service Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default employer contribution details",
                        "schema": {
                            "$ref": "#/definitions/ContributionDetailsModel"
                        }
                    }
                }
            }
        },
        "/api/employer/contribution/rule": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "summary": "Get employer contribution rule",
                "description": "Get employer contribution data (e.g. account type, default percentage, matching rule, etc.) for given employer and pension provider",
                "operationId": "EmployerApi_GetEmployerContributionRule",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkServicePensionProviderId",
                        "in": "query",
                        "description": "ID of the pension provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerUniqueName",
                        "in": "query",
                        "description": "Name of the employer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "linkServiceId",
                        "in": "query",
                        "description": "Link Service Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employer contribution rule",
                        "schema": {
                            "$ref": "#/definitions/CustomEmployerPensionSchemeData"
                        }
                    }
                }
            }
        },
        "/api/employer/contribution/simulation": {
            "get": {
                "tags": [
                    "Simulation",
                    "Employer"
                ],
                "summary": "Get the input parameters for the employer contribution simulator",
                "operationId": "EmployerApi_FetchEmployerContributions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Input parameter for employer contribution simulator",
                        "schema": {
                            "$ref": "#/definitions/OptionPackRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Simulation",
                    "Employer"
                ],
                "operationId": "EmployerApi_SimulateEmployerContributions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulateEmployerContributionsInputRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Input parameter for employer contribution simulator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OptionPackSimulationRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/employer/contribution/simulation/{optionPackId}": {
            "post": {
                "tags": [
                    "Simulation",
                    "Employer"
                ],
                "operationId": "EmployerApi_SimulateEmployerContributions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionPackId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contribution",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployerContribution"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Input parameter for employer contribution simulator",
                        "schema": {
                            "$ref": "#/definitions/OptionPackSimulationRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/contribution": {
            "get": {
                "tags": [
                    "Enterprise",
                    "Contribution"
                ],
                "operationId": "EmployerApi_FetchEnterpriseContributions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "provide used and remaining enterprise contribution levels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HSBCResellerFREnterpriseContributionRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/tracing": {
            "post": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Create employment history",
                "description": "Create an employment history for the current user, using given history information",
                "operationId": "EmployerApi_CreateEmploymentHistory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Employment history model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmploymentHistoryCreationRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tracing id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Delete tracing item",
                "description": "Remove a given tracing item with its associated data",
                "operationId": "EmployerApi_DeleteEmploymentProvider",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Employment history model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteEmploymentHistoryModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete tracing item",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/tracing/all": {
            "get": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Get employment providers",
                "description": "Get the information of all employment history providers that the current user has used during their working life",
                "operationId": "EmployerApi_GetAllTracingProviders",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of providers from employment history",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TracingItemRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/tracing/{tracingId}": {
            "get": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Tracing information",
                "description": "Get the information of all tracing items for a defined tracing id",
                "operationId": "EmployerApi_GetTracingInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tracingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracing information from tracing id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TracingItemRM"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Update Tracing information",
                "description": "Update the information of all tracing items for a defined tracing id",
                "operationId": "EmployerApi_UpdateTracingInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateEmploymentHistoryModel"
                        }
                    },
                    {
                        "name": "tracingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Tracing information from tracing id"
                    }
                }
            }
        },
        "/api/tracing/{tracingId}/document": {
            "get": {
                "tags": [
                    "Tracing"
                ],
                "summary": "Download tracing LOA for specific tracing request",
                "operationId": "EmployerApi_GetTracingDocumentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tracingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "urlAfterSign",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracing LOAs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TracingDocumentsRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/resource/preferred": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise resources in preferred language",
                "description": "Get the queried resources of the enterprise to which the connected user belongs, and that are in the user's language",
                "operationId": "EnterpriseApi_GetResources",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resourceKeys",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnterpriseResourceRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/policy": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise policy",
                "description": "Get the B2C policy of an enterprise from its host name.",
                "operationId": "EnterpriseApi_GetPolicyStyleFromHostname",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "Hostname of the enterprise",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise policy",
                        "schema": {
                            "$ref": "#/definitions/EnterprisePolicyRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/intent/all": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get Active Bot Intents for an enterprise",
                "description": "Get the active bot intents for the connected enterprise",
                "operationId": "EnterpriseApi_GetAvailableFeatureBotIntentsForEnterprise",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "FeatureBotIntentModel ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeatureBotIntentModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/profile": {
            "put": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Update user enterprise profile",
                "description": "Update an already existing user enterprise profile in database",
                "operationId": "EnterpriseApi_UpdateProfileEnterprise",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "updatedProfileEnterprise",
                        "in": "body",
                        "description": "Enterprise profile to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileEnterpriseRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise profile",
                        "schema": {
                            "$ref": "#/definitions/ProfileEnterpriseRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/transaction/email": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Send a transaction email on behalf of enterprise",
                "description": "Send a transaction email to the given destination address, using the given enterprise templates and key",
                "operationId": "EnterpriseApi_SendEmailForEnterpriseTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionEmail",
                        "in": "body",
                        "description": "Transaction email template",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise/resource": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise resources",
                "description": "Get the queried resources of the connected profile or enterprise, localised in the caller's language.",
                "operationId": "EnterpriseApi_GetResourcesForEnterprise",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resourceKeys",
                        "in": "body",
                        "description": "Enterprise resources list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnterpriseResourceRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/email": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Send templated email (to be deprecated)",
                "operationId": "EnterpriseApi_SendTemplatedEmail",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "emailInputs",
                        "in": "body",
                        "description": "Email inputs",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise/document": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise document",
                "description": "Get the document of the enterprise (or reseller) of the current user",
                "operationId": "EnterpriseApi_GetEnterpriseDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isPrivate",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get connected enterprise",
                "description": "Get the connected enterprise object",
                "operationId": "EnterpriseApi_GetCurrentEnterprise",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/uri": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get connected enterprise front URI",
                "description": "Get the front URI corresponding of the connected enterprise",
                "operationId": "EnterpriseApi_GetEnterpriseFrontUri",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/hostname": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Validate enterprise hostname for a specific user",
                "description": "Check if the given enterprise hostname is the same as the one of the connected user's enterprise or not.",
                "operationId": "EnterpriseApi_ValidateEnterpriseByHostname",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "Enterprise hostname",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Is Hostname valid",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/enterprise/configuration": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise configuration",
                "description": "Get the enterprise selector configuration of the connected enterprise.",
                "operationId": "EnterpriseApi_GetEnterpriseSelectorConfiguration",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Configuration",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseSelectorConfigurationRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/reseller": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get reseller for user",
                "description": "Get the enterprise object corresponding to a reseller belonging to the user",
                "operationId": "EnterpriseApi_GetResellerForUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Configuration",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/token": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Generate token for enterprise from AppId, appSecret",
                "operationId": "EnterpriseApi_GetEnterpriseToken",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnterpriseCredentialModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token for the onboarded enterprise",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/occupation/search": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise occupations for autocomplete",
                "description": "Search an occupation by jobtitle for autocompletion, for the enterprise of the connected user, in the user preferred language.",
                "operationId": "EnterpriseApi_GetEnterpriseOccupationsAutocomplete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "input for the autocomplete",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of occupations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OccupationRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/occupation/{occupationId}": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise occupation",
                "operationId": "EnterpriseApi_GetEnterpriseOccupation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "occupationId",
                        "in": "path",
                        "description": "enterprise occupation id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise occupations",
                        "schema": {
                            "$ref": "#/definitions/OccupationRM"
                        }
                    }
                }
            }
        },
        "/api/enterprise/encrypt": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Encrypts the input string.",
                "description": "Take a string as request input data, and encrypt it using a secure key.",
                "operationId": "EnterpriseApi_Encrypt",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Encrypts the input string",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/invitation": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get invitation link for the connected enterprise",
                "description": "Generate a B2C claim for the front URI of the connected enterprise.",
                "operationId": "EnterpriseApi_GetInvitationLink",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "claims",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation link",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/languages": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get available languages for the connected enterprise",
                "description": "Get the list of languages that are supported by the connected enterprise, and that its users can thus choose to use.",
                "operationId": "EnterpriseApi_GetEnterpriseLanguages",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of languages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Language"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/callmeback": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Upload call me back information for enterprise",
                "description": "Retrieve the \"call me back\" transactions of a given enterprise, and upload their information to a Data Lake storage.",
                "operationId": "EnterpriseApi_UploadCallMeBackData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "inputData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/enterprise/subscription": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get an enterprise subscription by Id or event name",
                "operationId": "EnterpriseApi_GetEnterpriseSubscription",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "description": "Subscription Id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventName",
                        "in": "query",
                        "description": "Event name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Add or update an enterprise subscription",
                "operationId": "EnterpriseApi_AddUpdateEnterpriseSubscription",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "body",
                        "description": "Subscription parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription Id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/subscription/{subscriptionId}": {
            "delete": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Delete a Subscription",
                "operationId": "EnterpriseApi_RemoveEnterpriseSubscription",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "Subscription Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise/subscription/all": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get all enterprise subscriptions",
                "operationId": "EnterpriseApi_GetEnterpriseSubscriptions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Subscriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SubscriptionRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/enterprise/customer/register": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Register enterprise customer",
                "description": "Register enterprise customer",
                "operationId": "EnterpriseApi_RegisterEnterpriseCustomer",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnterpriseCustomerViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "identifier of the registered customer",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/enterprise/customer/all": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise customers with paging",
                "description": "Get the customers object corresponding to the connected enterprise",
                "operationId": "EnterpriseApi_GetEnterpriseCustomers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Customers",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[EnterpriseCustomer]"
                        }
                    }
                }
            }
        },
        "/api/enterprise/transaction/all": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise transactions with paging",
                "description": "Get the transactions based on input filters",
                "operationId": "EnterpriseApi_GetEnterpriseTransactions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionsFilter"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Transactions",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[ProfileTransactionRM]"
                        }
                    }
                }
            }
        },
        "/api/enterprise/customer/detail/{customerId}": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise specific customer",
                "description": "Get the customer object corresponding to an Id",
                "operationId": "EnterpriseApi_GetEnterpriseCustomer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Customer",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseCustomer"
                        }
                    }
                }
            }
        },
        "/api/enterprise/customer": {
            "delete": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Remove enterprise customer",
                "description": "Remove the customer object corresponding to an Id",
                "operationId": "EnterpriseApi_RemoveEnterpriseCustomer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enterprise Customer",
                        "schema": {
                            "$ref": "#/definitions/EnterpriseCustomer"
                        }
                    }
                }
            }
        },
        "/api/enterprise/import/updatetransactions": {
            "post": {
                "tags": [
                    "Enterprise"
                ],
                "operationId": "EnterpriseApi_UpdateTransactions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "requestObject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/enterprise/account/accounttype/all": {
            "get": {
                "tags": [
                    "Enterprise"
                ],
                "summary": "Get enterprise account types",
                "description": "Get enterprise accounts types",
                "operationId": "EnterpriseApi_GetAccountTypesAndCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Account Types and Categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortAccountTypeRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/feedback/interested/all": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all interested feedback reasons",
                "operationId": "FeedbackApi_GetInterestedFeedback",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of interested feedback reasons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeedbackReasonRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/feedback/notinterested/all": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all not interested feedback reasons",
                "operationId": "FeedbackApi_GetNotInterestedFeedback",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of not interested feedback reasons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeedbackReasonRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/drawdown": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a pension increase contribution transaction",
                "description": "Increase the current user's contribution to its pension, and send a confirmation email. A previous increase must not have been performed less than a month ago",
                "operationId": "FinancialAccountApi_UpdateDrawdownAccount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "drawdownUpdateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DrawdownAccountUpdateRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/diagnostics/all": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Get financial diagnostic",
                "description": "Get the financial diagnostic of the current user",
                "operationId": "FinancialDiagnosticsApi_GetFinancialDiagnostics",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Risk profile responses",
                        "schema": {
                            "$ref": "#/definitions/DiagnosticsModel"
                        }
                    }
                }
            }
        },
        "/api/risk": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get risk profile form",
                "description": "Get the risk profile form and, if any, user responses for the current user",
                "operationId": "FormProfileApi_GetFormProfile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Risk"
                ],
                "summary": "Save risk profile form",
                "description": "Save the risk profile responses, that are part of the request, of the current user in database",
                "operationId": "FormProfileApi_SaveFormProfile",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "formProfileResponses",
                        "in": "body",
                        "description": "risk profile form responses",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RiskProfileFormElement"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/risk/response/all": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get risk profile responses",
                "description": "Get the risk profile responses of the current user",
                "operationId": "FormProfileApi_GetRiskProfilingResponses",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Risk profile responses",
                        "schema": {
                            "$ref": "#/definitions/RiskProfilingResponseRM"
                        }
                    }
                }
            }
        },
        "/api/risk/grade": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get user risk profile grade",
                "description": "Get the risk grade corresponding to the risk profile of the current user. If user has no risk profile, returns null",
                "operationId": "FormProfileApi_GetUserRiskGrade",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Risk Grade",
                        "schema": {
                            "$ref": "#/definitions/RiskGrade"
                        }
                    }
                }
            }
        },
        "/api/risk/grade/portfolio": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get risk profile portfolio",
                "description": "Get the portfolio corresponding to the risk",
                "operationId": "FormProfileApi_GetPortfolioRisk",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "riskGrade",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio complete information",
                        "schema": {
                            "$ref": "#/definitions/PortfolioCompleteInfosRM"
                        }
                    }
                }
            }
        },
        "/api/risk/grade/all": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get all risk grades",
                "description": "Get risk grades for a specific enterprise",
                "operationId": "FormProfileApi_GetAllRiskGrades",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of risk grades",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RiskGrade"
                            }
                        }
                    }
                }
            }
        },
        "/api/risk/portfolio": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get user risk profile portfolio and asset allocations",
                "description": "Get the calculated portfolio, asset allocations, and maximum MP portfolio number corresponding to the risk profile of the current user",
                "operationId": "FormProfileApi_GetCalculatedPortfolioForUserRiskProfile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get risk profile form by EnterpriseUniqueName",
                "description": "Get the risk profile form and, if any, user responses for the given EUN",
                "operationId": "FormProfileApi_GetCalculatedPortfolioFromResponses",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "formProfileResponses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RiskProfileFormElement"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/risk/portfolio/horizon": {
            "get": {
                "tags": [
                    "Risk"
                ],
                "summary": "Get user risk profile portfolio and asset allocations taking into account investment horizon",
                "description": "Get the calculated portfolio, asset allocations, and maximum MP portfolio number corresponding to the risk profile of the current user",
                "operationId": "FormProfileApi_GetCalculatedPortfolioForUserRiskProfileWithHorizon",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "horizon",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/formula/retirementincome": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get estimated net annual retirement income (target income based on lifestyle)",
                "description": "Get the estimated net annual retirement income for the current user.",
                "operationId": "FormulasApi_GetEstimateAnnualRetirementIncome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/allowance": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get annual allowance",
                "description": "Get the annual allowance of the current user",
                "operationId": "FormulasApi_GetAnnualAllowance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Annual allowance",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/contribution/total": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get total contributions paid-in",
                "description": "Get the total contributions of the current fiscal year of the current user. Includes employer contribution, tax-free top-up, and DB benefits",
                "operationId": "FormulasApi_GetTotalPaidIn",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Total contributions paid-in",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/allowance/remaining": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get remaining annual allowance",
                "description": "Get the remaining allowance until the end of the fiscal year for the current user, according to the contributions they already performed",
                "operationId": "FormulasApi_GetRemainingAnnualAllowanceUntilFYEnd",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Remaining annual allowance",
                        "schema": {
                            "$ref": "#/definitions/EstimatedRemainingAnnualAllowanceModel"
                        }
                    }
                }
            }
        },
        "/api/graph/pension/{accountId}": {
            "get": {
                "tags": [
                    "Graph"
                ],
                "summary": "Get pension graphic datas",
                "description": "Get the estimated retirement income granted by a pension and graph datas",
                "operationId": "FormulasApi_GetGraphicDataFromPensions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Graphic pension datas",
                        "schema": {
                            "$ref": "#/definitions/EstimateRetirementIncomeForPensionModel"
                        }
                    }
                }
            }
        },
        "/api/graph/pensionaccounts": {
            "post": {
                "tags": [
                    "Graph"
                ],
                "summary": "Get pension graphic datas",
                "description": "Get the estimated retirement income granted by a pension and graph datas",
                "operationId": "FormulasApi_GetGraphicDataFromPensionList",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pensionsInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PensionsForecastInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Graphic pension data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EstimateRetirementIncomeForPensionModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/graph/pension": {
            "post": {
                "tags": [
                    "Graph"
                ],
                "summary": "Estimate pension graphic datas from contributions",
                "description": "Get the new estimated retirement income granted by a pension, given a list of contributions and graphic datas",
                "operationId": "FormulasApi_GetEstimatedGraphicDataFromPensions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "totalPaidIn",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimatedTotalPaidInModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income",
                        "schema": {
                            "$ref": "#/definitions/EstimateRetirementIncomeForPensionModel"
                        }
                    }
                }
            }
        },
        "/api/graph/pensionFunds": {
            "post": {
                "tags": [
                    "Graph"
                ],
                "summary": "Estimate pension graphic data for an account with new asset lines",
                "description": "Get the new estimated retirement income granted by a pension, given an account id and its asset lines",
                "operationId": "FormulasApi_GetEstimatedGraphicDataFromPensionFunds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountForProjection",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinancialAccountRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income",
                        "schema": {
                            "$ref": "#/definitions/EstimateRetirementIncomeForPensionModel"
                        }
                    }
                }
            }
        },
        "/api/graph/drawdown": {
            "post": {
                "tags": [
                    "Graph"
                ],
                "summary": "Estimate drawdown graphic datas from income",
                "description": "Get the new estimated drawdown infos and graphic datas from expected income and graphic datas",
                "operationId": "FormulasApi_GetEstimatedGraphicDataFromCrystallised",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "drawdownInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DrawdownAccountIncomeRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income",
                        "schema": {
                            "$ref": "#/definitions/DrawdownInfos"
                        }
                    }
                }
            }
        },
        "/api/formula/allocation": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get asset allocations from risk grade",
                "description": "Get the aggregated asset allocations corresponding to a given risk grade",
                "operationId": "FormulasApi_GetAssetAllocationInfosFromRiskGrade",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "riskGrade",
                        "in": "query",
                        "description": "Risk grade",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tuple[Double,String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/formula/salary/gross2net": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get net from gross salary",
                "description": "Compute the annual net salary based on the gross one, using tax rules of the connected user's country",
                "operationId": "FormulasApi_GetNetFromAnnualGrossSalary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grossSalary",
                        "in": "body",
                        "description": "Annual gross salary",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net annual salary",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/salary/net2gross": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get gross from net salary",
                "description": "Compute the annual gross salary based on the net one, using tax rules of the connected user's country",
                "operationId": "FormulasApi_GetGrossFromAnnualNetSalary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "netSalary",
                        "in": "body",
                        "description": "Annual gross salary",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net gross salary",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/salary/taxableNet2net": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get net from taxable salary (gross minus wages costs)",
                "description": "Compute the annual net salary based on the net taxable one, using tax rules of the connected user's country",
                "operationId": "FormulasApi_GetNetFromAnnualTaxableNetSalary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annualNetTaxableSalary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net annual salary",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/statepension": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get weekly state pension",
                "description": "Get the estimated weekly state pension amount according to employment figures. Calculate the maximum state pension amount the user can get assuming he is going to work until the retirement age provided without taking into account the inflation",
                "operationId": "FormulasApi_EstimateWeeklyStatePensionAmount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "State pension model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WeeklyStatePensionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "State pension",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/taxrelief": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get tax relief",
                "description": "Get the tax relief amount corresponding to the annual income of the current user",
                "operationId": "FormulasApi_GetTaxReliefForAnnualGrossIncome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Tax relief in percent",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/formula/contribution/taxrelief": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get employee contribution with tax relief",
                "description": "Apply tax relief to a given employee contribution to get its final value",
                "operationId": "FormulasApi_GetEmployeeContributionWithTaxRelief",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "employeeContribution",
                        "in": "body",
                        "description": "Employee contribution",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee contribution with tax relief",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/contribution/topup": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get employer monthly top-up",
                "description": "Get the monthly top-up, including tax relief and pension contribution coming from the employer",
                "operationId": "FormulasApi_GetMonthlyTopUpIncludingPensionContributions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Monthly top-up pension contributions model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MonthlyTopUpPensionContributionsModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly employer top-up",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/contribution/topup/rate": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get employer monthly top-up rate",
                "description": "Get the monthly top-up divided by the employee monthly contribution, including employer contribution and tax relief",
                "operationId": "FormulasApi_GetUnitCurrencyMonthlyTopUpForContributionPercentageModel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contributionDetailsModel",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContributionDetailsModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly employer top-up rate",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/contribution/remaining": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get remaining contributions",
                "description": "Get the remaining contribution until the end of the current fiscal year for the current user",
                "operationId": "FormulasApi_GetRemainingContributionsForTaxYear",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "monthlyContribution",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Remaining contributions",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/formula/capital": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get accumulated capital",
                "description": "Get the accumulated capital",
                "operationId": "FormulasApi_GetAccumulatedCapital",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Capital information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetAccumulatedCapitalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accumulated capital",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/graph/retirement/income/accumulated": {
            "get": {
                "tags": [
                    "Graph"
                ],
                "summary": "Get accumulated monthly retirement incomes",
                "description": "Get the accumulated monthly retirement incomes for every month after a given drawdown age",
                "operationId": "FormulasApi_GetAccumulatedMonthlyRetirementIncome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "incomeDrawdownAge",
                        "in": "query",
                        "description": "Drawdown age acting as calculation starting point",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Graph data for monthly accumulated retirement incomes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tuple[Int32,Money]"
                            }
                        }
                    }
                }
            }
        },
        "/api/simulation/retirementincome": {
            "post": {
                "tags": [
                    "Simulation"
                ],
                "summary": "Get simulated net annual retirement income before taxes",
                "description": "Get the simulated net annual retirement income for the current user.",
                "operationId": "FormulasApi_GetGrossAnnualRetirementIncomeSimulation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WeeklyStatePensionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Net retirement annual income simulation",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/simulation/tax": {
            "get": {
                "tags": [
                    "Simulation"
                ],
                "summary": "Get the input parameter for the tax simulator for the connected user",
                "operationId": "FormulasApi_FetchTaxSimulatorDefaultRequest",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Default parameter for tax simulator",
                        "schema": {
                            "$ref": "#/definitions/TaxSimulationRequest"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Simulation"
                ],
                "summary": "Updates the tax simulator model and its possible impacts on profile data",
                "operationId": "FormulasApi_UpdateTaxSimulatorAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaxSimulatorRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update the inputs of the tax simulation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Simulation"
                ],
                "summary": "Provides the tax simulation results V1",
                "operationId": "FormulasApi_ComputeTaxSimulation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaxSimulationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Results of the tax simulation",
                        "schema": {
                            "$ref": "#/definitions/TaxSimulationResponse"
                        }
                    }
                }
            }
        },
        "/api/studio/global/resellers": {
            "get": {
                "tags": [
                    "GlobalApi"
                ],
                "summary": "Gets all available resellers.",
                "operationId": "GlobalApi_GetResellersAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/studio/global/enterprises": {
            "get": {
                "tags": [
                    "GlobalApi"
                ],
                "summary": "Gets all available enterprises from reseller.",
                "operationId": "GlobalApi_GetResellerEnterprisesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerUniqueName",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/studio/global/modules": {
            "get": {
                "tags": [
                    "GlobalApi"
                ],
                "operationId": "GlobalApi_FetchStudioModulesNames",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Provides the list of existing studio modules names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/{goalId}": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal",
                "description": "Retrieve goal information from its ID, and return it as an object.",
                "operationId": "GoalApi_GetGoalById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "Goal Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Goal"
                ],
                "summary": "Delete goal",
                "description": "Remove a goal from the database. Remove links to CustodianApplications, Cancel any SavingMonthlyContributionTransactions",
                "operationId": "GoalApi_RemoveGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "Id of the goal",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/budget/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get budget goals",
                "description": "Get all budget goals of the current user",
                "operationId": "GoalApi_GetBudgetGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of budget goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BudgetGoalRM"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Goal"
                ],
                "summary": "Delete all budget goals",
                "description": "Remove all budget goals of the current user from the database",
                "operationId": "GoalApi_RemoveUserBudgetGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/budget/{budgetGoalId}": {
            "delete": {
                "tags": [
                    "Goal"
                ],
                "summary": "Delete budget goal",
                "description": "Remove a budget goal from the database",
                "operationId": "GoalApi_RemoveBudgetGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "budgetGoalId",
                        "in": "path",
                        "description": "Budget goal id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/budget": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Save budget goal",
                "description": "Save in database a (new or existing) budget goal",
                "operationId": "GoalApi_SaveBudgetGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Budget goal model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveBudgetGoalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of budget goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BudgetGoalRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/budget/{goalId}": {
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "update budget goal",
                "description": "Update in database a budget goal for the user. Can only update amount, not category",
                "operationId": "GoalApi_UpdateBudgetGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Budget goal model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveBudgetGoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget goal",
                        "schema": {
                            "$ref": "#/definitions/BudgetGoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/budget/score": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Save budget goal score",
                "description": "Store in database the given budget goal score for the current user",
                "operationId": "GoalApi_SaveBudgetGoalScore",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "budgetGoalScore",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/retirement/default": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Create a default retirement goal",
                "description": "Create a default retirement goal for the current user, according to the given income",
                "operationId": "GoalApi_CreateDefaultRetirementGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "incomeRM",
                        "in": "body",
                        "description": "Income",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MoneyRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retirement goal",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/option/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get retirement goal options",
                "description": "Get the different possible options (as bot intents) for a retirement goal. The first retirement goal of the current user is taken",
                "operationId": "GoalApi_GetOptionsRetiredInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of retirement goal options",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThumbnailBotModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/expense/savings": {
            "get": {
                "tags": [
                    "Expense"
                ],
                "summary": "Get savings spendings",
                "description": "Get the savings spendings of the current user, according to given periods, spending modes, and transaction category",
                "operationId": "GoalApi_GetSavingsSpendings",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "Period type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "incomeSpendingMode",
                        "in": "query",
                        "description": "Spending mode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of retirement goal options",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SavingsSpendingsModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/expense/category": {
            "get": {
                "tags": [
                    "Expense"
                ],
                "summary": "Get expense category information",
                "description": "Get category information for given category and spending mode",
                "operationId": "GoalApi_GetCategoryInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "Category ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "spendingMode",
                        "in": "query",
                        "description": "Spending mode",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending category information",
                        "schema": {
                            "$ref": "#/definitions/SpendingCategoryModel"
                        }
                    }
                }
            }
        },
        "/api/goal/budget/category": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get budget goal spending category",
                "description": "Get the spending category corresponding to a budget goal",
                "operationId": "GoalApi_GetBudgetCategoryInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "budgetGoalId",
                        "in": "query",
                        "description": "Budget goal Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "spendingMode",
                        "in": "query",
                        "description": "Spending mode",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    },
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "Period type",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending category information",
                        "schema": {
                            "$ref": "#/definitions/SpendingCategoryModel"
                        }
                    }
                }
            }
        },
        "/api/expense/all": {
            "get": {
                "tags": [
                    "Expense"
                ],
                "summary": "Get expenses",
                "description": "Get the expenses related to the transactions of the current user",
                "operationId": "GoalApi_GetExpensesIncomes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of expenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExpensesIncome"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/fees": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get reduced fees",
                "description": "Get the reduced fees information related to the retirement goal of the current user",
                "operationId": "GoalApi_GetReducedFeesDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Reduced fees",
                        "schema": {
                            "$ref": "#/definitions/ReducedFeesInfo"
                        }
                    }
                }
            }
        },
        "/api/goal/priorities": {
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "Update goals priorities",
                "description": "Reset the priorities of the given goals of the current user",
                "operationId": "GoalApi_UpdatePrioritiesGoals",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalIds",
                        "in": "body",
                        "description": "Goals Ids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/return": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal average return",
                "description": "Get the average annual return rate for the default portfolio corresponding to a given goal",
                "operationId": "GoalApi_GetAverageReturnForPortfolio",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goal",
                        "in": "body",
                        "description": "Goal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal return",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/goal/drawdown": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal drawdown age",
                "description": "Get the drawdown age corresponding to a given goal",
                "operationId": "GoalApi_GetIncomeDrawDownAge",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goal",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal drawdown age",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/goal/target": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal default target",
                "description": "Get the estimated default target (i.e. money amount) for a given goal category",
                "operationId": "GoalApi_GetGoalEstimateDefaultTarget",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalCategory",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal default target",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal default target",
                "description": "Get the estimated default target (i.e. money amount) for a given goal category.",
                "operationId": "GoalApi_GetGoalEstimateDefaultTargetDataDriven",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalCategory",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "description": "parameters (e.g. location)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataDrivenGoalPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal default target",
                        "schema": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                }
            }
        },
        "/api/goal/target/inputs": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal default target parameters",
                "description": "Get the parameters to estimate default target (i.e. money amount) for a given goal category",
                "operationId": "GoalApi_GetGoalEstimateDefaultTargetInputs",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalCategory",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal default target",
                        "schema": {
                            "$ref": "#/definitions/DataDrivenGoalRefData"
                        }
                    }
                }
            }
        },
        "/api/goal/{goalId}/target/payload": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal target data",
                "description": "Retrieve information to calculate the goal target from the goal ID.",
                "operationId": "GoalApi_GetGoalTargetData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "Goal Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/DataDrivenGoalPayload"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/api/goal/achievement": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal achievement info",
                "description": "Get the estimated achievement information of a goal, using goal figures",
                "operationId": "GoalApi_GetEstimateGoalAchievementInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalAchievementInfoModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal achievement info",
                        "schema": {
                            "$ref": "#/definitions/GoalAchievementInfoRM"
                        }
                    }
                }
            }
        },
        "/api/goal/simplewealth/estimate": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get simple wealth goal estimate",
                "description": "Get the estimated information of a goal, using goal figures",
                "operationId": "GoalApi_GetEstimateGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal estimate",
                        "schema": {
                            "$ref": "#/definitions/GraphicGoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/simplewealth/estimate/{accountId}": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get simple wealth goal estimate using account investment stragegy",
                "description": "Get the estimated information of a goal, using goal figures",
                "operationId": "GoalApi_GetEstimateGoalWithAccount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal estimate",
                        "schema": {
                            "$ref": "#/definitions/GraphicGoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/bestage": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get best retirement age",
                "description": "Get the best retirement age (i.e. age to get at least 100% of goal value) for the current user",
                "operationId": "GoalApi_GetBestRetirementAgeToAchieveGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Goal with best age",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal": {
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "Save goal",
                "description": "Save in database a (new or existing) goal. Retirement, simple wealth (i.e. emergency fund), and consumption goals are supported.",
                "operationId": "GoalApi_SaveGoalAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Goal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveGoalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Create a goal",
                "description": "Create and store in database a goal from its goal information. Only simple wealth (i.e. emergency fund) goals are supported",
                "operationId": "GoalApi_CreateGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created goal",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/estimate": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Estimate a goal",
                "description": "Get a simulation of a goal. Only the retirement goal is supported.",
                "operationId": "GoalApi_EstimateGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Goal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveGoalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/GoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/budget/aggregated": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get aggregated budget goals",
                "description": "Get the aggregated budget goals (i.e. total money amount and number of goals) of the current user",
                "operationId": "GoalApi_GetAggregatedBudgetGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/top": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get top goals",
                "description": "Get the top goals of the current user, to be displayed in the home page.\r\n            For now we are just returning the retirement goal + Return the spending goal where it is likely the goal is going to be in overspending by at least 15% by the end of the month",
                "operationId": "GoalApi_GetTopGoalsForHomePage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "top goals information",
                        "schema": {
                            "$ref": "#/definitions/TopGoalsModel"
                        }
                    }
                }
            }
        },
        "/api/goal/budget/rate": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get budget goal spending rate",
                "description": "Get the spend rate and the amount spent in the current month for the budget goals of the current user and the given AIP category",
                "operationId": "GoalApi_GetSpendingGoalRate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "AIPCategoryId",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget goal spending rate",
                        "schema": {
                            "$ref": "#/definitions/Tuple[BudgetGoalRM,Double,Double]"
                        }
                    }
                }
            }
        },
        "/api/goal/{goalId}/account/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal related accounts",
                "description": "Get the accounts of the current user that are related to a given goal",
                "operationId": "GoalApi_GetGoalRelatedAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal related accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/type": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goals by category",
                "description": "Get all goals of the given type of the current user",
                "operationId": "GoalApi_GetGoalByType",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalType",
                        "in": "query",
                        "description": "Goal category",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/type/first": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get first goal by area",
                "description": "Get the first goal of the given type of the current user.",
                "operationId": "GoalApi_GetFirstGoalByGoalType",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalType",
                        "in": "query",
                        "description": "Goal area",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "First goal of required type",
                        "schema": {
                            "$ref": "#/definitions/GraphicGoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goals",
                "description": "Get all goals of the current user",
                "operationId": "GoalApi_GetGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/graphic": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get graphic goals (TBC)",
                "description": "Get all graphic goals of the current user",
                "operationId": "GoalApi_GetGraphicGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of graphic goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GraphicGoalRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/graphic/{goalId}": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get graphic goal",
                "description": "Retrieve goal information from its ID, and return it as a GraphicGoalModel",
                "operationId": "GoalApi_GetGraphicGoal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "Goal Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Graphic goal of required ID",
                        "schema": {
                            "$ref": "#/definitions/GraphicGoalRM"
                        }
                    }
                }
            }
        },
        "/api/goal/type/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get goal types",
                "description": "Get all possible goal types",
                "operationId": "GoalApi_GetGoalTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "onlyEnabled",
                        "in": "query",
                        "description": "Only enabled goals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeSpendingGoal",
                        "in": "query",
                        "description": "Include budget goal",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalTypesRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/suggested": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get suggested goals",
                "description": "Get suggested goals (as bot intents) for the current user, according to a given suggestion model",
                "operationId": "GoalApi_GetSuggestedGoals",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SuggestedGoalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThumbnailBotModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/account": {
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "Add or update account goal mapping",
                "description": "Link an account with a goal",
                "operationId": "GoalApi_AddOrUpdateAccountGoalMapping",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountGoalMapping",
                        "in": "body",
                        "description": "Account goal mapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountGoalMappingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Goal"
                ],
                "summary": "Delete account goal mapping",
                "description": "Unlink an account from a goal",
                "operationId": "GoalApi_RemoveAccountGoalMapping",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountGoalMapping",
                        "in": "body",
                        "description": "Account goal mapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountGoalMappingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/account/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get all account goal mappings for the user",
                "operationId": "GoalApi_GetAllGoalAccountMappingsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountGoalMappingModel"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "Add or update multiple account goal mapping",
                "operationId": "GoalApi_AddOrUpdateAccountGoalMappings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountGoalMappings",
                        "in": "body",
                        "description": "Account goal mappings",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountGoalMappingModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/{goalId}/account/mappeable": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get mappable accounts",
                "description": "Get Accounts that can be mapped with a goal",
                "operationId": "GoalApi_GetMappableSavingsAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountWithGoalsRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/account/mappeable": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get mappable accounts",
                "description": "Get Accounts that can be mapped with any saving goal",
                "operationId": "GoalApi_GetMappableSavingsAccounts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goalCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinancialAccountWithGoalsRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/account/{accountId}/distribution": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get account distribution on goals",
                "description": "Get account distribution on goals",
                "operationId": "GoalApi_GetAccountDistribution",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalBalanceRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/account/{accountId}/goal/all": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get mapped goals",
                "description": "Get mapped goals of the given account Id",
                "operationId": "GoalApi_GetMappedGoals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of mapped goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/savingplans": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get saving plans\r\nCustomGoalRecommended : flag recommendation to display custom goal instead of saving plans",
                "description": "Get saving plans",
                "operationId": "GoalApi_GetSavingPlans2",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavingPlanModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of saving plans",
                        "schema": {
                            "$ref": "#/definitions/SavingPlanList"
                        }
                    }
                }
            }
        },
        "/api/goal/resources": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get resources for the goal category : url articles on advices",
                "operationId": "GoalApi_GetGoalResources",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalCategory",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            4,
                            8,
                            16,
                            32,
                            64,
                            128,
                            256,
                            512,
                            1024,
                            2048,
                            4096,
                            8192,
                            16384,
                            32768,
                            65536,
                            131072,
                            262144,
                            524288,
                            1048576,
                            -1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnterpriseResourceRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/goal/{goalId}/portfolio": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get portfolio for goal (include default portfolio if goal has no portfolio)\r\nNB: Implemented only for simple wealth goals and retirement goals",
                "operationId": "GoalApi_GetPortfolio",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "Goal Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio",
                        "schema": {
                            "$ref": "#/definitions/PortfolioInfosRM"
                        }
                    }
                }
            }
        },
        "/api/goal/refresh": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Refreshes goals for the specified profile ids range, enterprise and refresh date.\r\nIf the range not specified, refreshes for the specified enterprise and refresh date.",
                "operationId": "GoalApi_RefreshGoals",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "refreshGoals",
                        "in": "body",
                        "description": "Contains all details necessary for the goal refresh.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshGoalsRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh",
                        "schema": {
                            "$ref": "#/definitions/RefreshGoalsInfoRM"
                        }
                    }
                }
            }
        },
        "/api/goalStatuses": {
            "put": {
                "tags": [
                    "Goal"
                ],
                "operationId": "GoalApi_UpdateGoalStatuses",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateGoalStatusesRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/goal/retirement/projection": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "project pension accounts used in retirement goal",
                "description": "Get a projection of retirement goal. Witout the target part (status, ideal monthly contribution,..)",
                "operationId": "GoalApi_EstimateRetirementGoalProjection",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/RetirementGoalProjectionRM"
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/simulate": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "simulate a retirement goal",
                "description": "Get a simulation of retirement goal",
                "operationId": "GoalApi_EstimateRetirementGoal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Goal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatedRetirementGoalModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/GoalAchievementInfoRM"
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/trackingstatus": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Calculates the offtrack status and percentage for the retirementgoal",
                "operationId": "GoalApi_GetRetirementGoalTrackingStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Retirement Goal Status",
                        "schema": {
                            "$ref": "#/definitions/GoalTrackStatusRM"
                        }
                    }
                }
            }
        },
        "/api/goal/retirement/statepension": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get User State Pension",
                "description": "Return null if user has no defined state pension",
                "operationId": "GoalApi_GetUserStatePension",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Goal",
                        "schema": {
                            "$ref": "#/definitions/UserStatePensionRM"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Save User State Pension",
                "description": "Replace user state pension if user already has one",
                "operationId": "GoalApi_SaveUserStatePension",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userStatePensionRM",
                        "in": "body",
                        "description": "User State Pension",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserStatePensionRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal"
                    }
                }
            }
        },
        "/api/goal/account/mappable": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Get mappable goal categories",
                "description": "Get goal categories that can be mapped with the account type",
                "operationId": "GoalApi_GetMappableGoalCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountType",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goal categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoalTypesRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/handoff/addconnection": {
            "post": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_CreateConnectionRequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "connectionRequestInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectionRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new connection request",
                        "schema": {
                            "$ref": "#/definitions/BotConnectionRequest"
                        }
                    }
                }
            }
        },
        "/api/handoff/pendings": {
            "get": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_GetPendingHandoffRequests",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "skillId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get pendings handoff requests",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BotConnectionRequestRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/handoff/connectionrequest": {
            "get": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_GetConnectionRequest",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "End handoff session",
                        "schema": {
                            "$ref": "#/definitions/BotConnectionRequest"
                        }
                    }
                }
            }
        },
        "/api/handoff/handoffsession": {
            "get": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_GetHandoffSession",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get handoff session from user or agent session",
                        "schema": {
                            "$ref": "#/definitions/BotHandoffSession"
                        }
                    }
                }
            }
        },
        "/api/handoff/createsession": {
            "post": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_CreateHandoffSession",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "handoffSessionInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotHandoffSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a handoff session",
                        "schema": {
                            "$ref": "#/definitions/BotHandoffSession"
                        }
                    }
                }
            }
        },
        "/api/handoff/endsession": {
            "get": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_EndHandoffSession",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "handoffSessionId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "senderId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "End handoff session",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/handoff/sendmessage": {
            "post": {
                "tags": [
                    "Handoff"
                ],
                "operationId": "HandoffApi_SendMessage",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "handoffSessionMessage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HandoffSessionMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Send a message to a party of handoff session",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/kc/posts": {
            "get": {
                "tags": [
                    "Knowledge Center"
                ],
                "summary": "Get posts",
                "description": "Get Knowledge Centre Blog Posts",
                "operationId": "KnowledgeApi_GetKcBlogPosts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query to transmit to WordPress (can be null to disable search).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the results page that will be retrieved. Number of elements by page is set to 20.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filteredCategories",
                        "in": "query",
                        "description": "Post categories (comma-separated values).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postIds",
                        "in": "query",
                        "description": "Post IDs (comma-separated values).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userPersonaeFilter",
                        "in": "query",
                        "description": "Whether articles that are tagged with the user persona(e) should be retrieved, and the ones tagged with other personae ignored.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "personaArticlesOnly",
                        "in": "query",
                        "description": "Whether only persona-tagged articles should be retrieved, or untagged articles should be fetched as well.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filteredTags",
                        "in": "query",
                        "description": "Post tags (comma-separated values).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeHiddenPosts",
                        "in": "query",
                        "description": "include hidden posts (with the category Hidden).",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of posts for each content publisher",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KcPostsPublisherRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/kc/posts/public": {
            "get": {
                "tags": [
                    "Knowledge Center"
                ],
                "summary": "Get public posts for specific tags",
                "description": "Get Knowledge Centre public blog posts by tag, the full content is returned",
                "operationId": "KnowledgeApi_GetKcPublicBlogPosts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the results page that will be retrieved. Number of elements by page is set to 20.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "publicPostTags",
                        "in": "query",
                        "description": "Public Post tags (comma-separated values).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of public posts for each content publisher",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KcPostsPublisher"
                            }
                        }
                    }
                }
            }
        },
        "/api/nba/product": {
            "post": {
                "tags": [
                    "NBA"
                ],
                "summary": "Gets the list of the recommended product categories for the model and entities defined in the body.",
                "operationId": "NbaApi_GetNbaProducts",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "nbaModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NbaModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommended products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicyProductCategoryRM"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/nba/accounttype": {
            "post": {
                "tags": [
                    "NBA"
                ],
                "summary": "Gets the recommended account types to achieve a user goal.",
                "description": "Takes user inputs about their investment purposes, and uses a rule-based mechanism to determine which account types they can use for their investment. Also return the reasons that led to the recommendations.",
                "operationId": "NbaApi_GetRecommendedAccountType",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "nbaModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NbaModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommended account type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountTypeRM"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/nudge/notification/all": {
            "put": {
                "tags": [
                    "Nudge"
                ],
                "summary": "Update notifications",
                "description": "Update a list of notifications in database, using notification objects",
                "operationId": "NudgeApi_UpdateNotifications",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "notificationsRM",
                        "in": "body",
                        "description": "List of notifications",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationRM"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Nudge"
                ],
                "summary": "Get notifications details",
                "description": "Get all notifications of a given channel. Only the valid ones (i.e. visible to the current user, not dismissed or archived, and planned to an already passed date) are shown",
                "operationId": "NudgeApi_GetNotifications",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Notification channel type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "SMS",
                            "APP_INSTANT",
                            "APP_BATCH",
                            "EMAIL",
                            "WEB_PUSH",
                            "PUSH",
                            "POST",
                            "CARD",
                            "WEB_PUSH_AND_APP",
                            "WEB_PUSH_AND_INSTANT",
                            "SMS_AND_APP",
                            "EMAIL_AND_APP",
                            "ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/nudge/notification/{id}": {
            "put": {
                "tags": [
                    "Nudge"
                ],
                "summary": "Update notification",
                "description": "Update a notification in database, using a notification object",
                "operationId": "NudgeApi_UpdateNotification",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "notificationRM",
                        "in": "body",
                        "description": "Notification to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationRM"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Nudge"
                ],
                "summary": "Get notification",
                "description": "Get a notification from its ID or short URL. It must be valid (i.e. visible to the current user, not dismissed or archived, and planned to an already passed date)",
                "operationId": "NudgeApi_GetNotification",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID or short URL of the notification",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification",
                        "schema": {
                            "$ref": "#/definitions/NotificationRM"
                        }
                    }
                }
            }
        },
        "/api/nudge/token": {
            "get": {
                "tags": [
                    "Nudge"
                ],
                "summary": "Get nudge centre standalone token",
                "description": "Get access token to access the nudge centre standalone component",
                "operationId": "NudgeApi_GetNudgeCentreStandaloneToken",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Access Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/payment/feature/{pfeatureId}/available": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Is product feature available",
                "description": "Check if a given product feature is available to the connected user",
                "operationId": "PaymentServiceApi_IsProductFeatureAvailable",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pfeatureId",
                        "in": "path",
                        "description": "ID of the product feature",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature available",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/payment/product/all": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get products",
                "description": "Get the products corresponding to the enterprise of the current user, with plans of the selected recurrence type",
                "operationId": "PaymentServiceApi_GetProducts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "ONE_OFF_CHARGE",
                            "RECURRING_MONTHLY",
                            "RECURRING_YEARLY"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/feature/availability": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get product features availabilities",
                "description": "Get all owned and potential product feature availability objects, corresponding to given feature types, available to the current user",
                "operationId": "PaymentServiceApi_GetProductFeaturesAvailabilities",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "featureTypes",
                        "in": "body",
                        "description": "Types of features",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product features availabilities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductFeatureAvailabilityRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/feature/availability/all": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get all product features availabilities",
                "description": "Get all owned and potential product feature availability objects available to the current user",
                "operationId": "PaymentServiceApi_GetAllProductFeaturesAvailabilities",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of product features availabilities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductFeatureAvailabilityRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/permission/[{category}]{domain}/{perimeter}@{operation}/{entityId}": {
            "get": {
                "tags": [
                    "Privilege"
                ],
                "operationId": "PermissionApi_QueryPermissionAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "perimeter",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operation",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indication wheter the permission is granted",
                        "schema": {
                            "$ref": "#/definitions/PermissionRequestRM"
                        }
                    }
                }
            }
        },
        "/api/permissions/[{category}]{domain}/{perimeter}@{operation}": {
            "get": {
                "tags": [
                    "Privilege"
                ],
                "operationId": "PermissionApi_QueryPermissionsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "perimeter",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operation",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query all the permissions based on a privilege",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionRequestRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/permission/all": {
            "get": {
                "tags": [
                    "Privilege"
                ],
                "operationId": "PermissionApi_GetPermissions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Query all the user's permissions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionRequestRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/policy/all": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets all policies for the connected user. If status is specified, all policies with this status will be retrieved.",
                "description": "Gets raw data for all user’s policies including financial account, total coverages, beneficiaries count",
                "operationId": "PolicyApi_GetPolicies",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NotDefined",
                            "Active",
                            "Pending",
                            "InActive"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User policies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicyOverviewRM"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/policy/{policyId}": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets the policy details by the policy id for the connected user.",
                "operationId": "PolicyApi_GetPolicy",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Policy details by id",
                        "schema": {
                            "$ref": "#/definitions/PolicyRM"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/product/all": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets all the available products for the connected user or enterprise, translated in the caller's language.",
                "description": "",
                "operationId": "PolicyApi_GetProducts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of element to return. If 0 returns all elements",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[PolicyProductRM]"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/category/{categoryType}/product/all": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets all the available products for the specified category (family) for the connected user or enterprise, translated in the caller's language.",
                "operationId": "PolicyApi_GetProductsByCategoryType",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryTypeCode",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "categoryType",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products by the category",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicyProductRM"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/product/{productId}": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets the product details by the product id for the connected user or enterprise, translated in the caller's language.",
                "operationId": "PolicyApi_GetProduct",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details by id",
                        "schema": {
                            "$ref": "#/definitions/PolicyProductRM"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/product/category/{categoryIdOrCode}": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets the product category by the category id for the connected user or enterprise, translated in the caller's language.",
                "operationId": "PolicyApi_GetProductCategory",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryIdOrCode",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product category details by id",
                        "schema": {
                            "$ref": "#/definitions/PolicyProductCategoryRM"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/product/category/code/{categoryCode}": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Gets the product category by the category code for the connected user or enterprise, translated in the caller's language.",
                "operationId": "PolicyApi_GetProductCategoryByCode",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryCode",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product category details by code",
                        "schema": {
                            "$ref": "#/definitions/PolicyProductCategoryRM"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/portfolio/{id}/allocation": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get portfolio asset allocation",
                "description": "Get the asset allocations of a given portfolio",
                "operationId": "PortfoliosApi_GetPortfolioInfos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Portfolio Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of asset allocation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetAllocationRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/portfolio/{id}/allocation/assetclass": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get portfolio asset class allocation",
                "description": "Get the asset allocations of a given portfolio",
                "operationId": "PortfoliosApi_GetPortfolioInfosAssetClassAllocation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Portfolio Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of asset classes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetAllocationItem"
                            }
                        }
                    }
                }
            }
        },
        "/api/portfolio/{id}/risk/grade": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get risk profile grade associated to the portfolio id",
                "description": "Get the risk grade corresponding to the risk profile of the portfolio.",
                "operationId": "PortfoliosApi_GetPortfolioRiskGrade",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Risk Grade",
                        "schema": {
                            "$ref": "#/definitions/RiskGrade"
                        }
                    }
                }
            }
        },
        "/api/portfolio/drawdown": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get available drawdown portfolios",
                "description": "Get the list of drawdown portfolios based on active pension investment strategy.",
                "operationId": "PortfoliosApi_GetPortfoliosForDrawdown",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Drawdown portfolios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PortfolioCompleteInfosRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/glidepath": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get available glidepaths",
                "description": "Get the list of glidepaths objects.",
                "operationId": "PortfoliosApi_GetGlidepaths",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Glidepath information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GuidedPortfoliosRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/glidepath/{id}": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get selected glidepath details",
                "description": "Get glidepath details.",
                "operationId": "PortfoliosApi_GetGlidepathDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Selected Glidepath information",
                        "schema": {
                            "$ref": "#/definitions/GuidedPortfoliosDetails"
                        }
                    }
                }
            }
        },
        "/api/report/{reportId}/token": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get Power BI embed token",
                "description": "Get Power bi embed token based on enterprise name and user roles",
                "operationId": "ReportApi_GetReportToken",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EmbedConfig",
                        "schema": {
                            "$ref": "#/definitions/EmbedConfig"
                        }
                    }
                }
            }
        },
        "/api/report/all": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get all accessible reports",
                "description": "Get reports based on user roles",
                "operationId": "ReportApi_GetReports",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "EmbedConfig",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportViewModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/ris": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get employment period from RIS",
                "description": "Get all period definitions from french RIS",
                "operationId": "RetirementOptionsApi_GetRetirementInformationAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "French retirement information status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmploymentPeriodRM"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Set employment period in RIS",
                "description": "Set working period definitions to update french RIS",
                "operationId": "RetirementOptionsApi_SetRetirementInformationAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "periods",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmploymentPeriodRM"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Remove employment period from RIS",
                "operationId": "RetirementOptionsApi_DeleteRetirementInformationAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "periodIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employment period deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/retirement/ppo": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Remove employment period from RIS",
                "operationId": "RetirementOptionsApi_FetchPrivatePensionProviderOverviews",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "The list of the private pension providers overviews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivatePensionProviderOverviewRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/drawdown/info": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get drawdown data infos",
                "description": "Get the retirement information for drawdown, according to given options",
                "operationId": "RetirementOptionsApi_DrawdownDataInfos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "description": "Retirement options input",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drawdown infos",
                        "schema": {
                            "$ref": "#/definitions/DrawdownInfos"
                        }
                    }
                }
            }
        },
        "/api/retirement/duration": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get estimated retirement duration",
                "description": "Get the estimated retirement duration before the current user's death, using life expectancy statistics",
                "operationId": "RetirementOptionsApi_GetRetirementIncomeYear",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "retirementAge",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retirement duration",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/retirement/target": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get net target retirement income",
                "description": "Get the annual net retirement income, computed from the current user's gross income and personal expenses",
                "operationId": "RetirementOptionsApi_GetTargetRetirementIncomeFromExpenses",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Target retirement income from expenses",
                        "schema": {
                            "$ref": "#/definitions/TargetRetirementIncomeFromExpensesModel"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/info": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get annuity info",
                "description": "Get the retirement information for annuity, according to given options",
                "operationId": "RetirementOptionsApi_AnnuityDataInfos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "description": "Retirement options input",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity infos",
                        "schema": {
                            "$ref": "#/definitions/AnnuityInfos"
                        }
                    }
                }
            }
        },
        "/api/retirement/privateincome": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get private income estimation",
                "description": "Get a private income estimation, according to requested estimation options (type of private income, requested piece of information, etc.).",
                "operationId": "RetirementOptionsApi_GetEstimatedPrivateIncome",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "privateIncomeSimulationOptions",
                        "in": "body",
                        "description": "Simulation parameters.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PrivateIncomeSimulationInputRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation output value",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivateIncomeSimulationOutputRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/options/info": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_RetirementDataInfos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retirement infos",
                        "schema": {
                            "$ref": "#/definitions/RetirementOptions"
                        }
                    }
                }
            }
        },
        "/api/retirement/idealRetirementAge": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Provide country's constraints on retirement",
                "operationId": "RetirementOptionsApi_EstimateIdealRetirementAgeAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "firstEmploymentAge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's ideal retirement age depending on legal values",
                        "schema": {
                            "$ref": "#/definitions/ValueTuple[Int32,Int32,Int32]"
                        }
                    }
                }
            }
        },
        "/api/retirement/drawdown/context": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get drawdown context validity",
                "description": "Get the context status for drawdown, according to given options",
                "operationId": "RetirementOptionsApi_IsDrawdownContextValid",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "description": "Retirement options input",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drawdown context valid",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/retirement/drawdown": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Purchase drawdown",
                "description": "Create a transaction for the current user to validate a drawdown purchase, using its given information",
                "operationId": "RetirementOptionsApi_PurchaseDrawdown",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "drawdownConfirm",
                        "in": "body",
                        "description": "Drawdown infos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DrawdownConfirmation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction reference number or signature URL",
                        "schema": {
                            "$ref": "#/definitions/DrawdownPurchaseRM"
                        }
                    }
                }
            }
        },
        "/api/retirement/drawdown/document": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get drawdown figures",
                "description": "Get a PDF file that summarises given drawdown information (e.g. amount, yearly income, drawdown age, etc.)",
                "operationId": "RetirementOptionsApi_DrawdownKeyFeatures",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "drawdownInfos",
                        "in": "body",
                        "description": "Drawdown infos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DrawdownInfos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/retirement/drawdown/form": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Download application form for specific tracing request",
                "operationId": "RetirementOptionsApi_GetApplicationFormForTransaction",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "redirectURL",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction reference number or signature URL",
                        "schema": {
                            "$ref": "#/definitions/DrawdownPurchaseRM"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/occupations": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesOccupations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity Occupations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/otherconditions": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesOtherConditions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity Other conditions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/medications": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesMedications",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity medication names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/cancers": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesCancerTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity cancer names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/cancersurgeries": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesCancerSurgeries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity Cancer Surgeries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/heartotherdiagnoses": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesOtherHeartDiags",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity Other heart diagnoses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/respiratoryotherdiagnoses": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesOtherRespiratoryDiags",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity other respiratory diagnoses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/neurologicalotherdiagnoses": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_AnnuityQuotesOtherNeurologicalDiags",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchFilter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity other neurological diagnoses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get annuity form",
                "description": "Get an empty annuity form, to be filled to compute the quotes, from its given resource key",
                "operationId": "RetirementOptionsApi_AnnuityQuotesForm",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "formKey",
                        "in": "query",
                        "description": "Annuity resource key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity form",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuotesFormRequest"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Confirm annuity quote",
                "description": "Create a transaction for the current user to validate an annuity quote, using its given information",
                "operationId": "RetirementOptionsApi_AnnuityQuoteConfirmation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "validation",
                        "in": "body",
                        "description": "Annuity quote validation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuoteConfirmation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm an annuity quote",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuoteConfirmationResult"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/block/{annuityCaseId}": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get information block from annuity case.",
                "description": "if no case id parameter is set, new annuity case is created.\r\nif no block id is set, default is set to 1_1 (client information)",
                "operationId": "RetirementOptionsApi_GetAnnuityBlock",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "blockId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity case block",
                        "schema": {
                            "$ref": "#/definitions/AnnuityBlock"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Retirement"
                ],
                "operationId": "RetirementOptionsApi_SetAnnuityBlock",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataBlock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AnnuityBlock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity case block statuses",
                        "schema": {
                            "$ref": "#/definitions/AnnuityBlockCommon"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/{annuityCaseId}": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Compute annuity quotes",
                "description": "Use valid annuity case data to compute annuity quotes",
                "operationId": "RetirementOptionsApi_FetchProcessedAnnuityQuotes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compute annuity quotes",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuotesModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Compute annuity quotes and get references to use when retreiving quotes data",
                "description": "Use valid annuity case data to compute annuity quotes",
                "operationId": "RetirementOptionsApi_ProcessAnnuityQuotes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compute annuity quotes",
                        "schema": {
                            "$ref": "#/definitions/AnnuityCaseReferencesData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Clean annuity case data",
                "description": "Remove data from annuity case, and cancel transaction if needed",
                "operationId": "RetirementOptionsApi_DeleteAnnuityCase",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compute annuity quotes",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuotesModel"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/document": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Download temporary documents for specific annuity quotes",
                "operationId": "RetirementOptionsApi_DownloadQuoteDocument",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fileRef",
                        "in": "query",
                        "description": "reference of the file to download",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "docType",
                        "in": "query",
                        "description": "document type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "KeyFacts",
                            "CQF"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/retirement/annuity/{annuityCaseId}/detail": {
            "get": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get full annuity quote information",
                "operationId": "RetirementOptionsApi_GetAnnuityQuoteInformation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "annuityCaseId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity quote information",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuoteConfirmed"
                        }
                    }
                }
            }
        },
        "/api/retirement/annuity/signature": {
            "put": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Get annuity documents signature url to resume previous flow",
                "operationId": "RetirementOptionsApi_GetAnnuityQuoteSignature",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuoteSignature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annuity quote signature",
                        "schema": {
                            "$ref": "#/definitions/AnnuityQuoteConfirmationResult"
                        }
                    }
                }
            }
        },
        "/api/retirement/retirementoptionstransaction": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create retirement options transaction",
                "description": "Create a transaction for the current user retirement option",
                "operationId": "RetirementOptionsApi_CreateRetirementOptionsTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "retirementOptionsOutput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create retirement options transaction",
                        "schema": {
                            "$ref": "#/definitions/RetirementOptions"
                        }
                    }
                }
            }
        },
        "/api/retirement/keepinvestment/info": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Keep pension investment",
                "description": "Prepare the choice to keep retirement investment money (i.e. leave pension pot untouched) for the current user, using given retirement information",
                "operationId": "RetirementOptionsApi_KeepPensionInvested",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keep investement infos",
                        "schema": {
                            "$ref": "#/definitions/KeepInvestedInfos"
                        }
                    }
                }
            }
        },
        "/api/retirement/keepinvestment": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Confirm keep pension investment",
                "description": "Validate the choice to keep retirement investment money (i.e. leave pension pot untouched) for the current user, using given retirement information",
                "operationId": "RetirementOptionsApi_ConfirmKeepPensionInvested",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "validation",
                        "in": "body",
                        "description": "Keep pension investment validation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KeepPensionInvestmentConfirmation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction reference number",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/retirement/withdraw/info": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "",
                "description": "Simulation of pension pot withdrawal for the current user, using given retirement and withdrawal information",
                "operationId": "RetirementOptionsApi_WithdrawCashData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "optionsInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RetirementOptionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Withdraw context infos",
                        "schema": {
                            "$ref": "#/definitions/WithdrawCashInfos"
                        }
                    }
                }
            }
        },
        "/api/retirement/withdraw": {
            "post": {
                "tags": [
                    "Retirement"
                ],
                "summary": "Confirm pension withdraw",
                "description": "Validate the choice to withdraw all money from the pension pot for the current user, using given retirement and withdrawal information",
                "operationId": "RetirementOptionsApi_ConfirmCashWithdraw",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "validation",
                        "in": "body",
                        "description": "Pension withdraw confirmation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PensionWithdrawConfirmation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction reference number",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/skills/all": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "operationId": "SkillsApi_GetSkills",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of all skills ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Skill"
                            }
                        }
                    }
                }
            }
        },
        "/api/supportmanagement/users": {
            "post": {
                "tags": [
                    "SupportManagementApi"
                ],
                "operationId": "SupportManagementApi_GetFilteredPaginatedUsers",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileFilterViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of paginated FO users",
                        "schema": {
                            "$ref": "#/definitions/PagingModel[MinimumProfileRM]"
                        }
                    }
                }
            }
        },
        "/api/transaction/all": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all transactions",
                "description": "Get all transactions visible to the current user, following a given filter on e.g. type, date, status, etc.",
                "operationId": "TransactionApi_GetTransactions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "Transaction filter applied on the search query",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileTransactionRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction",
                "description": "Get a transaction object from its ID",
                "operationId": "TransactionApi_GetTransaction",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "query",
                        "description": "Id of the transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile transaction",
                        "schema": {
                            "$ref": "#/definitions/ProfileTransactionRM"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update transaction",
                "description": "Update an existing transaction in database, for the current user, from a given transaction object",
                "operationId": "TransactionApi_UpdateTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "body",
                        "description": "Profile transaction",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileTransactionRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add transaction",
                "description": "Save a transaction in database from a given transaction object",
                "operationId": "TransactionApi_AddTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "body",
                        "description": "Profile transaction",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileTransactionRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete transaction",
                "description": "Delete an existing transaction in database, for the current user, given its ID",
                "operationId": "TransactionApi_DeleteTransaction",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "query",
                        "description": "Id of the transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/transaction/email": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Send transaction email",
                "description": "Send a transaction email using a given template key, to the address and using the enterprise templates corresponding to the current user",
                "operationId": "TransactionApi_SendEmailForTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionEmail",
                        "in": "body",
                        "description": "Transaction email template",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/transaction/payloads": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transactions payloads by user Id",
                "operationId": "TransactionApi_GetTransactionPayloadsByUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions payloads"
                    }
                }
            }
        },
        "/api/transaction/pension/increasecontribution": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a pension increase contribution transaction",
                "description": "Increase the current user's contribution to its pension, and send a confirmation email. A previous increase must not have been performed less than a month ago",
                "operationId": "TransactionApi_AddPensionIncreaseContributionTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionPayload",
                        "in": "body",
                        "description": "Transaction payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IncreasePensionContributionTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transaction/pension/switchfunds": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a pension switch funds transaction",
                "description": "Switch the current user's funds to the selected one, and send a confirmation email. A previous switch must not have been performed less than a month ago",
                "operationId": "TransactionApi_AddSwitchFundsTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionPayload",
                        "in": "body",
                        "description": "Transaction payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePensionInvestmentsTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transaction/savings/monthly": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a monthly contribution for a saving account transaction",
                "operationId": "TransactionApi_AddSavingContributionTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionPayload",
                        "in": "body",
                        "description": "Transaction payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavingMonthlyContributionTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transaction/savings/single": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a single contribution for a saving account transaction",
                "operationId": "TransactionApi_AddSavingSingleTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionPayload",
                        "in": "body",
                        "description": "Transaction payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavingSingleContributionTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transaction/callback": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a call back transaction",
                "operationId": "TransactionApi_AddCallBackTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transactionPayloadRM",
                        "in": "body",
                        "description": "Transaction payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CallMeBackTransactionRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id of the transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transaction/account/{accountId}/beneficiaries": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a beneficiaries transaction",
                "description": "The transaction contains beneficiaries data and is supposed to be processed later to update beneficiaries.",
                "operationId": "TransactionApi_CreateBeneficiariesTransaction",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "beneficiariesRM",
                        "in": "body",
                        "description": "List of beneficiaries",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryForTransaction"
                            }
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transfer/investment": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get investment options",
                "description": "Get the investment options for pension transfer (i.e. corresponding portfolio information) of the current user",
                "operationId": "TransferApi_GetInvestmentOptions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of portfolios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PortfoliosInfos"
                            }
                        }
                    }
                }
            }
        },
        "/api/transfer": {
            "post": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Transfer pension",
                "description": "Transfer a pension using a transfer object for the current user, generate and save a transfer form, and send a confirmation of transaction email",
                "operationId": "TransferApi_TransferPensionAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transferPensionInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransferPensionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer pension signing url and transaction Id",
                        "schema": {
                            "$ref": "#/definitions/TransferPensionOutput"
                        }
                    }
                }
            }
        },
        "/api/transfer/document": {
            "post": {
                "tags": [
                    "Transfer"
                ],
                "operationId": "TransferApi_TransferPensionDocument",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transferPension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PensionTransferTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/transfer/providers": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get supported providers",
                "description": "Get the different providers that are available for transfer to the current user.",
                "operationId": "TransferApi_GetSupportedProvidersAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of supported providers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/transfer/sign": {
            "post": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Sign transfer form",
                "description": "Create a transfer document from a transaction ID, and sign it",
                "operationId": "TransferApi_SignTransferDocument",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Id of the transaction, and redirection url",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransferPensionConfirmation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signing url",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transfer/info": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get transfer information",
                "description": "Get the transfer information for given provider and/or account",
                "operationId": "TransferApi_GetLinkTransferInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "providerAccountId",
                        "in": "query",
                        "description": "ID of provider account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "ID of account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkTransferInfoModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/lifeexpectancy": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get life expectancy",
                "description": "Get the life expectancy of the current user, i.e. their estimated death age",
                "operationId": "UserApi_GetLifeExpectancyAge",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Life expectancy of the user",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current user",
                "description": "Get the profile and enterprise selector configuration corresponding to the current user",
                "operationId": "UserApi_GetUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Profile and enterprise configuration corresponding to the current user",
                        "schema": {
                            "$ref": "#/definitions/ProfileRM"
                        }
                    }
                }
            }
        },
        "/api/user/search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Search Customer by Login or AlternateIdentifier",
                "description": "Get the profile ID corresponding to a user login, if it belongs to the current enterprise.",
                "operationId": "UserApi_SearchEnterpriseCustomer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "login",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "alternativeIdentifier",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "alternativeIdentifier2",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/autogeneratelogin": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Autogenerate Login",
                "description": "Generate login automatically by concatenating firstname and lastname  with random number.",
                "operationId": "UserApi_GetAutogeneratedUsername",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "firstname",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User name",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user ID by login",
                "description": "Get the profile ID corresponding to a user login, if it belongs to the current enterprise.",
                "operationId": "UserApi_GetEnterpriseCustomerByLogin",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "login",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/info": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user basics",
                "description": "Get basic information about the current user",
                "operationId": "UserApi_GetUserMinimumInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Basic info of the user profile",
                        "schema": {
                            "$ref": "#/definitions/MinimumProfile"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Save user",
                "description": "Fetch provided user information from the request body, and save it in database in the current user's profile",
                "operationId": "UserApi_SaveUserInformations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/sensitive": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user sensitive information",
                "description": "Get sensitive info the current user",
                "operationId": "UserApi_GetUserSensitiveInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Sensitive info of the user profile",
                        "schema": {
                            "$ref": "#/definitions/UserSensitiveInfo"
                        }
                    }
                }
            }
        },
        "/api/user/details": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Save user",
                "description": "Fetch provided user information from the request body, and save it in database in the current user's profile",
                "operationId": "UserApi_SaveUserProfileInformation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "updatedProfile",
                        "in": "body",
                        "description": "profile details model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/tax": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get tax band",
                "description": "Get the tax band (i.e. percentage) the current user is in, according to their country taxation",
                "operationId": "UserApi_GetTaxBand",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "User tax band",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/api/user/maritalstatuses": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get enterprise marital statuses list",
                "operationId": "UserApi_GetMaritalStatuses",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of marital statuses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Unknown",
                                    "Married",
                                    "CivilPartnership",
                                    "Divorced",
                                    "Separated",
                                    "Widowed",
                                    "Single",
                                    "Partner",
                                    "LegallySeparated",
                                    "SameSexMarriage",
                                    "SameSexRelationship",
                                    "CommonLaw"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/insight": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a customer insight tag to your profile",
                "operationId": "UserApi_AddProfileCustomerInsightTag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "customer insight tag",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user/insight/all": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all customer insight tags",
                "operationId": "UserApi_GetProfileCustomerInsightTag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of profile insight tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerInsightsTagRM"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/import/exist": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Check if we have matching data for these informations on the customer data source",
                "operationId": "UserApi_CheckIfRecordExist",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileDataToCheck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of match found and matched informations",
                        "schema": {
                            "$ref": "#/definitions/ImportDataCheckUserExist"
                        }
                    }
                }
            }
        },
        "/api/user/import/confirm": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Import user data from the customer data source",
                "operationId": "UserApi_ConfirmImportUserData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileDataToCheck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/import/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Import user data from the customer data source",
                "operationId": "UserApi_UpdateExistingUserData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "alternativeIdentifierObject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/import/upsert": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "UserApi_UpsertUserData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "alternativeIdentifierObject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/import/financialconsultant/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Import user financial consultant data from the customer data source",
                "operationId": "UserApi_UpdateExistingUserFinancialConsultantData",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "profileObject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/device": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Add a device",
                "description": "Add a device in database for the current user (i.e. profile), given its ID",
                "operationId": "UserApi_AddProfileDevice",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "query",
                        "description": "Id of the device",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Device"
                ],
                "summary": "Remove a device",
                "description": "Remove a device from database for the current user (i.e. profile), given its ID",
                "operationId": "UserApi_DeleteProfileDevice",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "query",
                        "description": "Id of the device",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/support/comments": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get support request comments",
                "description": "Get the comments (as a list of users and comments) for a given support request ID",
                "operationId": "UserApi_GetSupportRequestComments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "query",
                        "description": "ID of the support request",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of support comments",
                        "schema": {
                            "$ref": "#/definitions/ResponseRequestComments"
                        }
                    }
                }
            }
        },
        "/api/support": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get support requests",
                "description": "Get the support requests of the current user from ZenDesk. Do not display tickets removed by the user, as well as those solved for more than a month",
                "operationId": "UserApi_GetSupportRequests",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of support requests",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ticket"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Create support request",
                "description": "Create a support request for the current user, using given data",
                "operationId": "UserApi_CreateSupportRequests",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Support request to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SupportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created support request",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Support"
                ],
                "summary": "Delete support request",
                "description": "Put a support request in \"removed by user\" state for the current user, given its ID",
                "operationId": "UserApi_RemoveSupportRequest",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "query",
                        "description": "ID of the request",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/support/options": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get support requests options",
                "description": "Get the different options of the Abaka field for support requests",
                "operationId": "UserApi_GetSupportRequestsCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of support request options",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldOption"
                            }
                        }
                    }
                }
            }
        },
        "/api/preference": {
            "get": {
                "tags": [
                    "User Preference"
                ],
                "summary": "Gets the list of the preferred entity type passed in parameter",
                "operationId": "UserPreferenceApi_GetPreferences",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "Entity type of the preference requested",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "POLICY_CATEGORY",
                            "POLICY_PRODUCT",
                            "KNOWLEDGE_ARTICLE"
                        ]
                    },
                    {
                        "name": "preferenceTypes",
                        "in": "query",
                        "description": "List of preference types used to return the recommended categories (if empty no filtering will be applied).The items should be separated by | if multiple ones are needed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommended items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserPreferenceRM"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            },
            "post": {
                "tags": [
                    "User Preference"
                ],
                "summary": "Create a new preference for a user on a specific entity.\r\nIf Type is NOT_INTERESTED, the valid FeedbackReason must be provided.",
                "description": "If a preference for this user on this entity already exists this one will replace it.\r\n            In order to add NOT_INTERESTED preference, there is a need to provide FeedbackReason.\r\n            To get all valid NOT_INTERESTED feedback reasons, the API GET api/feedback/notinterested/all should be called.",
                "operationId": "UserPreferenceApi_AddUserPreference",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "preference",
                        "in": "body",
                        "description": "User preference to save",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserPreferenceRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Preference"
                ],
                "summary": "Remove a new preference for a user on a specific entity",
                "operationId": "UserPreferenceApi_RemoveUserPreference",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "preference",
                        "in": "body",
                        "description": "User preference to remove",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteUserPreferenceRM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                }
            }
        }
    },
    "definitions": {
        "ProfileFilterViewModel": {
            "type": "object",
            "properties": {
                "Reseller": {
                    "type": "string"
                },
                "Enterprise": {
                    "type": "string"
                },
                "DisplayDisabled": {
                    "type": "boolean"
                },
                "CreationDateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "UpdateDateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "ApplicationActivities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ActivityDateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "ApplicationAccess": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "EligibleSortColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "Keywords": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "RecordsPerPage": {
                    "format": "int32",
                    "type": "integer"
                },
                "SortDirection": {
                    "type": "string"
                },
                "SortColumn": {
                    "type": "string"
                }
            }
        },
        "DateRange": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PagingModel[MinimumProfileRM]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MinimumProfileRM"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MinimumProfileRM": {
            "required": [
                "lastName",
                "firstName",
                "login",
                "email"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "birthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "createdDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "disabledDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "alternativeIdentifier": {
                    "type": "string"
                },
                "alternativeIdentifier2": {
                    "type": "string"
                },
                "applicationRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "personae": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApplicationRoleRM": {
            "type": "object",
            "properties": {
                "roleName": {
                    "type": "string"
                },
                "applicationName": {
                    "type": "string"
                },
                "roleState": {
                    "$ref": "#/definitions/RoleStateRM"
                }
            }
        },
        "RoleStateRM": {
            "type": "object",
            "properties": {
                "isAssigned": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                }
            }
        },
        "RoleStatusRM": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "RoleUniqueName": {
                    "type": "string"
                }
            }
        },
        "BusinessProfileRM": {
            "required": [
                "resellerUniqueName",
                "enterpriseUniqueName",
                "mobilePhone",
                "status",
                "lastName",
                "firstName",
                "login",
                "email"
            ],
            "type": "object",
            "properties": {
                "resellerUniqueName": {
                    "type": "string"
                },
                "enterpriseUniqueName": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "activatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastLoginDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "birthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "createdDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "disabledDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "alternativeIdentifier": {
                    "type": "string"
                },
                "alternativeIdentifier2": {
                    "type": "string"
                },
                "applicationRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "personae": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ActivityFilterViewModel": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "string"
                },
                "Reseller": {
                    "type": "string"
                },
                "Enterprise": {
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "ApplicationActivities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ActivityDateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "EligibleSortColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "Keywords": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "RecordsPerPage": {
                    "format": "int32",
                    "type": "integer"
                },
                "SortDirection": {
                    "type": "string"
                },
                "SortColumn": {
                    "type": "string"
                }
            }
        },
        "PagingModel[AppInsightsEventRM]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInsightsEventRM"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AppInsightsEventRM": {
            "type": "object",
            "properties": {
                "totalRowNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "createdDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "eventName": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "profileUsername": {
                    "type": "string"
                },
                "enterpriseName": {
                    "type": "string"
                },
                "impersonatingProfileUserName": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInsightsEventPropertyRM"
                    }
                }
            }
        },
        "AppInsightsEventPropertyRM": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "PagingModel[Provider]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Provider"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "LinkServiceProviderId": {
                    "type": "string"
                },
                "LinkServiceId": {
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%'\\*\\+,\\.;<=>\\?\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "UniqueName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Help": {
                    "type": "string"
                },
                "Contact": {
                    "type": "string"
                },
                "Favicon": {
                    "type": "string"
                },
                "Logo": {
                    "type": "string"
                },
                "ForgetPasswordUrl": {
                    "type": "string"
                },
                "HasAutomationInfo": {
                    "type": "boolean"
                },
                "IsWellKnown": {
                    "type": "boolean"
                },
                "LoginForm": {
                    "$ref": "#/definitions/LoginForm"
                },
                "EmployerUniqueName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedBy": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Configuration": {
                    "$ref": "#/definitions/ProviderConfiguration"
                },
                "LinkAccountMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkMetadata"
                    }
                },
                "ApprovalStatus": {
                    "enum": [
                        "Proposed",
                        "Validated",
                        "Archived",
                        "Rejected",
                        "Removed",
                        "Replaced"
                    ],
                    "type": "string"
                },
                "DisabledSaveCredentials": {
                    "type": "boolean"
                },
                "AccountFilterType": {
                    "enum": [
                        "UNKNOWN",
                        "RETIREMENT",
                        "SAVINGS",
                        "BOTH"
                    ],
                    "type": "string"
                }
            }
        },
        "LoginForm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "help": {
                    "type": "string"
                },
                "forgetPasswordURL": {
                    "type": "string"
                },
                "helpTitle": {
                    "type": "string"
                },
                "mfaInfo": {
                    "type": "string"
                },
                "mfaInfoTitle": {
                    "type": "string"
                },
                "formType": {
                    "type": "string"
                },
                "mfaTimeout": {
                    "format": "int64",
                    "type": "integer"
                },
                "row": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoginFormRow"
                    }
                }
            }
        },
        "ProviderConfiguration": {
            "type": "object",
            "properties": {
                "UseOrigoOption": {
                    "type": "boolean"
                },
                "InstitutionId": {
                    "type": "string"
                },
                "ExactMatchSearchOnly": {
                    "type": "boolean"
                },
                "WetInkSignature": {
                    "type": "boolean"
                },
                "Contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }
            }
        },
        "LinkMetadata": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "LoginFormRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "form": {
                    "type": "string"
                },
                "fieldRowChoice": {
                    "type": "string"
                },
                "field": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoginField"
                    }
                },
                "help": {
                    "type": "string"
                },
                "isMfaFieldRow": {
                    "type": "string"
                },
                "rowCriteria": {
                    "type": "string"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "Category": {
                    "enum": [
                        "Default",
                        "Operator",
                        "Support",
                        "Administrator",
                        "Other"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "AddressLines": {
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "Validated": {
                    "type": "boolean"
                },
                "Notes": {
                    "type": "string"
                }
            }
        },
        "LoginField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "IsOptional": {
                    "type": "boolean"
                },
                "unique": {
                    "type": "boolean"
                },
                "maxLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "minLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "required": {
                    "type": "string"
                },
                "option": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Option"
                    }
                },
                "validation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Validation"
                    }
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "imageSource": {
                    "type": "string"
                },
                "valueEditable": {
                    "type": "string"
                }
            }
        },
        "Option": {
            "type": "object",
            "properties": {
                "optionValue": {
                    "type": "string"
                },
                "displayText": {
                    "type": "string"
                }
            }
        },
        "Validation": {
            "type": "object",
            "properties": {
                "regExp": {
                    "type": "string"
                },
                "errorMsg": {
                    "type": "string"
                }
            }
        },
        "FinancialAccountRM": {
            "type": "object",
            "properties": {
                "AccountType": {
                    "$ref": "#/definitions/ShortAccountTypeRM"
                },
                "AccountNumber": {
                    "type": "string"
                },
                "AssetLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetLineRM"
                    }
                },
                "AvailableBalance": {
                    "$ref": "#/definitions/Money"
                },
                "Balance": {
                    "$ref": "#/definitions/Money"
                },
                "BenefitType": {
                    "type": "string"
                },
                "Cash": {
                    "$ref": "#/definitions/Money"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CustomData": {
                    "type": "string"
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerName": {
                    "pattern": "^[^\\]\\[!\"\\$%'\\*\\+,\\.;<=>\\?\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "EmploymentEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EmploymentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "IncomeStartAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "FinalPensionableSalary": {
                    "$ref": "#/definitions/Money"
                },
                "ForecastedAnnualRetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "GlobalAssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                },
                "HasAssociatedAccount": {
                    "type": "boolean"
                },
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "InvestmentReturn": {
                    "format": "double",
                    "type": "number"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "IsDeleted": {
                    "type": "boolean"
                },
                "LastContribution": {
                    "format": "date-time",
                    "type": "string"
                },
                "LinkServiceAccountId": {
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%'\\*\\+,\\.;<=>\\?\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Overdraft": {
                    "$ref": "#/definitions/Money"
                },
                "PlatformFee": {
                    "format": "double",
                    "type": "number"
                },
                "ProviderAccount": {
                    "$ref": "#/definitions/ProviderAccount"
                },
                "ProviderAccountID": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "RiskGrade": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": -2,
                    "type": "integer"
                },
                "RiskGradeLabel": {
                    "type": "string"
                },
                "SchemeId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "SchemeJoinedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SchemeLeftDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SchemeName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "TaxFreeCashLumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "TotalContributionsToDate": {
                    "$ref": "#/definitions/Money"
                },
                "Transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountTransaction"
                    }
                },
                "PensionProvider": {
                    "$ref": "#/definitions/Provider"
                },
                "EmploymentHistoryId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "PortfolioNumber": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": -1,
                    "type": "integer"
                },
                "IsResellerAccount": {
                    "type": "boolean"
                },
                "TaxRebate": {
                    "$ref": "#/definitions/Money"
                },
                "DrawdownIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DrawdownIncomeFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "StrategyType": {
                    "enum": [
                        "None",
                        "SelfSelect",
                        "LifeStyle"
                    ],
                    "type": "string"
                },
                "StrategyDisplayName": {
                    "type": "string"
                },
                "StrategyLifeStyle": {
                    "format": "int32",
                    "type": "integer"
                },
                "GuidedPortfoliosId": {
                    "type": "string"
                },
                "StrategyLifeStyleFactSheetUrl": {
                    "type": "string"
                },
                "AutoRefreshEnabled": {
                    "type": "boolean"
                },
                "IsLocked": {
                    "type": "boolean"
                },
                "IsBeneficiaryLocked": {
                    "type": "boolean"
                },
                "CanIncreaseContribution": {
                    "type": "boolean"
                },
                "CanFundsOrders": {
                    "type": "boolean"
                },
                "CanTakeBenefit": {
                    "type": "boolean"
                },
                "CanDrawdownUpdate": {
                    "type": "boolean"
                },
                "HasTransactionalLock": {
                    "type": "boolean",
                    "readOnly": true
                },
                "TracingAccountId": {
                    "type": "string"
                },
                "HasEmployer": {
                    "type": "boolean",
                    "readOnly": true
                },
                "Employer": {
                    "$ref": "#/definitions/EmployerRM"
                },
                "NominalAnnualRate": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ShortAccountTypeRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Label": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "AccountCategory_Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/AccountCategory"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "CanCreateManually": {
                    "type": "boolean"
                },
                "ApplyToRetirementGoal": {
                    "type": "boolean"
                },
                "ApplyToSavingsGoal": {
                    "type": "boolean"
                },
                "Description": {
                    "type": "string"
                },
                "NominalAnnualRate": {
                    "format": "double",
                    "type": "number"
                },
                "CanOverrideNominalAnnualRate": {
                    "type": "boolean"
                },
                "TotalContributionCeiling": {
                    "$ref": "#/definitions/Money"
                },
                "MinContribution": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "AssetLineRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "AssetID": {
                    "type": "string"
                },
                "AssetUrl": {
                    "type": "string"
                },
                "Isin": {
                    "type": "string"
                },
                "RiskGrade": {
                    "format": "int32",
                    "type": "integer"
                },
                "OverallValue": {
                    "$ref": "#/definitions/Money"
                },
                "LastRefreshed": {
                    "format": "date-time",
                    "type": "string"
                },
                "Maturities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetLineMaturitiesRM"
                    }
                },
                "AssetName": {
                    "type": "string"
                },
                "UnitHeld": {
                    "format": "double",
                    "type": "number"
                },
                "UnitPrice": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "Money": {
            "type": "object",
            "properties": {
                "Amount": {
                    "format": "double",
                    "type": "number"
                },
                "Currency": {
                    "enum": [
                        "NONE",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTC",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EEK",
                        "EGP",
                        "ERN",
                        "ETB",
                        "ETH",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHC",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTC",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RMB",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRL",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XBT",
                        "XCD",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZWD",
                        "CLF",
                        "XAG",
                        "XAU",
                        "XDR",
                        "ZMK",
                        "ZMW",
                        "ZWL",
                        "VES"
                    ],
                    "type": "string"
                }
            }
        },
        "AssetAllocationItem": {
            "type": "object",
            "properties": {
                "Item1": {
                    "format": "double",
                    "type": "number"
                },
                "Item2": {
                    "enum": [
                        "Alternatives",
                        "Equity",
                        "Bonds",
                        "Property",
                        "Commodity",
                        "Cash",
                        "Gold",
                        "CorporateBonds",
                        "StockPosition",
                        "DirectInvestment",
                        "Unknown"
                    ],
                    "type": "string"
                }
            }
        },
        "ProviderAccount": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UserId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "LinkServiceId": {
                    "type": "string"
                },
                "LinkServiceProviderId": {
                    "type": "string"
                },
                "Favicon": {
                    "type": "string"
                },
                "RefreshType": {
                    "enum": [
                        "MANUAL",
                        "AUTOMATION",
                        "IMPORT"
                    ],
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastRefreshed": {
                    "format": "date-time",
                    "type": "string"
                },
                "NextRefreshScheduled": {
                    "format": "date-time",
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "USERCREDENTIALSREQUIRED",
                        "AVAILABLE",
                        "UNAVAILABLE",
                        "INPROGRESS",
                        "USERACTIONREQUIRED",
                        "INITIALLINKCOMPLETED",
                        "HISTORICALUPDATESTARTED",
                        "HISTORICALUPDATEERROR",
                        "DEPRECATED"
                    ],
                    "type": "string"
                },
                "RefreshFailCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkServiceAccessToken": {
                    "type": "string"
                },
                "LinkServiceRefreshToken": {
                    "type": "string"
                }
            }
        },
        "AccountTransaction": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                },
                "BaseType": {
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "Description": {
                    "$ref": "#/definitions/Description"
                },
                "Date": {
                    "format": "date-time",
                    "type": "string"
                },
                "Price": {
                    "$ref": "#/definitions/Money"
                },
                "Quantity": {
                    "format": "double",
                    "type": "number"
                },
                "AccountID": {
                    "type": "string"
                },
                "Tags": {
                    "type": "string"
                },
                "CapitalBaseType": {
                    "type": "string"
                },
                "AccountTransactionCategoryCode": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "EnrichedTransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EmployerRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UniqueName": {
                    "type": "string"
                },
                "AlternativesNames": {
                    "type": "string"
                },
                "ExternalId": {
                    "type": "string"
                }
            }
        },
        "AccountCategory": {
            "type": "object",
            "properties": {
                "Name": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "LabelPensionListTotal": {
                    "type": "string"
                },
                "LabelPensionList": {
                    "type": "string"
                },
                "OrderPensionsList": {
                    "format": "int32",
                    "type": "integer"
                },
                "Alternative": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "AccountArea": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                }
            }
        },
        "AssetLineMaturitiesRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "AvailibilityDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AvailabilityStatus": {
                    "enum": [
                        "UNDEFINED",
                        "BLOCKEDUNTIL",
                        "RETIREMENT",
                        "AVAILABLE"
                    ],
                    "type": "string"
                },
                "AssetName": {
                    "type": "string"
                },
                "UnitHeld": {
                    "format": "double",
                    "type": "number"
                },
                "UnitPrice": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "Description": {
            "type": "object",
            "properties": {
                "Original": {
                    "type": "string"
                },
                "Consumer": {
                    "type": "string"
                },
                "Simple": {
                    "type": "string"
                }
            }
        },
        "EstimateAccountProjection": {
            "type": "object",
            "properties": {
                "Datas": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Money"
                    }
                },
                "DatasMaximum": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Money"
                    }
                },
                "DatasMinimum": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Money"
                    }
                }
            }
        },
        "FundsSearchFilter": {
            "type": "object",
            "properties": {
                "FundsPerfOrdering": {
                    "enum": [
                        "NONE",
                        "PERF12M",
                        "PERF3Y",
                        "PERF5Y"
                    ],
                    "type": "string"
                },
                "ISIN": {
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RiskGrade": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": -2,
                    "type": "integer"
                },
                "Theme": {
                    "enum": [
                        "NONE",
                        "MOSTPOPULAR",
                        "MOSTECONOMICIMPACT",
                        "SUSTAINABLE",
                        "LOWCARBON",
                        "SHARIACOMPLIANT"
                    ],
                    "type": "string"
                },
                "Strategy": {
                    "enum": [
                        "NONE",
                        "INDEXBASED",
                        "ACTIVE",
                        "SMARTBETA"
                    ],
                    "type": "string"
                },
                "ShareClass": {
                    "enum": [
                        "NONE",
                        "ACCUMULATION",
                        "INCOME"
                    ],
                    "type": "string"
                },
                "Geography": {
                    "enum": [
                        "NONE",
                        "UKONLY",
                        "EUROPE",
                        "NORTHAMERICA",
                        "DEVELOPEDASIA",
                        "EMERGINGCOUNTRIES",
                        "WORLD"
                    ],
                    "type": "string"
                },
                "MinimumOCF": {
                    "format": "double",
                    "type": "number"
                },
                "MaximumOCF": {
                    "format": "double",
                    "type": "number"
                },
                "AssetClass": {
                    "enum": [
                        "NONE",
                        "SHARES",
                        "BONDS",
                        "CASHLIQUIDITY",
                        "DIVERSIFIEDMIX"
                    ],
                    "type": "string"
                },
                "Enterprise": {
                    "type": "string"
                },
                "TopFunds": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AssetRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Isin": {
                    "type": "string"
                },
                "UnitPrice": {
                    "$ref": "#/definitions/Money"
                },
                "AssetUrl": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "UNDEFINED",
                        "FUND",
                        "TITLE",
                        "ETF",
                        "Security"
                    ],
                    "type": "string"
                },
                "Perf12M": {
                    "format": "double",
                    "type": "number"
                },
                "Perf3Y": {
                    "format": "double",
                    "type": "number"
                },
                "Perf5Y": {
                    "format": "double",
                    "type": "number"
                },
                "AssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tuple[Double,AssetClass]"
                    }
                },
                "Duration": {
                    "format": "int32",
                    "type": "integer"
                },
                "MinimumAmount": {
                    "$ref": "#/definitions/Money"
                },
                "MaximumAmount": {
                    "$ref": "#/definitions/Money"
                },
                "ReturnRateMin": {
                    "format": "double",
                    "type": "number"
                },
                "ReturnRateMax": {
                    "format": "double",
                    "type": "number"
                },
                "ReturnRateFixed": {
                    "format": "double",
                    "type": "number"
                },
                "InvestmentClassification": {
                    "$ref": "#/definitions/InvestmentClassification"
                }
            }
        },
        "Tuple[Double,AssetClass]": {
            "type": "object",
            "properties": {
                "Item1": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "Item2": {
                    "enum": [
                        "Alternatives",
                        "Equity",
                        "Bonds",
                        "Property",
                        "Commodity",
                        "Cash",
                        "Gold",
                        "CorporateBonds",
                        "StockPosition",
                        "DirectInvestment",
                        "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "InvestmentClassification": {
            "type": "object",
            "properties": {
                "Other Classification": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CategoriesTansaction": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "AIPCategoryId": {
                    "type": "string"
                },
                "CategoryName": {
                    "type": "string"
                }
            }
        },
        "TransactionsFilter": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12},?)+$",
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "FromDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string"
                },
                "IsProcessed": {
                    "type": "boolean"
                },
                "withCategories": {
                    "type": "boolean"
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "ItemsPerPage": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PagingAccountTransactionsModel": {
            "type": "object",
            "properties": {
                "Total": {
                    "$ref": "#/definitions/Money"
                },
                "TotalCredit": {
                    "$ref": "#/definitions/Money"
                },
                "TotalDebit": {
                    "$ref": "#/definitions/Money"
                },
                "TotalPerCategory": {
                    "type": "object",
                    "properties": {
                        "BILLSUTILITIES": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "CASH": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "ENTERTAINMENT": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "HEALTH": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "HOUSEHOLD": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "RENT": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "GROCERIES": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "SHOPPING": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "TAXES": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "TRAVEL": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "INCOME": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "OTHER": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "CREDITCARDLOAN": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "TRANSFER": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "INSURANCE": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "PERSONALCARE": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "CONTRIBUTION": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "INVESTMENT": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "BENEFICIARY": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "EDUCATION": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "ACTIVITIES": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "DAILY_LIFE": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "TRANSPORTATION": {
                            "$ref": "#/definitions/CategoryAmounts"
                        },
                        "KIDS": {
                            "$ref": "#/definitions/CategoryAmounts"
                        }
                    }
                },
                "TotalPages": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountTransaction"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CategoryAmounts": {
            "type": "object",
            "properties": {
                "Total": {
                    "$ref": "#/definitions/Money"
                },
                "TotalDebit": {
                    "$ref": "#/definitions/Money"
                },
                "TotalCredit": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "TransactionRule": {
            "required": [
                "DescriptionSimple",
                "Category",
                "OriginalCategory",
                "CreatedDate"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "UserId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "User": {
                    "$ref": "#/definitions/Profile"
                },
                "DescriptionSimple": {
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "OriginalCategory": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "ObjectId": {
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DisabledDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AlreadyConnect": {
                    "type": "boolean"
                },
                "AvaIntroduced": {
                    "type": "boolean"
                },
                "TaxBracket": {
                    "$ref": "#/definitions/Money"
                },
                "City": {
                    "type": "string"
                },
                "SecurityQuestion": {
                    "type": "string"
                },
                "SecurityAnswer": {
                    "type": "string"
                },
                "isAgreeTCThirdParty": {
                    "type": "boolean"
                },
                "isAgreePrivatePolicy": {
                    "type": "boolean"
                },
                "BudgetGoalScore": {
                    "format": "double",
                    "type": "number"
                },
                "AlternativeIdentifier": {
                    "type": "string"
                },
                "AlternativeIdentifier2": {
                    "type": "string"
                },
                "County": {
                    "type": "string"
                },
                "PreferredLanguage_Id": {
                    "type": "string"
                },
                "PreferredLanguage": {
                    "$ref": "#/definitions/Language"
                },
                "SendInformationToABAKA": {
                    "type": "boolean"
                },
                "ProfileEnterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileEnterprise"
                    }
                },
                "ProfileDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileDevice"
                    }
                },
                "ProfileIncome": {
                    "$ref": "#/definitions/ProfileIncome"
                },
                "IsRetired": {
                    "type": "boolean"
                },
                "IsActive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsDeferred": {
                    "type": "boolean",
                    "readOnly": true
                },
                "RetirementDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastLoginDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastTimezoneOffset": {
                    "format": "double",
                    "type": "number"
                },
                "HasSMSSubscribed": {
                    "type": "boolean"
                },
                "HasKnowledgeCenterAccess": {
                    "type": "boolean"
                },
                "HasAIPAccess": {
                    "type": "boolean"
                },
                "HasEmailNudgesSubscribed": {
                    "type": "boolean"
                },
                "Role": {
                    "enum": [
                        "User",
                        "Admin",
                        "Support",
                        "IFA",
                        "AbakaAdmin",
                        "AbakaSupportAgent",
                        "Analyst",
                        "AbakaAnalyst",
                        "AbakaTest",
                        "DocumentManager",
                        "AbakaTestReport",
                        "AbakaBot",
                        "Developer",
                        "DataScientist",
                        "AbakaFunction",
                        "Enterprise",
                        "IFAManager",
                        "Test",
                        "AbakaNode",
                        "BO",
                        "ContentManager",
                        "AbakaContentManager",
                        "AbakaMarketing",
                        "Marketing",
                        "SupportSupervisor",
                        "SupportPrivileged",
                        "SupportAdvanced",
                        "SupportBasic",
                        "FAQCreator",
                        "FAQCopyWriter",
                        "PensionTracingBase",
                        "PensionTracingAdvanced",
                        "PensionTracingAbaka"
                    ],
                    "type": "string"
                },
                "ProfileExtended": {
                    "$ref": "#/definitions/ProfileExtended"
                },
                "PersonaeList": {
                    "type": "string"
                },
                "ExternalPersona": {
                    "type": "string"
                },
                "PreferredNotificationChannel": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ImpersonatingProfileId": {
                    "type": "string"
                },
                "IsLocked": {
                    "type": "boolean"
                },
                "MemberStatus": {
                    "enum": [
                        "ACTIVE",
                        "DEFERRED",
                        "RETIRED",
                        "DELETED"
                    ],
                    "type": "string"
                }
            }
        },
        "Language": {
            "required": [
                "Name",
                "CultureCode"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "CultureCode": {
                    "type": "string"
                }
            }
        },
        "ProfileEnterprise": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Enterprise_UniqueName": {
                    "type": "string"
                },
                "Enterprise": {
                    "$ref": "#/definitions/Enterprise"
                },
                "EmploymentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EmploymentEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Current": {
                    "type": "boolean"
                },
                "GrossSalary": {
                    "$ref": "#/definitions/Money"
                },
                "FullTime": {
                    "type": "boolean"
                },
                "BasicPayFrequency": {
                    "format": "int32",
                    "type": "integer"
                },
                "Commissions": {
                    "$ref": "#/definitions/Money"
                },
                "OvertimePay": {
                    "$ref": "#/definitions/Money"
                },
                "OccupationId": {
                    "type": "string"
                },
                "Occupation": {
                    "$ref": "#/definitions/EnterpriseOccupation"
                },
                "ProfileId": {
                    "type": "string"
                },
                "EmployeeId": {
                    "type": "string"
                }
            }
        },
        "ProfileDevice": {
            "required": [
                "DeviceModel",
                "DeviceVersion"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeviceId": {
                    "type": "string"
                },
                "DeviceType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14
                    ],
                    "type": "integer"
                },
                "DeviceModel": {
                    "type": "string"
                },
                "DeviceVersion": {
                    "type": "string"
                },
                "ProfileId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "ProfileIncome": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "AnnualBaseSalary": {
                    "$ref": "#/definitions/Money"
                },
                "Bonus": {
                    "$ref": "#/definitions/Money"
                },
                "DividendIncome": {
                    "$ref": "#/definitions/Money"
                },
                "ShareIncome": {
                    "$ref": "#/definitions/Money"
                },
                "TrustIncome": {
                    "$ref": "#/definitions/Money"
                },
                "RentalIncome": {
                    "$ref": "#/definitions/Money"
                },
                "OtherIncome": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlySpending": {
                    "$ref": "#/definitions/Money"
                },
                "TotalAnnualGrossIncome": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                }
            }
        },
        "ProfileExtended": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "Enterprise": {
            "required": [
                "Country_Id"
            ],
            "type": "object",
            "properties": {
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UniqueName": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "HostName": {
                    "type": "string"
                },
                "CustomUri": {
                    "type": "string"
                },
                "Country_Id": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                },
                "LogoUrl": {
                    "type": "string"
                },
                "AlternativesNames": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "ONBOARDED",
                        "NOTONBOARDED"
                    ],
                    "type": "string"
                },
                "PensionSchemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmployerPensionScheme"
                    }
                },
                "Occupations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseOccupation"
                    }
                },
                "Type": {
                    "type": "string"
                },
                "Reseller": {
                    "$ref": "#/definitions/Enterprise"
                },
                "ResellerName": {
                    "type": "string"
                },
                "Credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseCredential"
                    }
                },
                "Languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseLanguage"
                    }
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "Personae": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Persona"
                    }
                },
                "EngagementLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngagementLevel"
                    }
                },
                "ShardMapping": {
                    "$ref": "#/definitions/EnterpriseShardMapping"
                }
            }
        },
        "EnterpriseOccupation": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "EnterpriseName": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "OccupationCode": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        -1
                    ],
                    "type": "integer"
                },
                "Order": {
                    "format": "int32",
                    "type": "integer"
                },
                "SectorResourceKey": {
                    "type": "string"
                },
                "Sector": {
                    "type": "string"
                },
                "JobTitleResourceKey": {
                    "type": "string"
                },
                "JobTitle": {
                    "type": "string"
                },
                "CustomCode": {
                    "type": "string"
                }
            }
        },
        "Countries": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "ISOCode": {
                    "type": "string"
                },
                "DefaultLanguage": {
                    "$ref": "#/definitions/Language"
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultDCRetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "MinimumDCRetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultDBRetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "YearlyFees": {
                    "format": "double",
                    "type": "number"
                },
                "Currency": {
                    "enum": [
                        "NONE",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTC",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EEK",
                        "EGP",
                        "ERN",
                        "ETB",
                        "ETH",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHC",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTC",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RMB",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRL",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XBT",
                        "XCD",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZWD",
                        "CLF",
                        "XAG",
                        "XAU",
                        "XDR",
                        "ZMK",
                        "ZMW",
                        "ZWL",
                        "VES"
                    ],
                    "type": "string"
                },
                "TaxRelief": {
                    "format": "double",
                    "type": "number"
                },
                "AnnualAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "LowerAnnualAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "CeilingSalaryAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "FiscalYearStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "FiscalYearEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "MaximumLifeTimeAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "LumpSumExcessLifeTime": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeLumpSumRate": {
                    "format": "double",
                    "type": "number"
                },
                "DefaultLumpSumRate": {
                    "format": "double",
                    "type": "number"
                },
                "IncomeExcessLifeTime": {
                    "$ref": "#/definitions/Money"
                },
                "NoneTaxableLifeTime": {
                    "$ref": "#/definitions/Money"
                },
                "AverageInterestRate": {
                    "format": "double",
                    "type": "number"
                },
                "MinimumInsuranceContributionYear": {
                    "format": "int32",
                    "type": "integer"
                },
                "SavingRate": {
                    "format": "double",
                    "type": "number"
                },
                "AverageWageGrowth": {
                    "format": "double",
                    "type": "number"
                },
                "MonthlyAverageWageGrowth": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "PersonalAllowanceRestrictionPoint": {
                    "$ref": "#/definitions/Money"
                },
                "StandardPersonalAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "AccrualRate": {
                    "format": "double",
                    "type": "number"
                },
                "PhoneCountryCode": {
                    "type": "string"
                },
                "PhoneCountryNumber": {
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "SocialSecurityBendingPointAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "SocialSecurityYearsOfSalary": {
                    "format": "int32",
                    "type": "integer"
                },
                "SocialSecurityMaxIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DefaultEnterpriseName": {
                    "type": "string"
                },
                "MajorityAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultTimeZoneOffset": {
                    "format": "int32",
                    "type": "integer"
                },
                "SocialChargesRate": {
                    "format": "double",
                    "type": "number"
                },
                "Zero": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                }
            }
        },
        "EmployerPensionScheme": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "LinkServiceProviderId": {
                    "type": "string"
                },
                "LinkServiceId": {
                    "type": "string"
                },
                "PensionProviderName": {
                    "type": "string"
                },
                "CustomEmployerPensionSchemeData": {
                    "type": "string"
                },
                "EmployerUniqueName": {
                    "type": "string"
                }
            }
        },
        "EnterpriseCredential": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "ApplicationId": {
                    "type": "string"
                },
                "ApplicationRole": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "EnterpriseUniqueName": {
                    "type": "string"
                },
                "ApplicationName": {
                    "type": "string"
                }
            }
        },
        "EnterpriseLanguage": {
            "required": [
                "EnterpriseName",
                "LanguageId"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "LanguageId": {
                    "type": "string"
                },
                "Language": {
                    "$ref": "#/definitions/Language"
                }
            }
        },
        "Tag": {
            "required": [
                "NudgeCardName",
                "TagName",
                "UniqueIdentifier"
            ],
            "type": "object",
            "properties": {
                "EnterpriseName": {
                    "type": "string"
                },
                "NudgeCardName": {
                    "type": "string"
                },
                "TagType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "TagName": {
                    "type": "string"
                },
                "UniqueIdentifier": {
                    "type": "string"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Persona": {
            "type": "object",
            "properties": {
                "EnterpriseName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "EngagementLevel": {
            "type": "object",
            "properties": {
                "EnterpriseName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Index": {
                    "format": "int32",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "EnterpriseShardMapping": {
            "required": [
                "PersonalDataShardId"
            ],
            "type": "object",
            "properties": {
                "EnterpriseName": {
                    "type": "string"
                },
                "EnterpriseHash": {
                    "type": "string"
                },
                "PersonalDataShardId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "PersonalDataShard": {
                    "$ref": "#/definitions/Shard"
                }
            }
        },
        "Shard": {
            "required": [
                "ConnectionStringName"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Index": {
                    "format": "int32",
                    "type": "integer"
                },
                "ConnectionStringName": {
                    "type": "string"
                }
            }
        },
        "LinkProviderAccount": {
            "type": "object",
            "properties": {
                "correlationId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/ProviderRM"
                }
            }
        },
        "ProviderRM": {
            "type": "object",
            "properties": {
                "LinkServiceProviderId": {
                    "type": "string"
                },
                "LinkServiceId": {
                    "type": "string"
                },
                "UniqueName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Favicon": {
                    "type": "string"
                },
                "Logo": {
                    "type": "string"
                },
                "LoginForm": {
                    "$ref": "#/definitions/LoginForm"
                },
                "LinkAccountMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkMetadata"
                    }
                },
                "DisabledSaveCredentials": {
                    "type": "boolean"
                }
            }
        },
        "Beneficiary": {
            "required": [
                "Country_Id"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "IsPrimary": {
                    "type": "boolean"
                },
                "LastName": {
                    "type": "string"
                },
                "SocialSecurityNumber": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Address3": {
                    "type": "string"
                },
                "Address4": {
                    "type": "string"
                },
                "Address5": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Country_Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                },
                "Ratio": {
                    "format": "double",
                    "type": "number"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "type": "string"
                },
                "Relationship": {
                    "enum": [
                        "None",
                        "Parent",
                        "Child",
                        "Spouse",
                        "Sibling",
                        "Adult_Dependant",
                        "Aunt",
                        "Charity",
                        "Friend",
                        "Beneficiary_Of_Will",
                        "Common_Law",
                        "Cousin",
                        "Civil_Partner",
                        "Fiancee",
                        "Grandparents",
                        "Nephew",
                        "Niece",
                        "Partner",
                        "Step_relative",
                        "Uncle",
                        "Grandchild",
                        "Nomination_Form"
                    ],
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsBeneficiaryAdult": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "BeneficiaryInputRM": {
            "required": [
                "FirstName",
                "LastName",
                "SocialSecurityNumber",
                "Address1",
                "ZipCode",
                "City",
                "CountryId"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "IsPrimary": {
                    "type": "boolean"
                },
                "LastName": {
                    "type": "string"
                },
                "SocialSecurityNumber": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Address3": {
                    "type": "string"
                },
                "Address4": {
                    "type": "string"
                },
                "Address5": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "CountryId": {
                    "type": "string"
                },
                "Ratio": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "type": "string"
                },
                "Relationship": {
                    "enum": [
                        "None",
                        "Parent",
                        "Child",
                        "Spouse",
                        "Sibling",
                        "Adult_Dependant",
                        "Aunt",
                        "Charity",
                        "Friend",
                        "Beneficiary_Of_Will",
                        "Common_Law",
                        "Cousin",
                        "Civil_Partner",
                        "Fiancee",
                        "Grandparents",
                        "Nephew",
                        "Niece",
                        "Partner",
                        "Step_relative",
                        "Uncle",
                        "Grandchild",
                        "Nomination_Form"
                    ],
                    "type": "string"
                },
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                }
            }
        },
        "FundPerformanceRM": {
            "type": "object",
            "properties": {
                "FundPerformance": {
                    "format": "double",
                    "type": "number"
                },
                "IsAllFundFound": {
                    "type": "boolean"
                }
            }
        },
        "AccountFundsOperationsRM": {
            "type": "object",
            "properties": {
                "ContributionsBreakdown": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FundDetailsRM"
                    }
                },
                "Operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FundOrderRM"
                    }
                }
            }
        },
        "FundDetailsRM": {
            "type": "object",
            "properties": {
                "Isin": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                },
                "UnitNumber": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "UnitPrice": {
                    "$ref": "#/definitions/Money"
                },
                "AssetID": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "AssetName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "GuidedPortfolioID": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "GuidedPortfolioName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "isUpdateStrategy": {
                    "type": "boolean"
                },
                "Percentage": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "FundOrderRM": {
            "type": "object",
            "properties": {
                "Target": {
                    "$ref": "#/definitions/FundDetailsRM"
                },
                "Source": {
                    "$ref": "#/definitions/FundDetailsRM"
                }
            }
        },
        "CategoryMonthlyAverage": {
            "type": "object",
            "properties": {
                "AIPCategoryId": {
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "type": "string",
                    "readOnly": true
                },
                "MonthlyAverage": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                }
            }
        },
        "SavingsSpendingsModel": {
            "type": "object",
            "properties": {
                "PeriodValue": {
                    "$ref": "#/definitions/Money"
                },
                "PeriodTitle": {
                    "type": "string"
                },
                "PeriodRelativeTitle": {
                    "type": "string"
                },
                "IncomeSpendingMode": {
                    "type": "string"
                }
            }
        },
        "ProfileCommunicationPreferenceRM": {
            "type": "object",
            "properties": {
                "CommunicationPreferencesCategoryId": {
                    "type": "string"
                },
                "CommunicationPreferencesCategory": {
                    "$ref": "#/definitions/CommunicationPreferencesCategory"
                },
                "ActivatedChannels": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                }
            }
        },
        "CommunicationPreferencesCategory": {
            "required": [
                "EnterpriseName",
                "CategoryKeyName",
                "CategoryLabel"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "EnterpriseName": {
                    "type": "string"
                },
                "CategoryKeyName": {
                    "type": "string"
                },
                "CategoryLabel": {
                    "type": "string"
                },
                "AvailableChannels": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                },
                "IsEditable": {
                    "type": "boolean"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "OrderList": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultActivatedChannels": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                }
            }
        },
        "AddressModel": {
            "type": "object",
            "properties": {
                "AddressLine1": {
                    "type": "string"
                },
                "AddressLine2": {
                    "type": "string"
                },
                "AddressLine3": {
                    "type": "string"
                },
                "AddressLine4": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Postcode": {
                    "type": "string"
                },
                "County": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                }
            }
        },
        "AccountTypeRM": {
            "type": "object",
            "properties": {
                "CountriesAvailability": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShortCountryRM"
                    }
                },
                "RecommendationReasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Label": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "AccountCategory_Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/AccountCategory"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "CanCreateManually": {
                    "type": "boolean"
                },
                "ApplyToRetirementGoal": {
                    "type": "boolean"
                },
                "ApplyToSavingsGoal": {
                    "type": "boolean"
                },
                "Description": {
                    "type": "string"
                },
                "NominalAnnualRate": {
                    "format": "double",
                    "type": "number"
                },
                "CanOverrideNominalAnnualRate": {
                    "type": "boolean"
                },
                "TotalContributionCeiling": {
                    "$ref": "#/definitions/Money"
                },
                "MinContribution": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "ShortCountryRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "ISOCode": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Currency": {
                    "enum": [
                        "NONE",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTC",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EEK",
                        "EGP",
                        "ERN",
                        "ETB",
                        "ETH",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHC",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTC",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RMB",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRL",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XBT",
                        "XCD",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZWD",
                        "CLF",
                        "XAG",
                        "XAU",
                        "XDR",
                        "ZMK",
                        "ZMW",
                        "ZWL",
                        "VES"
                    ],
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                }
            }
        },
        "EquityReleaseValueInput": {
            "type": "object",
            "properties": {
                "propertyValue": {
                    "$ref": "#/definitions/Money"
                },
                "ownerAge": {
                    "format": "int32",
                    "maximum": 200,
                    "minimum": 0,
                    "type": "integer"
                },
                "numberYearTerm": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "EquityReleaseFlexValueInput": {
            "type": "object",
            "properties": {
                "totalEquityRelease": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "GeographicAreaRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "CITY",
                        "COUNTY"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Parent": {
                    "$ref": "#/definitions/GeographicAreaRM"
                }
            }
        },
        "LifeStyleRM": {
            "required": [
                "Name",
                "MonthlyTargetIncome"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "LifeStyleType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "MonthlyTargetIncome": {
                    "$ref": "#/definitions/Money"
                },
                "NetMonthlyTargetIncome": {
                    "$ref": "#/definitions/Money"
                },
                "GrossMonthlyTargetIncome": {
                    "$ref": "#/definitions/Money"
                },
                "MinNetIncomeBracket": {
                    "$ref": "#/definitions/Money"
                },
                "MaxNetIncomeBracket": {
                    "$ref": "#/definitions/Money"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "PercentageByCategory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LifeStyleCategoryPercentageRM"
                    }
                }
            }
        },
        "LifeStyleCategoryPercentageRM": {
            "type": "object",
            "properties": {
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "Percentage": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                },
                "DisplayOrder": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "TaxTrancheSelector": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                }
            }
        },
        "StatePensionRM": {
            "type": "object",
            "properties": {
                "Year": {
                    "format": "int32",
                    "type": "integer"
                },
                "Pension": {
                    "$ref": "#/definitions/Money"
                },
                "NumberOfWorkingYears": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CustodianApplication": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string",
                    "readOnly": true
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "PortfolioId": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "AccountType_Id": {
                    "type": "string"
                },
                "AccountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "AccountHolderType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4
                    ],
                    "type": "integer"
                },
                "RiskScore": {
                    "format": "int32",
                    "type": "integer"
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsUkResidentForCurrentTaxYear": {
                    "type": "boolean"
                },
                "IsUkEarningsSubjectToUkTax": {
                    "type": "boolean"
                },
                "IsCrownServant": {
                    "type": "boolean"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SubmittedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Request": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "ExpressionOfWish": {
                    "type": "string"
                },
                "Custodian": {
                    "$ref": "#/definitions/Custodian"
                },
                "Custodian_Id": {
                    "type": "string"
                },
                "NominatedBankAccount": {
                    "$ref": "#/definitions/BankAccount"
                },
                "NominatedBankAccount_Id": {
                    "type": "string"
                },
                "CurrentEmployer": {
                    "$ref": "#/definitions/ProfileEnterprise"
                },
                "CurrentEmployer_Id": {
                    "type": "string"
                },
                "Profile": {
                    "$ref": "#/definitions/Profile"
                },
                "Profile_Id": {
                    "type": "string"
                },
                "Goal": {
                    "$ref": "#/definitions/Goals"
                },
                "Goal_Id": {
                    "type": "string"
                },
                "DirectDebitStartDate": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AccountType": {
            "required": [
                "Name",
                "Label"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "AccountCategory_Name": {
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/AccountCategory"
                },
                "CountriesAvailability": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CountriesAccountType"
                    }
                }
            }
        },
        "Custodian": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "Configuration": {
                    "type": "string"
                }
            }
        },
        "BankAccount": {
            "required": [
                "Profile_Id"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "BankName": {
                    "type": "string"
                },
                "AccountName": {
                    "type": "string"
                },
                "AccountNumber": {
                    "type": "string"
                },
                "SortCode": {
                    "type": "string"
                },
                "Profile": {
                    "$ref": "#/definitions/Profile"
                },
                "Profile_Id": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                },
                "Country_Id": {
                    "type": "string"
                },
                "IsAccountHolder": {
                    "type": "boolean"
                },
                "IsAuthorizeDebits": {
                    "type": "boolean"
                },
                "FinancialAccount_Id": {
                    "type": "string"
                }
            }
        },
        "Goals": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Portfolio_Id": {
                    "type": "string"
                },
                "Portfolio": {
                    "$ref": "#/definitions/PortfoliosInfos"
                },
                "User_Id": {
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ExpectedValue": {
                    "$ref": "#/definitions/Money"
                },
                "Country_Id": {
                    "type": "string"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementIncomeYear": {
                    "format": "double",
                    "type": "number"
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "GoalArea": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "HowManyYearStart": {
                    "format": "int32",
                    "type": "integer"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "type": "number"
                },
                "UserOptions": {
                    "type": "string"
                },
                "CustomLifeStylesCategoryAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomLifeStyleCategoryAmount"
                    }
                },
                "LifeStyle_Id": {
                    "type": "string"
                },
                "LifeStyle": {
                    "$ref": "#/definitions/LifeStyle"
                },
                "GlobalAssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                },
                "TotalAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "Tag": {
                    "type": "string"
                },
                "StatusChangeReason": {
                    "type": "string"
                },
                "UseDefaultPortfolio": {
                    "type": "boolean"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                },
                "CompletionDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CountriesAccountType": {
            "required": [
                "CountriesId",
                "AccountTypeId"
            ],
            "type": "object",
            "properties": {
                "CountriesId": {
                    "type": "string"
                },
                "AccountTypeId": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                }
            }
        },
        "PortfoliosInfos": {
            "required": [
                "EnterpriseName"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Volatility": {
                    "format": "double",
                    "type": "number"
                },
                "Number": {
                    "format": "int32",
                    "type": "integer"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                },
                "SimulationKey": {
                    "type": "string"
                },
                "EnterpriseName": {
                    "type": "string"
                }
            }
        },
        "CustomLifeStyleCategoryAmount": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                },
                "Goal_Id": {
                    "type": "string"
                }
            }
        },
        "LifeStyle": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Country_Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "LifeStyleType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "MonthlyTargetIncome": {
                    "$ref": "#/definitions/Money"
                },
                "MinGrossIncomeBracket": {
                    "$ref": "#/definitions/Money"
                },
                "MaxGrossIncomeBracket": {
                    "$ref": "#/definitions/Money"
                },
                "PropensityToConsume": {
                    "format": "double",
                    "type": "number"
                },
                "PercentageByCategory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LifeStyleCategoryPercentage"
                    }
                }
            }
        },
        "LifeStyleCategoryPercentage": {
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "Percentage": {
                    "format": "double",
                    "type": "number"
                },
                "DisplayOrder": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CustodianApplicationModel": {
            "type": "object",
            "properties": {
                "goalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "bankAccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "contributionStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "applicationId": {
                    "type": "string"
                }
            }
        },
        "SaveBankAccountModel": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/BankAccount"
                },
                "applicationId": {
                    "type": "string"
                }
            }
        },
        "PagingModel[EnterpriseDocumentRM]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseDocumentRM"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "EnterpriseDocumentRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "DocumentUniqueName": {
                    "type": "string"
                },
                "EnterpriseName": {
                    "type": "string"
                },
                "ResellerName": {
                    "type": "string"
                },
                "IsPrivate": {
                    "type": "boolean"
                },
                "AccessUrl": {
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "FriendlyName": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DocumentType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                },
                "AbstractFolderName": {
                    "type": "string"
                },
                "AbstractFolderId": {
                    "type": "string"
                },
                "EnterpriseDocumentKey": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DocumentAbstractFolderRM": {
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "ParentId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                }
            }
        },
        "DocumentRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "NONE",
                        "TRANSFER_FORM",
                        "SUITABILITY_REPORT",
                        "PROOF_OF_IDENTITY",
                        "ANNUITY_ATTACHMENT",
                        "PENSION_TRACING_FORM",
                        "DRAWDOWN_ATTACHMENT",
                        "WITHDRAW_ATTACHMENT",
                        "KEEPINVESTED_ATTACHMENT",
                        "COMPLETION_CERTIFICATE",
                        "DRAWDOWN_APPLICATION_FORM",
                        "PENSION_TRACING_DOC",
                        "WELCOME_PACK",
                        "WAKEUP_PACK",
                        "WAKEUP_PACK_5Y_FROM_GOAL",
                        "ANNUAL_STATEMENT",
                        "GDPR_EXPORT",
                        "FLAG_INTERNAL"
                    ],
                    "type": "string"
                },
                "LastModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProfileId": {
                    "type": "string"
                }
            }
        },
        "EmployerScheduledTransactionsRM": {
            "type": "object",
            "properties": {
                "Employer": {
                    "$ref": "#/definitions/EmployerRM"
                },
                "ScheduledTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledTransactionRM"
                    }
                }
            }
        },
        "ScheduledTransactionRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "FinancialAccount_AccountNumber": {
                    "type": "string"
                },
                "Employer_EmployerName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PaymentFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "ScheduledTransactionCreation": {
                    "format": "date-time",
                    "type": "string"
                },
                "FirstPayment": {
                    "format": "date-time",
                    "type": "string"
                },
                "NextPayment": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndingPayment": {
                    "format": "date-time",
                    "type": "string"
                },
                "NetAmount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "EnterpriseRM": {
            "type": "object",
            "properties": {
                "ResellerDisplayName": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/ShortCountryRM"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UniqueName": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "ResellerName": {
                    "type": "string"
                }
            }
        },
        "CurrentEmployerInfoModel": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "DCEmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "DBRetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DBRetirementAge": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "EmployerViewModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "EmployerName": {
                    "type": "string"
                },
                "UniqueName": {
                    "type": "string"
                },
                "AlternativesNames": {
                    "type": "string"
                },
                "Schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PensionSchemeViewModel"
                    }
                }
            }
        },
        "PensionSchemeViewModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PreviousNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PreviousNamesJson": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "PensionProvider": {
                    "$ref": "#/definitions/Provider"
                }
            }
        },
        "ContributionDetailsModel": {
            "type": "object",
            "properties": {
                "EmployeeMonthlyContributionAmount": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContributionAmount": {
                    "$ref": "#/definitions/Money"
                },
                "EmployeeMonthlyContributionPercent": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "EmployerMonthlyContributionPercent": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "TaxReliefPercentage": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "TaxReliefMonthly": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                },
                "TotalContributionPercentage": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "EmployeeMonthlyContributionWithTaxRelief": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                },
                "TotalMonthlyContribution": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                },
                "TopUpPerUnitCurrency": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                }
            }
        },
        "CustomEmployerPensionSchemeData": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "percentOptions": {
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "hasLengthOfServiceBonus": {
                    "type": "boolean"
                },
                "matchingRule": {
                    "type": "string"
                },
                "defaultEmployerContributionPercent": {
                    "format": "double",
                    "type": "number"
                },
                "defaultEmployeeContributionPercent": {
                    "format": "double",
                    "type": "number"
                },
                "matchingRuleCustomNotice": {
                    "type": "string"
                }
            }
        },
        "OptionPackRM": {
            "type": "object",
            "properties": {
                "HasFinancialDeviceAccountType": {
                    "type": "object",
                    "properties": {
                        "PEE": {
                            "type": "boolean"
                        },
                        "PERCO": {
                            "type": "boolean"
                        },
                        "PER": {
                            "type": "boolean"
                        }
                    },
                    "readOnly": true
                },
                "Contributions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmployerContribution"
                    }
                }
            }
        },
        "EmployerContribution": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "Incentive",
                        "Stake",
                        "Mixed"
                    ],
                    "type": "string"
                },
                "Context": {
                    "enum": [
                        "Normal",
                        "Additional",
                        "Exceptional"
                    ],
                    "type": "string"
                },
                "Date": {
                    "format": "date-time",
                    "type": "string"
                },
                "AllocatedAmount": {
                    "$ref": "#/definitions/Money"
                },
                "AmountAllocation": {
                    "type": "object",
                    "properties": {
                        "PEE": {
                            "$ref": "#/definitions/Money"
                        },
                        "PERCO": {
                            "$ref": "#/definitions/Money"
                        },
                        "PER": {
                            "$ref": "#/definitions/Money"
                        }
                    }
                },
                "PercentageAllocation": {
                    "type": "object",
                    "properties": {
                        "PEE": {
                            "format": "double",
                            "type": "number"
                        },
                        "PERCO": {
                            "format": "double",
                            "type": "number"
                        },
                        "PER": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                },
                "HasFinancialDeviceAccountType": {
                    "type": "object",
                    "properties": {
                        "PEE": {
                            "type": "boolean"
                        },
                        "PERCO": {
                            "type": "boolean"
                        },
                        "PER": {
                            "type": "boolean"
                        }
                    }
                },
                "IncomeTaxRate": {
                    "format": "double",
                    "type": "number"
                },
                "EmployerUniqueName": {
                    "type": "string"
                }
            }
        },
        "SimulateEmployerContributionsInputRM": {
            "type": "object",
            "properties": {
                "ReceivedGain": {
                    "$ref": "#/definitions/Money"
                },
                "IncomeTaxRate": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "OptionPackSimulationRM": {
            "type": "object",
            "properties": {
                "OptionPackSimulationResult": {
                    "enum": [
                        "FullInvestmentComparison",
                        "PartialRetrievedGain"
                    ],
                    "type": "string"
                },
                "ComparativeGain": {
                    "$ref": "#/definitions/Money"
                },
                "InvestedContribution": {
                    "$ref": "#/definitions/InvestedContributionSimulation"
                },
                "RetrievedContribution": {
                    "$ref": "#/definitions/RetrievedContributionSimulation"
                },
                "ReceivedGain": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "InvestedContributionSimulation": {
            "type": "object",
            "properties": {
                "AllocatedNetAmount": {
                    "$ref": "#/definitions/Money"
                },
                "ContributionGrossAmount": {
                    "$ref": "#/definitions/Money"
                },
                "ContributionTaxRate": {
                    "format": "double",
                    "type": "number"
                },
                "ContributionTax": {
                    "$ref": "#/definitions/Money"
                },
                "NetAmount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "RetrievedContributionSimulation": {
            "type": "object",
            "properties": {
                "AllocatedNetAmount": {
                    "$ref": "#/definitions/Money"
                },
                "NetAmount": {
                    "$ref": "#/definitions/Money"
                },
                "IncomeTaxRate": {
                    "format": "double",
                    "type": "number"
                },
                "IncomeTax": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "HSBCResellerFREnterpriseContributionRM": {
            "type": "object",
            "properties": {
                "EmployerExternalId": {
                    "type": "string"
                },
                "EmployerContributionType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "EmployerContributionTypeMapping": {
                    "type": "string"
                },
                "ContributionLimit": {
                    "$ref": "#/definitions/Money"
                },
                "ConsumedContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerUniqueName": {
                    "type": "string"
                },
                "HasValue": {
                    "type": "boolean",
                    "readOnly": true
                },
                "RemainingContribution": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                },
                "RemainingContributionRatio": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "EmploymentHistoryCreationRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "AccountType": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Employers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TracingEmployerRM"
                    }
                },
                "NINumber": {
                    "type": "string"
                },
                "MaidenName": {
                    "type": "string"
                },
                "IsMale": {
                    "type": "boolean"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "type": "string"
                },
                "DateOfCreation": {
                    "format": "date-time",
                    "type": "string"
                },
                "SaveProfileInfo": {
                    "type": "boolean"
                },
                "StartTracing": {
                    "type": "boolean"
                },
                "RedirectUrlAfterSign": {
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                }
            }
        },
        "TracingEmployerRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "User_Id": {
                    "type": "string"
                },
                "TracingId": {
                    "type": "string"
                },
                "AIPEmployerId": {
                    "type": "string"
                },
                "UniqueName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "CurrentEmployer": {
                    "type": "boolean"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AccountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "ProfileTransactionId": {
                    "type": "string"
                },
                "HistoryProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TracingProviderRM"
                    }
                }
            }
        },
        "TracingProviderRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "User_Id": {
                    "type": "string"
                },
                "AIPProviderId": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "Favicon": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "UNLINKED",
                        "LINKED",
                        "UNAVAILABLE"
                    ],
                    "type": "string"
                },
                "SignatureType": {
                    "enum": [
                        "WetInk",
                        "Digital",
                        "All"
                    ],
                    "type": "string"
                },
                "EmploymentHistory_Id": {
                    "type": "string"
                },
                "ProfileTransactionId": {
                    "type": "string"
                },
                "TracingId": {
                    "type": "string"
                },
                "TracingStep": {
                    "enum": [
                        "NONE",
                        "INITIATED",
                        "WAITING_LOA",
                        "PROCESSING_LOA",
                        "TRACING",
                        "CANCELLED",
                        "TRACED",
                        "ABANDONED",
                        "READY_FOR_TRACING"
                    ],
                    "type": "string"
                }
            }
        },
        "DeleteEmploymentHistoryModel": {
            "type": "object",
            "properties": {
                "ProviderId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "HistoryId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                }
            }
        },
        "TracingItemRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "User_Id": {
                    "type": "string"
                },
                "AIPProviderId": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Favicon": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "UNLINKED",
                        "LINKED",
                        "UNAVAILABLE"
                    ],
                    "type": "string"
                },
                "TracingStep": {
                    "enum": [
                        "NONE",
                        "INITIATED",
                        "WAITING_LOA",
                        "PROCESSING_LOA",
                        "TRACING",
                        "CANCELLED",
                        "TRACED",
                        "ABANDONED",
                        "READY_FOR_TRACING"
                    ],
                    "type": "string"
                },
                "SignatureType": {
                    "enum": [
                        "WetInk",
                        "Digital",
                        "All"
                    ],
                    "type": "string"
                },
                "EmploymentHistory_Id": {
                    "type": "string"
                },
                "ProfileTransactionId": {
                    "type": "string"
                },
                "TracingId": {
                    "type": "string"
                },
                "EmploymentHistory": {
                    "$ref": "#/definitions/TracingParentRM"
                },
                "ProfileTransactionStatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ModificationDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "TracingParentRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "User_Id": {
                    "type": "string"
                },
                "TracingId": {
                    "type": "string"
                },
                "AIPEmployerId": {
                    "type": "string"
                },
                "UniqueName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "CurrentEmployer": {
                    "type": "boolean"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AccountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "ProfileTransactionId": {
                    "type": "string"
                }
            }
        },
        "UpdateEmploymentHistoryModel": {
            "type": "object",
            "properties": {
                "TracingStep": {
                    "enum": [
                        "NONE",
                        "INITIATED",
                        "WAITING_LOA",
                        "PROCESSING_LOA",
                        "TRACING",
                        "CANCELLED",
                        "TRACED",
                        "ABANDONED",
                        "READY_FOR_TRACING"
                    ],
                    "type": "string"
                },
                "ProviderId": {
                    "type": "string"
                }
            }
        },
        "TracingDocumentsRM": {
            "type": "object",
            "properties": {
                "SignatureType": {
                    "enum": [
                        "WetInk",
                        "Digital",
                        "All"
                    ],
                    "type": "string"
                },
                "DocumentId": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "ProviderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ProviderDisplayName": {
                    "type": "string"
                }
            }
        },
        "EnterpriseResourceRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                },
                "Language": {
                    "$ref": "#/definitions/Language"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        516607
                    ],
                    "type": "integer"
                },
                "EnterpriseName": {
                    "type": "string"
                }
            }
        },
        "EnterprisePolicyRM": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Style": {
                    "type": "string"
                },
                "EnterpriseUniqueName": {
                    "type": "string"
                },
                "ResellerUniqueName": {
                    "type": "string"
                },
                "CustomUri": {
                    "type": "string"
                },
                "CustomStyle": {
                    "type": "string"
                },
                "DefaultLanguageCode": {
                    "type": "string"
                },
                "DeepLink": {
                    "$ref": "#/definitions/DeepLink"
                },
                "WebViewSettings": {
                    "$ref": "#/definitions/WebViewSettings"
                },
                "RetailerUniqueName": {
                    "type": "string"
                },
                "CallsToThirdParties": {
                    "$ref": "#/definitions/CallToThirdPartySettings"
                },
                "B2CCustomDomain": {
                    "type": "string"
                },
                "GoogleAnalyticsId": {
                    "type": "string"
                },
                "BotHandle": {
                    "type": "string"
                }
            }
        },
        "DeepLink": {
            "type": "object",
            "properties": {
                "FallbackUrl": {
                    "type": "string"
                },
                "AndroidFallbackUrl": {
                    "type": "string"
                },
                "IOSFallbackUrl": {
                    "type": "string"
                }
            }
        },
        "WebViewSettings": {
            "type": "object",
            "properties": {
                "CtaAction": {
                    "format": "int32",
                    "type": "integer"
                },
                "InternalNavigation": {
                    "type": "boolean"
                },
                "ExternalNavigation": {
                    "type": "boolean"
                },
                "DisplayTopBar": {
                    "type": "boolean"
                },
                "UseHelloJSCookie": {
                    "type": "boolean"
                },
                "DisplayFullWebsite": {
                    "type": "boolean"
                }
            }
        },
        "CallToThirdPartySettings": {
            "type": "object",
            "properties": {
                "LanguageParameterName": {
                    "type": "string"
                },
                "ReturnUrlParameterName": {
                    "type": "string"
                },
                "EnterpriseParameterName": {
                    "type": "string"
                },
                "CallToActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CallToActionMapping"
                    }
                }
            }
        },
        "CallToActionMapping": {
            "required": [
                "CallToAction",
                "Url",
                "WebViewUrl"
            ],
            "type": "object",
            "properties": {
                "CurrentLocationIsReturnUrl": {
                    "type": "boolean",
                    "readOnly": true
                },
                "ReturnUrlPath": {
                    "type": "string"
                },
                "CallToAction": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "LocalizationKey": {
                    "type": "string"
                },
                "WebViewUrl": {
                    "type": "string"
                },
                "TabName": {
                    "type": "string"
                }
            }
        },
        "FeatureBotIntentModel": {
            "type": "object",
            "properties": {
                "FeatureName": {
                    "type": "string"
                },
                "IntentEntities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntentEntityModel"
                    }
                }
            }
        },
        "IntentEntityModel": {
            "type": "object",
            "properties": {
                "Intent": {
                    "type": "string"
                },
                "EntityType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        -1
                    ],
                    "type": "integer"
                },
                "EntityResolutionOperatorType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "EntityResolution": {
                    "type": "string"
                }
            }
        },
        "ProfileEnterpriseRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Enterprise": {
                    "$ref": "#/definitions/EnterpriseRM"
                },
                "EmploymentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EmploymentEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Current": {
                    "type": "boolean"
                },
                "GrossSalary": {
                    "$ref": "#/definitions/Money"
                },
                "FullTime": {
                    "type": "boolean"
                },
                "BasicPayFrequency": {
                    "format": "int32",
                    "type": "integer"
                },
                "Commissions": {
                    "$ref": "#/definitions/Money"
                },
                "OvertimePay": {
                    "$ref": "#/definitions/Money"
                },
                "OccupationId": {
                    "type": "string"
                },
                "EmployeeId": {
                    "type": "string"
                }
            }
        },
        "TransactionEmail": {
            "type": "object",
            "properties": {
                "TemplateKey": {
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                },
                "Substitutions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "EmailTo": {
                    "type": "string"
                },
                "defaultTemplateID": {
                    "type": "string"
                },
                "EnterpriseUniqueName": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                }
            }
        },
        "EnterpriseSelectorConfigurationRM": {
            "type": "object",
            "properties": {
                "AIPAutomationDisabled": {
                    "type": "boolean"
                },
                "ManualEstimateRetirementIncome": {
                    "type": "boolean"
                },
                "GoalTypesUnavailable": {
                    "format": "int32",
                    "type": "integer"
                },
                "MenuItemsUnavailable": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsLGPSMember": {
                    "type": "boolean"
                },
                "IsAVARegulatedAdviceProvided": {
                    "type": "boolean"
                },
                "AvaRegulatedAdvicePricing": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "IFARegulatedAdviceType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "IFARegulatedAdvicePlan": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "IsIntelligentPredictEnabled": {
                    "type": "boolean"
                },
                "CustomStyle": {
                    "type": "string"
                },
                "AdaptiveCardStyle": {
                    "type": "object"
                },
                "DefaultAccountPortfolioNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultProviderIdentifier": {
                    "$ref": "#/definitions/ProviderIdentifier"
                },
                "AboutDetails": {
                    "$ref": "#/definitions/AboutDetails"
                },
                "Policy": {
                    "$ref": "#/definitions/B2CPolicy"
                },
                "ExternalLinksCTA": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "OneSignalAppId": {
                    "type": "string"
                },
                "KcFixedButtons": {
                    "type": "boolean"
                },
                "PublishCampaignsPipeline": {
                    "type": "string"
                },
                "NudgeCallbackPipeline": {
                    "type": "string"
                },
                "WebViewSettings": {
                    "$ref": "#/definitions/WebViewSettings"
                },
                "CallsToThirdParties": {
                    "$ref": "#/definitions/CallToThirdPartySettings"
                },
                "SavingGoalMaxDuration": {
                    "format": "double",
                    "type": "number"
                },
                "UseGrossIncomeValues": {
                    "type": "boolean"
                },
                "UseNetIncomeValuesForLifestyles": {
                    "type": "boolean"
                },
                "UseImportedRetirementAge": {
                    "type": "boolean"
                },
                "IsMenuGoalAvailable": {
                    "type": "boolean"
                },
                "IsMenuFinancialProfileAvailable": {
                    "type": "boolean"
                },
                "IsMenuFindTransferAvailable": {
                    "type": "boolean"
                },
                "IsMenuKnowledgeAvailable": {
                    "type": "boolean"
                },
                "IsMenuLinkAccountsAvailable": {
                    "type": "boolean"
                },
                "IsMenuPersonalProfileAvailable": {
                    "type": "boolean"
                },
                "IsMenuPaymentsAvailable": {
                    "type": "boolean"
                },
                "IsBudgetGoalAvailable": {
                    "type": "boolean"
                },
                "IsBuyGiftAvailable": {
                    "type": "boolean"
                },
                "IsChildrenEducationAvailable": {
                    "type": "boolean"
                },
                "IsEmergencyFundAvailable": {
                    "type": "boolean"
                },
                "IsGeneralInvestingAvailable": {
                    "type": "boolean"
                },
                "IsMortgageAvailable": {
                    "type": "boolean"
                },
                "IsPayOffDebtAvailable": {
                    "type": "boolean"
                },
                "IsPlanWeddingAvailable": {
                    "type": "boolean"
                },
                "IsSaveFamilyEventAvailable": {
                    "type": "boolean"
                },
                "IsSaveForCarAvailable": {
                    "type": "boolean"
                },
                "IsSaveForChristmasAvailable": {
                    "type": "boolean"
                },
                "IsSaveForHouseAvailable": {
                    "type": "boolean"
                },
                "IsSaveHolidayAvailable": {
                    "type": "boolean"
                },
                "IsSaveRetirementAvailable": {
                    "type": "boolean"
                },
                "IsOptimiseRetirementIncomeAvailable": {
                    "type": "boolean"
                }
            }
        },
        "ProviderIdentifier": {
            "type": "object",
            "properties": {
                "LinkServiceProviderId": {
                    "type": "string"
                },
                "LinkServiceId": {
                    "type": "string"
                }
            }
        },
        "AboutDetails": {
            "type": "object",
            "properties": {
                "ContactUs": {
                    "type": "string"
                },
                "TermsConditions": {
                    "type": "string"
                },
                "RiskWarning": {
                    "type": "string"
                },
                "FAQ": {
                    "type": "string"
                },
                "AssetsUnderManagement": {
                    "$ref": "#/definitions/Money"
                },
                "NumberOfClients": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "B2CPolicy": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Style": {
                    "type": "string"
                },
                "DefaultRegistrationEnterprise": {
                    "type": "string"
                }
            }
        },
        "EnterpriseCredentialModel": {
            "type": "object",
            "properties": {
                "AppId": {
                    "type": "string"
                },
                "AppSecret": {
                    "type": "string"
                }
            }
        },
        "OccupationRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "JobTitle": {
                    "type": "string"
                },
                "Sector": {
                    "type": "string"
                },
                "Order": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SubscriptionRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "EventName": {
                    "type": "string"
                },
                "CallbackUrl": {
                    "type": "string"
                }
            }
        },
        "EnterpriseCustomerViewModel": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "PinCode": {
                    "type": "string"
                },
                "IsTestUser": {
                    "type": "boolean"
                },
                "Nin": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Postcode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "type": "integer"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AlternativeIdentifier": {
                    "type": "string"
                },
                "AlternativeIdentifier2": {
                    "type": "string"
                },
                "Login": {
                    "type": "string"
                },
                "AutogenerateLogin": {
                    "type": "boolean"
                }
            }
        },
        "PagingModel[EnterpriseCustomer]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseCustomer"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "EnterpriseCustomer": {
            "type": "object",
            "properties": {
                "CustomerId": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Postcode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PagingModel[ProfileTransactionRM]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileTransactionRM"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ProfileTransactionRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "ReferenceNumber": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                },
                "ProfileId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "TypeOfTransaction": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string"
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "EnterpriseUniqueName": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProcessedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StatusCodeChangeReason": {
                    "type": "string"
                },
                "TransactionPayload": {
                    "$ref": "#/definitions/BaseTransaction"
                }
            }
        },
        "BaseTransaction": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "FeedbackReasonRM": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "DrawdownAccountUpdateRM": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "CurrentDrawdownIncome": {
                    "$ref": "#/definitions/Money"
                },
                "CurrentDrawdownIncomeFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "NewDrawdownIncome": {
                    "$ref": "#/definitions/Money"
                },
                "NewDrawdownIncomeFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "BankAccountInfos": {
                    "$ref": "#/definitions/PaymentInfos"
                }
            }
        },
        "PaymentInfos": {
            "type": "object",
            "properties": {
                "BankAccountSortCode": {
                    "type": "string"
                },
                "BankName": {
                    "type": "string"
                },
                "AccountName": {
                    "type": "string"
                },
                "BankAccountNumber": {
                    "type": "string"
                },
                "IBAN": {
                    "type": "string"
                },
                "BIC": {
                    "type": "string"
                },
                "CountryISOCode": {
                    "type": "string"
                }
            }
        },
        "DiagnosticsModel": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "MoneyNavigatorImage": {
                    "type": "string"
                },
                "AssumptionInformation": {
                    "$ref": "#/definitions/AssumptionInformation"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiagnosticResult"
                    }
                },
                "Remarks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AssumptionInformation": {
            "type": "object",
            "properties": {
                "InformationIconText": {
                    "type": "string"
                },
                "InformationIconTextBold": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "GrossSalaryAmount": {
                    "type": "string"
                },
                "GrossSalaryTitle": {
                    "type": "string"
                },
                "MonthlyExpensesAmount": {
                    "type": "string"
                },
                "MonthlyExpensesTitle": {
                    "type": "string"
                },
                "MonthlyExpensesDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MonthlyExpensesButtonTitle": {
                    "type": "string"
                },
                "MonthlyExpensesButtonUrl": {
                    "type": "string"
                },
                "SavingsAmount": {
                    "type": "string"
                },
                "SavingsTitle": {
                    "type": "string"
                },
                "SavingsButtonTitle": {
                    "type": "string"
                },
                "SavingsButtonUrl": {
                    "type": "string"
                },
                "ActionPlanFormulationTitle": {
                    "type": "string"
                },
                "ActionPlanFormulationDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SavingsDescription": {
                    "type": "string"
                },
                "ChatTitle": {
                    "type": "string"
                },
                "ChatDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "GrossSalaryDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DiagnosticResult": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "string"
                },
                "Rank": {
                    "format": "int32",
                    "type": "integer"
                },
                "Level": {
                    "enum": [
                        "UNKNOWN",
                        "INVALID",
                        "GREEN",
                        "AMBER",
                        "RED"
                    ],
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Reco": {
                    "type": "string"
                },
                "Reco1": {
                    "type": "string"
                },
                "Cta": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "TileColor": {
                    "type": "string"
                },
                "BtnTitle": {
                    "type": "string"
                },
                "TileImage": {
                    "type": "string"
                },
                "TileImageDataType": {
                    "type": "string"
                }
            }
        },
        "RiskProfileFormElement": {
            "type": "object",
            "properties": {
                "id": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "order": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "sectionId": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "questionId": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "rpPoints": {
                    "format": "int32",
                    "type": "integer"
                },
                "gbiPoints": {
                    "format": "int32",
                    "type": "integer"
                },
                "selected": {
                    "type": "boolean"
                }
            }
        },
        "RiskProfilingResponseRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "RiskProfilingForm": {
                    "$ref": "#/definitions/RiskProfilingForm"
                },
                "Content": {
                    "type": "string"
                },
                "RpScore": {
                    "format": "int32",
                    "type": "integer"
                },
                "GbiScore": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RiskProfilingForm": {
            "required": [
                "EnterpriseName"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "Published": {
                    "type": "boolean"
                },
                "EnterpriseName": {
                    "type": "string"
                },
                "Enterprise": {
                    "$ref": "#/definitions/Enterprise"
                },
                "MinutesValidity": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RiskGrade": {
            "type": "object",
            "properties": {
                "Value": {
                    "format": "int32",
                    "type": "integer"
                },
                "Label": {
                    "type": "string"
                }
            }
        },
        "PortfolioCompleteInfosRM": {
            "type": "object",
            "properties": {
                "portfolioInfos": {
                    "$ref": "#/definitions/PortfolioInfosRM"
                },
                "assetAllocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationRM"
                    }
                },
                "assetAllocationItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                }
            }
        },
        "PortfolioInfosRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Volatility": {
                    "format": "double",
                    "type": "number"
                },
                "Number": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "AssetAllocationRM": {
            "type": "object",
            "properties": {
                "ShareAllocation": {
                    "format": "double",
                    "type": "number"
                },
                "AssetAllocationInfos": {
                    "$ref": "#/definitions/AssetAllocationInfosRM"
                }
            }
        },
        "AssetAllocationInfosRM": {
            "type": "object",
            "properties": {
                "Label": {
                    "type": "string"
                },
                "ETFName": {
                    "type": "string"
                },
                "ISIN": {
                    "type": "string"
                }
            }
        },
        "EstimatedRemainingAnnualAllowanceModel": {
            "type": "object",
            "properties": {
                "TotalPaidIn": {
                    "$ref": "#/definitions/Money"
                },
                "RemainingAnnualAllowance": {
                    "$ref": "#/definitions/Money"
                },
                "IdealEmployeeContribution": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "EstimateRetirementIncomeForPensionModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "TotalAccumulatedNominalCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TotalAccumulatedRealCapital": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "CashValue": {
                    "$ref": "#/definitions/Money"
                },
                "Datas": {
                    "type": "string"
                },
                "LumpSumValue": {
                    "$ref": "#/definitions/Money"
                },
                "LumpSumRate": {
                    "$ref": "#/definitions/Money"
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "ApplicableRetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "ApplicableRetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "ApplicableCashValue": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "PensionsForecastInput": {
            "type": "object",
            "properties": {
                "Age": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "EstimatedTotalPaidInModel": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "EmployerContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployeeContribution": {
                    "$ref": "#/definitions/Money"
                },
                "TopUp": {
                    "$ref": "#/definitions/Money"
                },
                "Balance": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "DrawdownAccountIncomeRM": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "DrawdownIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DrawdownIncomeFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                }
            }
        },
        "DrawdownInfos": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": -1,
                    "type": "integer"
                },
                "MonthlyVariableIncome": {
                    "$ref": "#/definitions/Money"
                },
                "TermLength": {
                    "type": "string"
                },
                "AmountInvested": {
                    "$ref": "#/definitions/Money"
                },
                "DesiredYearlyIncome": {
                    "$ref": "#/definitions/Money"
                },
                "AverageRunOutAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": -1,
                    "type": "integer"
                },
                "FiveYearsForecast": {
                    "$ref": "#/definitions/Money"
                },
                "TenYearsForecast": {
                    "$ref": "#/definitions/Money"
                },
                "FeesPercentage": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "FeesForComparison": {
                    "$ref": "#/definitions/Money"
                },
                "DrawdownAgePortfolioInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DrawdownAgePortfolioInfos"
                    }
                },
                "InitialCapital": {
                    "$ref": "#/definitions/Money"
                },
                "RemainingBalance": {
                    "$ref": "#/definitions/Money"
                },
                "CrystallisedBalance": {
                    "$ref": "#/definitions/Money"
                },
                "TotalWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TaxedWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "WithdrawalTaxes": {
                    "$ref": "#/definitions/Money"
                },
                "StatePensionIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DBPensionsIncome": {
                    "$ref": "#/definitions/Money"
                },
                "GraphicIncomes": {
                    "type": "string"
                }
            }
        },
        "DrawdownAgePortfolioInfos": {
            "type": "object",
            "properties": {
                "DrawdownAge": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": -1,
                    "type": "number"
                },
                "PortfoliosInfos": {
                    "$ref": "#/definitions/PortfoliosInfos"
                },
                "IsPreferred": {
                    "type": "boolean"
                },
                "GraphicDatas": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                }
            }
        },
        "Tuple[Double,String]": {
            "type": "object",
            "properties": {
                "Item1": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "Item2": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WeeklyStatePensionModel": {
            "type": "object",
            "properties": {
                "howManyYearsWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "customAverageGrowth": {
                    "enum": [
                        "NoIncrease",
                        "SmallIncrease",
                        "HighIncrease",
                        "SmallDecrease"
                    ],
                    "type": "string"
                },
                "retirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "SimulationDataOnly": {
                    "type": "boolean"
                },
                "WorkingPeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmploymentPeriodRM"
                    }
                }
            }
        },
        "EmploymentPeriodRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "OccupationCodeId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartSalary": {
                    "$ref": "#/definitions/Money"
                },
                "EndSalary": {
                    "$ref": "#/definitions/Money"
                },
                "Points": {
                    "format": "double",
                    "type": "number"
                },
                "Details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmploymentPeriodDetailsRM"
                    }
                },
                "IsSynchronised": {
                    "type": "boolean"
                }
            }
        },
        "EmploymentPeriodDetailsRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Salary": {
                    "$ref": "#/definitions/Money"
                },
                "Points": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "MonthlyTopUpPensionContributionsModel": {
            "type": "object",
            "properties": {
                "linkServiceProviderId": {
                    "type": "string"
                },
                "employerUniqueName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "employeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "linkServiceId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                }
            }
        },
        "GetAccumulatedCapitalModel": {
            "type": "object",
            "properties": {
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "PortfolioNumber": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "DurationYear": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "NoMonthEnd": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": -1,
                    "type": "integer"
                }
            }
        },
        "Tuple[Int32,Money]": {
            "type": "object",
            "properties": {
                "Item1": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "Item2": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                }
            }
        },
        "TaxSimulationRequest": {
            "required": [
                "CurrentAge",
                "IsSingle",
                "IsMale",
                "NumberOfDependentChildren",
                "NetMonthlyHouseholdIncome",
                "MaximumEligibleContribution",
                "SavingsStartMonth",
                "RetirementAge",
                "EmploymentStatus"
            ],
            "type": "object",
            "properties": {
                "CurrentAge": {
                    "format": "int32",
                    "maximum": 150,
                    "minimum": 1,
                    "type": "integer"
                },
                "IsSingle": {
                    "type": "boolean"
                },
                "IsMale": {
                    "type": "boolean"
                },
                "NumberOfDependentChildren": {
                    "format": "int32",
                    "maximum": 20,
                    "minimum": 0,
                    "type": "integer"
                },
                "NetMonthlyHouseholdIncome": {
                    "$ref": "#/definitions/Money"
                },
                "MaximumEligibleContribution": {
                    "$ref": "#/definitions/Money"
                },
                "SavingsStartMonth": {
                    "format": "date-time",
                    "type": "string"
                },
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 150,
                    "minimum": 1,
                    "type": "integer"
                },
                "EmploymentStatus": {
                    "enum": [
                        "Employee"
                    ],
                    "type": "string"
                },
                "Settings": {
                    "$ref": "#/definitions/TaxSimulatorSettings"
                }
            }
        },
        "TaxSimulatorSettings": {
            "required": [
                "ArrearsRate",
                "TechnicalInterestRate",
                "AnnualInvestmentReturnRate"
            ],
            "type": "object",
            "properties": {
                "ArrearsRate": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "TechnicalInterestRate": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "AnnualInvestmentReturnRate": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                }
            }
        },
        "TaxSimulationResponse": {
            "type": "object",
            "properties": {
                "TaxDeductibleMonthlyPayment": {
                    "$ref": "#/definitions/Money"
                },
                "TaxSavingsPerYear": {
                    "$ref": "#/definitions/Money"
                },
                "AdditionalPensionPerYear": {
                    "$ref": "#/definitions/Money"
                },
                "TotalTaxSavings": {
                    "$ref": "#/definitions/Money"
                },
                "TermCapitalizedInvestment": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "TaxSimulatorRM": {
            "type": "object",
            "properties": {
                "Household": {
                    "$ref": "#/definitions/Household"
                },
                "User": {
                    "$ref": "#/definitions/UserInformationRM"
                },
                "Spouse": {
                    "$ref": "#/definitions/UserInformationRM"
                },
                "SimulatorInput": {
                    "$ref": "#/definitions/SimulatorInput"
                }
            }
        },
        "Household": {
            "type": "object",
            "properties": {
                "MaritalStatus": {
                    "enum": [
                        "Unknown",
                        "Married",
                        "CivilPartnership",
                        "Divorced",
                        "Separated",
                        "Widowed",
                        "Single",
                        "Partner",
                        "LegallySeparated",
                        "SameSexMarriage",
                        "SameSexRelationship",
                        "CommonLaw"
                    ],
                    "type": "string"
                },
                "NumberOfDependentChildren": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "HasToUpdate": {
                    "type": "boolean"
                }
            }
        },
        "UserInformationRM": {
            "required": [
                "Age",
                "RetirementAge",
                "FirstJobYear"
            ],
            "type": "object",
            "properties": {
                "Age": {
                    "format": "int32",
                    "type": "integer"
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "FirstJobYear": {
                    "format": "int32",
                    "type": "integer"
                },
                "CurrentAnnualSalary": {
                    "$ref": "#/definitions/Money"
                },
                "OtherIncome": {
                    "$ref": "#/definitions/Money"
                },
                "FirstJobAnnualSalary": {
                    "$ref": "#/definitions/Money"
                },
                "OccupationCode": {
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string"
                },
                "UnusedRetirementLimit": {
                    "$ref": "#/definitions/Money"
                },
                "CustomAverageGrowth": {
                    "enum": [
                        "NoIncrease",
                        "SmallIncrease",
                        "HighIncrease",
                        "SmallDecrease"
                    ],
                    "type": "string"
                },
                "HasToUpdate": {
                    "type": "boolean"
                }
            }
        },
        "SimulatorInput": {
            "required": [
                "RiskGrade",
                "NumberOfDependentChildrenAtRetirement",
                "SplitCount"
            ],
            "type": "object",
            "properties": {
                "RiskGrade": {
                    "format": "int32",
                    "type": "integer"
                },
                "AnnualContribution": {
                    "$ref": "#/definitions/Money"
                },
                "InitialContribution": {
                    "$ref": "#/definitions/Money"
                },
                "NumberOfDependentChildrenAtRetirement": {
                    "format": "int32",
                    "type": "integer"
                },
                "MaximumDeductibleAnnualContributionAmount": {
                    "$ref": "#/definitions/Money"
                },
                "TotalDeductibleAnnualContributionAmount": {
                    "$ref": "#/definitions/Money"
                },
                "MaximumDeductibleAnnualContributionAmountOfSpouse": {
                    "$ref": "#/definitions/Money"
                },
                "TotalDeductibleAnnualContributionAmountOfSpouse": {
                    "$ref": "#/definitions/Money"
                },
                "SplitCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GoalRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "GoalType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "Portfolio": {
                    "$ref": "#/definitions/PortfolioInfosRM"
                },
                "GlobalAssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "ExpectedValue": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementIncomeYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "CustomLifeStylesCategoryAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomLifeStylesCategoryAmountRM"
                    }
                },
                "LifeStyle": {
                    "$ref": "#/definitions/LifeStyleRM"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "TotalAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearStart": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "UserOptions": {
                    "type": "string"
                },
                "UseDefaultPortfolio": {
                    "type": "boolean"
                },
                "GoalStatus": {
                    "enum": [
                        "OffTrack",
                        "MovingAtPace",
                        "Exceeding",
                        "Completed",
                        "Pending"
                    ],
                    "type": "string"
                },
                "IdealAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TaxRebate": {
                    "$ref": "#/definitions/Money"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                },
                "IsReadOnly": {
                    "type": "boolean"
                }
            }
        },
        "CustomLifeStylesCategoryAmountRM": {
            "type": "object",
            "properties": {
                "Category": {
                    "enum": [
                        "BILLSUTILITIES",
                        "CASH",
                        "ENTERTAINMENT",
                        "HEALTH",
                        "HOUSEHOLD",
                        "RENT",
                        "GROCERIES",
                        "SHOPPING",
                        "TAXES",
                        "TRAVEL",
                        "INCOME",
                        "OTHER",
                        "CREDITCARDLOAN",
                        "TRANSFER",
                        "INSURANCE",
                        "PERSONALCARE",
                        "CONTRIBUTION",
                        "INVESTMENT",
                        "BENEFICIARY",
                        "EDUCATION",
                        "ACTIVITIES",
                        "DAILY_LIFE",
                        "TRANSPORTATION",
                        "KIDS"
                    ],
                    "type": "string"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "BudgetGoalRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/TransactionCategoryRM"
                },
                "GoalAmount": {
                    "$ref": "#/definitions/Money"
                },
                "PeopleLikeYouExpense": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "TransactionCategoryRM": {
            "type": "object",
            "properties": {
                "AIPCategoryId": {
                    "type": "string"
                },
                "CategoryName": {
                    "type": "string"
                }
            }
        },
        "SaveBudgetGoalModel": {
            "type": "object",
            "properties": {
                "id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "catName": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                }
            }
        },
        "SaveBudgetGoalRM": {
            "type": "object",
            "properties": {
                "CategoryName": {
                    "type": "string"
                },
                "GoalAmount": {
                    "$ref": "#/definitions/MoneyRM"
                }
            }
        },
        "MoneyRM": {
            "type": "object",
            "properties": {
                "Amount": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "Currency": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "enum": [
                        "NONE",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTC",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EEK",
                        "EGP",
                        "ERN",
                        "ETB",
                        "ETH",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHC",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTC",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RMB",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRL",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XBT",
                        "XCD",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZWD",
                        "CLF",
                        "XAG",
                        "XAU",
                        "XDR",
                        "ZMK",
                        "ZMW",
                        "ZWL",
                        "VES"
                    ],
                    "type": "string"
                }
            }
        },
        "ThumbnailBotModel": {
            "type": "object",
            "properties": {
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Value": {
                    "format": "double",
                    "type": "number"
                },
                "IconClass": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "type": "integer"
                },
                "Intent": {
                    "type": "string"
                }
            }
        },
        "SpendingCategoryModel": {
            "type": "object",
            "properties": {
                "CategoryValue": {
                    "$ref": "#/definitions/Money"
                },
                "CategoryName": {
                    "type": "string"
                },
                "SpendingValueForPeriod": {
                    "$ref": "#/definitions/Money"
                },
                "EstimateValueSpending": {
                    "$ref": "#/definitions/Money"
                },
                "AIPCategoryId": {
                    "type": "string"
                }
            }
        },
        "ExpensesIncome": {
            "required": [
                "Country_Id",
                "AIPCategoryId"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Country_Id": {
                    "type": "string"
                },
                "AIPCategoryId": {
                    "type": "string"
                },
                "Value": {
                    "$ref": "#/definitions/Money"
                },
                "WeekGrossIncome": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "ReducedFeesInfo": {
            "type": "object",
            "properties": {
                "HasAccountsWithFees": {
                    "type": "boolean"
                },
                "YearlyActualFeesAmount": {
                    "$ref": "#/definitions/Money"
                },
                "YearlyAverageBasePointFees": {
                    "format": "double",
                    "type": "number"
                },
                "YearlyPotentialFeesGain": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "DataDrivenGoalPayload": {
            "type": "object",
            "properties": {
                "Location": {
                    "type": "string"
                },
                "EducationType": {
                    "type": "string"
                },
                "NumberOfYear": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "TuitionFee": {
                    "$ref": "#/definitions/Money"
                },
                "LivingCost": {
                    "$ref": "#/definitions/Money"
                },
                "NumberOfMonth": {
                    "format": "int32",
                    "maximum": 1320,
                    "minimum": 0,
                    "type": "integer"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "DownPaymentPercentage": {
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                },
                "HousingDurationPlan": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "HousingLocation": {
                    "type": "string"
                },
                "AverageCost": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "DataDrivenGoalRefData": {
            "type": "object",
            "properties": {
                "Locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalRefDataResource"
                    }
                },
                "EducationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalRefDataResource"
                    }
                },
                "EducationLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EducationLocation"
                    }
                },
                "NumberOfMonth": {
                    "format": "int32",
                    "type": "integer"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "HousingLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HousingLocation"
                    }
                },
                "DownPaymentPercentage": {
                    "$ref": "#/definitions/GoalRefDataRange"
                },
                "HousingDurationPlan": {
                    "$ref": "#/definitions/GoalRefDataRange"
                }
            }
        },
        "GoalRefDataResource": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                }
            }
        },
        "EducationLocation": {
            "type": "object",
            "properties": {
                "EducationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EducationType"
                    }
                },
                "NumberOfYear": {
                    "format": "int32",
                    "type": "integer"
                },
                "Key": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                }
            }
        },
        "HousingLocation": {
            "type": "object",
            "properties": {
                "AverageCost": {
                    "$ref": "#/definitions/Money"
                },
                "Key": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                }
            }
        },
        "GoalRefDataRange": {
            "type": "object",
            "properties": {
                "Default": {
                    "format": "int32",
                    "type": "integer"
                },
                "Minimum": {
                    "format": "int32",
                    "type": "integer"
                },
                "Maximum": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "EducationType": {
            "type": "object",
            "properties": {
                "TuitionFee": {
                    "$ref": "#/definitions/Money"
                },
                "LivingCost": {
                    "$ref": "#/definitions/Money"
                },
                "AnnualCost": {
                    "$ref": "#/definitions/Money",
                    "readOnly": true
                },
                "Key": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                }
            }
        },
        "GoalAchievementInfoModel": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "LumpSumRate": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "RetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "PorfolioNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "TopUp": {
                    "$ref": "#/definitions/Money"
                },
                "AskToSaveGoal": {
                    "type": "boolean"
                },
                "RiskScore": {
                    "format": "int32",
                    "type": "integer"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                }
            }
        },
        "GoalAchievementInfoRM": {
            "type": "object",
            "properties": {
                "InitialGoal": {
                    "$ref": "#/definitions/GoalRM"
                },
                "EstimatedGoal": {
                    "$ref": "#/definitions/GoalRM"
                },
                "GoalTrackInitialPercentage": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "GoalTrackPercentage": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "GraphicGoalRM": {
            "type": "object",
            "properties": {
                "InitialSavings": {
                    "$ref": "#/definitions/Money"
                },
                "VV": {
                    "$ref": "#/definitions/Money"
                },
                "YY": {
                    "format": "int32",
                    "type": "integer"
                },
                "WW": {
                    "$ref": "#/definitions/Money"
                },
                "TrackedAmount": {
                    "$ref": "#/definitions/Money"
                },
                "EndValue": {
                    "$ref": "#/definitions/Money"
                },
                "PctGoal": {
                    "format": "double",
                    "type": "number"
                },
                "PctExpected": {
                    "format": "double",
                    "type": "number"
                },
                "Pct": {
                    "format": "double",
                    "type": "number"
                },
                "RetirementCapitalValue": {
                    "format": "double",
                    "type": "number"
                },
                "IsMonthlyDeposit": {
                    "type": "boolean"
                },
                "TargetDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DurationTrackedVsExpected": {
                    "format": "double",
                    "type": "number"
                },
                "RemainingDuration": {
                    "format": "double",
                    "type": "number"
                },
                "InitialDuration": {
                    "format": "double",
                    "type": "number"
                },
                "SavingPlanLabel": {
                    "type": "string"
                },
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "GoalType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "Portfolio": {
                    "$ref": "#/definitions/PortfolioInfosRM"
                },
                "GlobalAssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "ExpectedValue": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementIncomeYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "CustomLifeStylesCategoryAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomLifeStylesCategoryAmountRM"
                    }
                },
                "LifeStyle": {
                    "$ref": "#/definitions/LifeStyleRM"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "TotalAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearStart": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "UserOptions": {
                    "type": "string"
                },
                "UseDefaultPortfolio": {
                    "type": "boolean"
                },
                "GoalStatus": {
                    "enum": [
                        "OffTrack",
                        "MovingAtPace",
                        "Exceeding",
                        "Completed",
                        "Pending"
                    ],
                    "type": "string"
                },
                "IdealAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TaxRebate": {
                    "$ref": "#/definitions/Money"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                },
                "IsReadOnly": {
                    "type": "boolean"
                }
            }
        },
        "SaveGoalModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "GoalType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "VV": {
                    "$ref": "#/definitions/Money"
                },
                "YY": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "WW": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "RetirementIncomeYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePensionAmount": {
                    "$ref": "#/definitions/Money"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "HowManyYearStart": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Duration": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "CustomLifeStylesCategoryAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomLifeStylesCategoryAmountRM"
                    }
                },
                "LifeStyle": {
                    "$ref": "#/definitions/LifeStyleRM"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "UseDefaultPortfolio": {
                    "type": "boolean"
                },
                "DataDrivenGoalPayload": {
                    "$ref": "#/definitions/DataDrivenGoalPayload"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                },
                "UserOptions": {
                    "type": "string"
                },
                "ExcludedAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TopGoalsModel": {
            "type": "object",
            "properties": {
                "TopSavingsGoals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GraphicGoalRM"
                    }
                },
                "TopSpendingGoal": {
                    "$ref": "#/definitions/BudgetGoalRM"
                },
                "TopSpendingGoalSpendRate": {
                    "format": "double",
                    "type": "number"
                },
                "TopSpendingGoalSpentThisMonth": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "Tuple[BudgetGoalRM,Double,Double]": {
            "type": "object",
            "properties": {
                "Item1": {
                    "$ref": "#/definitions/BudgetGoalRM",
                    "readOnly": true
                },
                "Item2": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "Item3": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "GoalTypesRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "Category": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "IsDisabled": {
                    "type": "boolean"
                },
                "Intent": {
                    "type": "string"
                },
                "Order": {
                    "format": "int32",
                    "type": "integer"
                },
                "FeatureType": {
                    "type": "string"
                }
            }
        },
        "SuggestedGoalModel": {
            "type": "object",
            "properties": {
                "Age": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Salary": {
                    "$ref": "#/definitions/Money"
                },
                "IgnoreBudgetGoal": {
                    "type": "boolean"
                }
            }
        },
        "AccountGoalMappingModel": {
            "type": "object",
            "properties": {
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Value": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                }
            }
        },
        "FinancialAccountWithGoalsRM": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/definitions/FinancialAccountRM"
                },
                "MappedGoals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalRM"
                    }
                }
            }
        },
        "GoalBalanceRM": {
            "type": "object",
            "properties": {
                "Goal": {
                    "$ref": "#/definitions/ShortGoalRM"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "ShortGoalRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                }
            }
        },
        "SavingPlanModel": {
            "required": [
                "Cost",
                "LumpSum"
            ],
            "type": "object",
            "properties": {
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "Category": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "AccountId": {
                    "type": "string"
                }
            }
        },
        "SavingPlanList": {
            "type": "object",
            "properties": {
                "SavingPlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SavingPlan"
                    }
                },
                "CustomGoalRecommended": {
                    "type": "boolean"
                },
                "CustomGoalRecommendedReason": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                }
            }
        },
        "SavingPlan": {
            "type": "object",
            "properties": {
                "Label": {
                    "type": "string"
                },
                "MonthlyContributionSalaryRate": {
                    "format": "double",
                    "type": "number"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "type": "number"
                },
                "Categories": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "CustomGoalRecommended": {
                    "type": "boolean"
                },
                "AccountId": {
                    "type": "string"
                }
            }
        },
        "RefreshGoalsRM": {
            "type": "object",
            "properties": {
                "EnterpriseName": {
                    "type": "string"
                },
                "RefreshDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeRangeInDaysInPast": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProfileIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ForceGoalsRefreshData": {
                    "type": "boolean"
                },
                "MaxProfilesToRefreshCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchTasksSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RefreshGoalsInfoRM": {
            "type": "object",
            "properties": {
                "ErrorMessage": {
                    "type": "string"
                },
                "BeginRefreshDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndRefreshDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "GoalsToRefreshCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "GoalsRefreshedCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "GoalsNotRefreshedCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeTakenToRefreshGoalsInMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "TimeTakenToCountGoalsInMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "BatchTasksSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UpdateGoalStatusesRM": {
            "required": [
                "GoalId"
            ],
            "type": "object",
            "properties": {
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                }
            }
        },
        "RetirementGoalProjectionRM": {
            "type": "object",
            "properties": {
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "TotalAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TotalCurrentCapital": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "UpdatedRetirementGoalModel": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "AdditionalAmount": {
                    "$ref": "#/definitions/Money"
                },
                "RevisedEmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "GoalTrackStatusRM": {
            "type": "object",
            "properties": {
                "GoalTrackStatusDetail": {
                    "$ref": "#/definitions/GoalTrackStatusDetailRM"
                },
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "GoalType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "Portfolio": {
                    "$ref": "#/definitions/PortfolioInfosRM"
                },
                "GlobalAssetAllocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetAllocationItem"
                    }
                },
                "EmployeeMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "ExpectedValue": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementIncomeYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "CustomLifeStylesCategoryAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomLifeStylesCategoryAmountRM"
                    }
                },
                "LifeStyle": {
                    "$ref": "#/definitions/LifeStyleRM"
                },
                "Cost": {
                    "$ref": "#/definitions/Money"
                },
                "DurationYear": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "TotalAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "Expenses": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearStart": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "UserOptions": {
                    "type": "string"
                },
                "UseDefaultPortfolio": {
                    "type": "boolean"
                },
                "GoalStatus": {
                    "enum": [
                        "OffTrack",
                        "MovingAtPace",
                        "Exceeding",
                        "Completed",
                        "Pending"
                    ],
                    "type": "string"
                },
                "IdealAccumulatedCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TaxRebate": {
                    "$ref": "#/definitions/Money"
                },
                "GoalDefinitionStatus": {
                    "enum": [
                        "Created",
                        "CheckProfile",
                        "CheckIncome",
                        "EstimatePension",
                        "SimulationCompleted"
                    ],
                    "type": "string"
                },
                "GoalLinkedAccountStatus": {
                    "enum": [
                        "None",
                        "InProgress",
                        "Available",
                        "Applied"
                    ],
                    "type": "string"
                },
                "IsReadOnly": {
                    "type": "boolean"
                }
            }
        },
        "GoalTrackStatusDetailRM": {
            "type": "object",
            "properties": {
                "GoalTrackAdviceOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ExtendedRetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "IncreaseInMonthlyContribution": {
                    "$ref": "#/definitions/Money"
                },
                "ExtraMonthlyIncome": {
                    "$ref": "#/definitions/Money"
                },
                "UserAdvice": {
                    "type": "string"
                },
                "ExtraCapital": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "UserStatePensionRM": {
            "type": "object",
            "properties": {
                "Profile_Id": {
                    "type": "string"
                },
                "MonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "HowManyYearWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "MaxStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "FromAgeInMonths": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ConnectionRequestInput": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PartyType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "SkillId": {
                    "type": "string"
                },
                "FromId": {
                    "type": "string"
                },
                "FromDisplayName": {
                    "type": "string"
                },
                "ConversationId": {
                    "type": "string"
                },
                "ActivityId": {
                    "type": "string"
                },
                "ChannelId": {
                    "type": "string"
                },
                "ServiceUrl": {
                    "type": "string"
                },
                "RecepientId": {
                    "type": "string"
                }
            }
        },
        "BotConnectionRequest": {
            "type": "object",
            "properties": {
                "Valid": {
                    "type": "boolean"
                },
                "Connected": {
                    "type": "boolean"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PartyType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "FromId": {
                    "type": "string"
                },
                "FromDisplayName": {
                    "type": "string"
                },
                "ConversationId": {
                    "type": "string"
                },
                "ActivityId": {
                    "type": "string"
                },
                "ChannelId": {
                    "type": "string"
                },
                "ServiceUrl": {
                    "type": "string"
                },
                "RecepientId": {
                    "type": "string"
                },
                "ProfileId": {
                    "type": "string"
                },
                "Profile": {
                    "$ref": "#/definitions/Profile"
                },
                "SkillId": {
                    "type": "string"
                },
                "Skill": {
                    "$ref": "#/definitions/Skill"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Skill": {
            "required": [
                "Name",
                "EnterpriseName"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "EnterpriseName": {
                    "type": "string"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "BotConnectionRequestRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Valid": {
                    "type": "boolean"
                },
                "Connected": {
                    "type": "boolean"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PartyType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "FromId": {
                    "type": "string"
                },
                "FromDisplayName": {
                    "type": "string"
                },
                "ConversationId": {
                    "type": "string"
                },
                "ActivityId": {
                    "type": "string"
                },
                "ChannelId": {
                    "type": "string"
                },
                "ServiceUrl": {
                    "type": "string"
                },
                "RecepientId": {
                    "type": "string"
                },
                "ProfileId": {
                    "type": "string"
                },
                "Profile": {
                    "$ref": "#/definitions/ProfileRM"
                },
                "SkillId": {
                    "type": "string"
                },
                "Skill": {
                    "$ref": "#/definitions/Skill"
                }
            }
        },
        "ProfileRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "ObjectId": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MaidenName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PersonalEmail": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "PhoneNumberType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "AlternatePhoneNumber": {
                    "type": "string"
                },
                "AlternatePhoneNumberType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "AlreadyConnect": {
                    "type": "boolean"
                },
                "AvaIntroduced": {
                    "type": "boolean"
                },
                "Gender": {
                    "format": "int32",
                    "type": "integer"
                },
                "CountryOfBirth": {
                    "type": "string"
                },
                "Nationality": {
                    "type": "string"
                },
                "MaritalStatus": {
                    "enum": [
                        "Unknown",
                        "Married",
                        "CivilPartnership",
                        "Divorced",
                        "Separated",
                        "Widowed",
                        "Single",
                        "Partner",
                        "LegallySeparated",
                        "SameSexMarriage",
                        "SameSexRelationship",
                        "CommonLaw"
                    ],
                    "type": "string"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Age": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Address3": {
                    "type": "string"
                },
                "Address4": {
                    "type": "string"
                },
                "Address5": {
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "ResidenceCity": {
                    "type": "string"
                },
                "ResidenceCounty": {
                    "type": "string"
                },
                "County": {
                    "type": "string"
                },
                "AlternativeIdentifier2": {
                    "type": "string"
                },
                "Login": {
                    "type": "string"
                },
                "PreferredLanguage": {
                    "$ref": "#/definitions/Language"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                },
                "TaxBracket": {
                    "$ref": "#/definitions/Money"
                },
                "BudgetGoalScore": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "AlternativeIdentifier": {
                    "type": "string"
                },
                "IsRetired": {
                    "type": "boolean"
                },
                "RetirementDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "IsEligibleForRetirement": {
                    "type": "boolean"
                },
                "ProfileEnterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileEnterpriseRM"
                    }
                },
                "ProfileIncome": {
                    "$ref": "#/definitions/ProfileIncome"
                },
                "LastLoginDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastLoginDateUTC": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastTimezoneOffset": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "HasSMSSubscribed": {
                    "type": "boolean"
                },
                "HasKnowledgeCenterAccess": {
                    "type": "boolean"
                },
                "HasAIPAccess": {
                    "type": "boolean"
                },
                "HasEmailNudgesSubscribed": {
                    "type": "boolean"
                },
                "Role": {
                    "enum": [
                        "User",
                        "Admin",
                        "Support",
                        "IFA",
                        "AbakaAdmin",
                        "AbakaSupportAgent",
                        "Analyst",
                        "AbakaAnalyst",
                        "AbakaTest",
                        "DocumentManager",
                        "AbakaTestReport",
                        "AbakaBot",
                        "Developer",
                        "DataScientist",
                        "AbakaFunction",
                        "Enterprise",
                        "IFAManager",
                        "Test",
                        "AbakaNode",
                        "BO",
                        "ContentManager",
                        "AbakaContentManager",
                        "AbakaMarketing",
                        "Marketing",
                        "SupportSupervisor",
                        "SupportPrivileged",
                        "SupportAdvanced",
                        "SupportBasic",
                        "FAQCreator",
                        "FAQCopyWriter",
                        "PensionTracingBase",
                        "PensionTracingAdvanced",
                        "PensionTracingAbaka"
                    ],
                    "type": "string"
                },
                "Configuration": {
                    "$ref": "#/definitions/EnterpriseSelectorConfigurationRM"
                },
                "EnterpriseUri": {
                    "type": "string"
                },
                "ProfileExtended": {
                    "type": "object"
                },
                "PersonaeList": {
                    "type": "string"
                },
                "NumberChildren": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "FinancialConsultant": {
                    "$ref": "#/definitions/ProfileFinancialConsultant"
                },
                "IsProfileEditionDisabled": {
                    "type": "boolean"
                },
                "ResidenceCountry": {
                    "$ref": "#/definitions/ShortCountryRM"
                },
                "ImpersonatingProfileId": {
                    "type": "string"
                },
                "IsLocked": {
                    "type": "boolean"
                },
                "MemberStatus": {
                    "enum": [
                        "ACTIVE",
                        "DEFERRED",
                        "RETIRED",
                        "DELETED"
                    ],
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "IsDeferred": {
                    "type": "boolean"
                },
                "CanUpdateIncome": {
                    "type": "boolean"
                },
                "CanUpdateContributions": {
                    "type": "boolean"
                },
                "CanEditMemberStatus": {
                    "type": "boolean"
                }
            }
        },
        "ProfileFinancialConsultant": {
            "type": "object",
            "properties": {
                "FinancialConsultantCode": {
                    "type": "string"
                },
                "Remarks": {
                    "type": "string"
                },
                "ManuallyUpdated": {
                    "type": "boolean"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "BotHandoffSession": {
            "required": [
                "UserSessionId"
            ],
            "type": "object",
            "properties": {
                "UserSessionId": {
                    "type": "string"
                },
                "UserSession": {
                    "$ref": "#/definitions/BotConnectionRequest"
                },
                "AgentSessionId": {
                    "type": "string"
                },
                "AgentSession": {
                    "$ref": "#/definitions/BotConnectionRequest"
                },
                "Summary": {
                    "type": "string"
                },
                "IsClosed": {
                    "type": "boolean"
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "HandoffSessionMessage": {
            "type": "object",
            "properties": {
                "HandoffSessionId": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                }
            }
        },
        "KcPostsPublisherRM": {
            "type": "object",
            "properties": {
                "Publisher": {
                    "$ref": "#/definitions/ContentPublisher"
                },
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcPostRM"
                    }
                },
                "TotalPosts": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalPages": {
                    "format": "int32",
                    "type": "integer"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcCategory"
                    }
                }
            }
        },
        "ContentPublisher": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "KcSiteName": {
                    "type": "string"
                },
                "CultureCode": {
                    "type": "string"
                }
            }
        },
        "KcPostRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "IsTopStory": {
                    "type": "boolean"
                },
                "PostTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcTag"
                    }
                },
                "PostCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcCategory"
                    }
                },
                "Date": {
                    "format": "date-time",
                    "type": "string"
                },
                "Excerpt": {
                    "$ref": "#/definitions/KcContent"
                },
                "ContentPublisher": {
                    "type": "string"
                },
                "PublisherDisplayName": {
                    "type": "string"
                },
                "ContentPublisherImage": {
                    "type": "string"
                },
                "Title": {
                    "$ref": "#/definitions/KcTitle"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "LinkUrl": {
                    "type": "string"
                }
            }
        },
        "KcCategory": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "KcTag": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "KcContent": {
            "type": "object",
            "properties": {
                "Rendered": {
                    "type": "string"
                }
            }
        },
        "KcTitle": {
            "type": "object",
            "properties": {
                "Rendered": {
                    "type": "string"
                }
            }
        },
        "KcPostsPublisher": {
            "type": "object",
            "properties": {
                "Publisher": {
                    "$ref": "#/definitions/ContentPublisher"
                },
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcPost"
                    }
                },
                "TotalPosts": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalPages": {
                    "format": "int32",
                    "type": "integer"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcCategory"
                    }
                }
            }
        },
        "KcPost": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "IsTopStory": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PostTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcTag"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PostCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcCategory"
                    }
                },
                "Content": {
                    "$ref": "#/definitions/KcContent"
                },
                "Excerpt": {
                    "$ref": "#/definitions/KcContent"
                },
                "date_gmt": {
                    "format": "date-time",
                    "type": "string"
                },
                "ContentPublisher": {
                    "type": "string"
                },
                "Title": {
                    "$ref": "#/definitions/KcTitle"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "LinkUrl": {
                    "type": "string"
                },
                "PostStatus": {
                    "type": "string"
                },
                "PostActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KcAction"
                    }
                },
                "PublisherDisplayName": {
                    "type": "string"
                },
                "ContentPublisherImage": {
                    "type": "string"
                }
            }
        },
        "KcAction": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                },
                "EnterpriseValue": {
                    "type": "string"
                }
            }
        },
        "NbaModel": {
            "type": "object",
            "properties": {
                "numberOfResult": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Profile": {
                    "$ref": "#/definitions/NbaProfile"
                },
                "Goal": {
                    "$ref": "#/definitions/NbaGoal"
                },
                "InvestmentInfos": {
                    "$ref": "#/definitions/NbaInvestmentInfos"
                }
            }
        },
        "NbaProfile": {
            "type": "object",
            "properties": {
                "CustomerId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Salary": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Occupation": {
                    "type": "string"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "MarriageIndicator": {
                    "enum": [
                        "Unknown",
                        "Married",
                        "CivilPartnership",
                        "Divorced",
                        "Separated",
                        "Widowed",
                        "Single",
                        "Partner",
                        "LegallySeparated",
                        "SameSexMarriage",
                        "SameSexRelationship",
                        "CommonLaw"
                    ],
                    "type": "string"
                },
                "PostalSector": {
                    "type": "string"
                }
            }
        },
        "NbaGoal": {
            "type": "object",
            "properties": {
                "GoalCategory": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512,
                        1024,
                        2048,
                        4096,
                        8192,
                        16384,
                        32768,
                        65536,
                        131072,
                        262144,
                        524288,
                        1048576,
                        -1
                    ],
                    "type": "integer"
                },
                "AreSavingsAvailable": {
                    "type": "boolean"
                },
                "DurationYears": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Amount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "NbaInvestmentInfos": {
            "type": "object",
            "properties": {
                "InvestmentStrategy": {
                    "format": "int32",
                    "maximum": 10,
                    "minimum": 0,
                    "type": "integer"
                },
                "IsCapitalSecured": {
                    "type": "boolean"
                },
                "AccountTypeName": {
                    "type": "string"
                },
                "InvestmentClassifications": {
                    "type": "string"
                },
                "ReerContributionsYearToDate": {
                    "$ref": "#/definitions/Money"
                },
                "CeliContributionsYearToDate": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "PolicyProductCategoryRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "object"
                },
                "IsInterested": {
                    "type": "boolean"
                },
                "IsCallMeBack": {
                    "type": "boolean"
                },
                "PolicyProductCategoryType": {
                    "$ref": "#/definitions/PolicyProductCategoryTypeRM"
                },
                "InvestmentPolicyProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvestmentPolicyProductRM"
                    }
                },
                "RecommendationReasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PolicyProductCategoryTypeRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "ProductCategoryArea": {
                    "enum": [
                        "Other",
                        "Wealth",
                        "Health",
                        "Protection",
                        "Retirement",
                        "Banking"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "object"
                },
                "IsInvestment": {
                    "type": "boolean"
                }
            }
        },
        "InvestmentPolicyProductRM": {
            "type": "object",
            "properties": {
                "Asset": {
                    "$ref": "#/definitions/AssetRM",
                    "readOnly": true
                },
                "AccountType": {
                    "$ref": "#/definitions/ShortAccountTypeRM",
                    "readOnly": true
                },
                "InvestmentPolicyProductId": {
                    "type": "string",
                    "readOnly": true
                },
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PolicyProductCategory": {
                    "$ref": "#/definitions/PolicyProductCategoryRM"
                },
                "Status": {
                    "enum": [
                        "NotDefined",
                        "Pending",
                        "Active",
                        "Withdrawn"
                    ],
                    "type": "string"
                }
            }
        },
        "NotificationRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Content": {
                    "$ref": "#/definitions/NotificationContentTemplateRM"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ArchivedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ClickedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DismissedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SeenDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ScheduledDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SentDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Channel": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ShortUrl": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                }
            }
        },
        "NotificationContentTemplateRM": {
            "type": "object",
            "properties": {
                "NudgeCardName": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "WelcomeMessage": {
                    "type": "string"
                },
                "Body": {
                    "type": "string"
                },
                "Image": {
                    "type": "string"
                },
                "CallToActionLabel": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "LINK",
                        "URGENT",
                        "ADVICE",
                        "INFO",
                        "IMPROVE",
                        "IMPORTANT"
                    ],
                    "type": "string"
                }
            }
        },
        "ProductRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UpgradeOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "ProductFeatureAvailabilityRM": {
            "type": "object",
            "properties": {
                "ProductFeatureType": {
                    "type": "string"
                },
                "IsAvailable": {
                    "type": "boolean"
                },
                "IsOwned": {
                    "type": "boolean"
                },
                "RecurrenceType": {
                    "enum": [
                        "NONE",
                        "ONE_OFF_CHARGE",
                        "RECURRING_MONTHLY",
                        "RECURRING_YEARLY"
                    ],
                    "type": "string"
                },
                "ProductFeature": {
                    "$ref": "#/definitions/ProductFeatureRM"
                }
            }
        },
        "ProductFeatureRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Version": {
                    "format": "int32",
                    "type": "integer"
                },
                "ClientId": {
                    "type": "string"
                },
                "PublicSettings": {
                    "type": "object"
                }
            }
        },
        "PermissionRequestRM": {
            "type": "object",
            "properties": {
                "privilegeUniqueName": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "granted": {
                    "type": "boolean"
                }
            }
        },
        "PolicyOverviewRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "PolicyProduct": {
                    "$ref": "#/definitions/PolicyProductRM"
                },
                "ProfileId": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NotDefined",
                        "Active",
                        "Pending",
                        "InActive"
                    ],
                    "type": "string"
                },
                "ContractIssuedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TotalPremium": {
                    "$ref": "#/definitions/Money"
                },
                "BillingFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "BillingFrequencyName": {
                    "type": "string"
                },
                "BillingChannel": {
                    "enum": [
                        "NotDefined",
                        "DirectDebit",
                        "CashCheck",
                        "CreditCard",
                        "MandatoryRetirement",
                        "SupplementaryRetirement",
                        "GroupBilling",
                        "ElectronicFundTransfer",
                        "MedicalSavingsAccount"
                    ],
                    "type": "string"
                },
                "BillingChannelName": {
                    "type": "string"
                },
                "CustomerId": {
                    "type": "string"
                },
                "NextDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TotalCoverage": {
                    "$ref": "#/definitions/Money"
                },
                "SavingsBalance": {
                    "$ref": "#/definitions/Money"
                },
                "BeneficiariesCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PolicyProductRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PolicyProductCategory": {
                    "$ref": "#/definitions/PolicyProductCategoryRM"
                },
                "Status": {
                    "enum": [
                        "NotDefined",
                        "Pending",
                        "Active",
                        "Withdrawn"
                    ],
                    "type": "string"
                }
            }
        },
        "PolicyRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "PolicyProduct": {
                    "$ref": "#/definitions/PolicyProductRM"
                },
                "ProfileId": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "NotDefined",
                        "Active",
                        "Pending",
                        "InActive"
                    ],
                    "type": "string"
                },
                "ContractIssuedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TotalPremium": {
                    "$ref": "#/definitions/Money"
                },
                "BillingFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                },
                "BillingFrequencyName": {
                    "type": "string"
                },
                "BillingChannel": {
                    "enum": [
                        "NotDefined",
                        "DirectDebit",
                        "CashCheck",
                        "CreditCard",
                        "MandatoryRetirement",
                        "SupplementaryRetirement",
                        "GroupBilling",
                        "ElectronicFundTransfer",
                        "MedicalSavingsAccount"
                    ],
                    "type": "string"
                },
                "BillingChannelName": {
                    "type": "string"
                },
                "CustomerId": {
                    "type": "string"
                },
                "NextDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "FinancialAccount": {
                    "$ref": "#/definitions/ShortFinancialAccountRM"
                },
                "PolicyCoverages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyCoverageRM"
                    }
                }
            }
        },
        "ShortFinancialAccountRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "AccountNumber": {
                    "type": "string"
                },
                "Balance": {
                    "$ref": "#/definitions/Money"
                },
                "EmployerId": {
                    "type": "string"
                }
            }
        },
        "PolicyCoverageRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PolicyCoverageCategory": {
                    "$ref": "#/definitions/PolicyCoverageCategoryRM"
                },
                "Status": {
                    "enum": [
                        "NotDefined",
                        "Active",
                        "Pending",
                        "InActive"
                    ],
                    "type": "string"
                },
                "Order": {
                    "type": "string"
                },
                "Optional": {
                    "type": "boolean"
                },
                "ContractIssuedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Coverage": {
                    "$ref": "#/definitions/Money"
                },
                "PremiumAmount": {
                    "$ref": "#/definitions/Money"
                },
                "AgeAtCommencementDate": {
                    "format": "int32",
                    "type": "integer"
                },
                "Beneficiary": {
                    "$ref": "#/definitions/BeneficiaryOutputRM"
                }
            }
        },
        "PolicyCoverageCategoryRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "object"
                }
            }
        },
        "BeneficiaryOutputRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "type": "string"
                },
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "IsBeneficiaryAdult": {
                    "type": "boolean"
                }
            }
        },
        "PagingModel[PolicyProductRM]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyProductRM"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GuidedPortfoliosRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "GuidedPortfoliosDetails": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CurrentMonthsIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "CurrentPeriodKey": {
                    "type": "string"
                },
                "FactSheetUrl": {
                    "type": "string"
                },
                "FundDatas": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/FundChangeOverTimeData"
                    }
                }
            }
        },
        "FundChangeOverTimeData": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Isin": {
                    "type": "string"
                },
                "OverTimeData": {
                    "type": "object",
                    "additionalProperties": {
                        "format": "double",
                        "type": "number"
                    }
                }
            }
        },
        "EmbedConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "EmbedUrl": {
                    "type": "string"
                },
                "EmbedToken": {
                    "$ref": "#/definitions/EmbedToken"
                }
            }
        },
        "EmbedToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "expiration": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ReportViewModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                }
            }
        },
        "PrivatePensionProviderOverviewRM": {
            "type": "object",
            "properties": {
                "ProviderName": {
                    "type": "string"
                },
                "UsePoints": {
                    "type": "boolean"
                },
                "UseTrimesters": {
                    "type": "boolean"
                },
                "Trimesters": {
                    "format": "int32",
                    "type": "integer"
                },
                "Points": {
                    "format": "double",
                    "type": "number"
                },
                "PointValue": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "RetirementOptionsInput": {
            "type": "object",
            "properties": {
                "TotalPensionBalance": {
                    "$ref": "#/definitions/Money"
                },
                "RetirementAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": -1,
                    "type": "integer"
                },
                "PercentageForOperation": {
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                },
                "PercentageForLumpsum": {
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                },
                "PercentageForDrawdown": {
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                },
                "PercentageForIncome": {
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                },
                "LumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "TargetIncome": {
                    "$ref": "#/definitions/Money"
                },
                "PortfolioNumber": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "ExcludedAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "HowManyYearsWorked": {
                    "format": "double",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "number"
                },
                "FirstMonthlyStatePension": {
                    "$ref": "#/definitions/Money"
                },
                "AnnuityIncome": {
                    "$ref": "#/definitions/Money"
                },
                "ChooseNoInflationAdjustment": {
                    "type": "boolean"
                },
                "RetirementOptions": {
                    "type": "boolean"
                },
                "Simulation": {
                    "type": "boolean"
                }
            }
        },
        "TargetRetirementIncomeFromExpensesModel": {
            "type": "object",
            "properties": {
                "RetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "PersonalExpenses": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "AnnuityInfos": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "MonthlyGuaranteedIncomes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PeriodicIncomeFromAge"
                    }
                },
                "LifeExpectancy": {
                    "format": "double",
                    "type": "number"
                },
                "AmountForIncome": {
                    "$ref": "#/definitions/Money"
                },
                "InitialCapital": {
                    "$ref": "#/definitions/Money"
                },
                "RemainingBalance": {
                    "$ref": "#/definitions/Money"
                },
                "CrystallisedBalance": {
                    "$ref": "#/definitions/Money"
                },
                "TotalWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TaxedWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "WithdrawalTaxes": {
                    "$ref": "#/definitions/Money"
                },
                "StatePensionIncome": {
                    "$ref": "#/definitions/Money"
                },
                "DBPensionsIncome": {
                    "$ref": "#/definitions/Money"
                },
                "GraphicIncomes": {
                    "type": "string"
                }
            }
        },
        "PeriodicIncomeFromAge": {
            "type": "object",
            "properties": {
                "FromAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "Income": {
                    "$ref": "#/definitions/Money"
                },
                "IncomeFrequency": {
                    "enum": [
                        "NotDefined",
                        "Monthly",
                        "Quarterly",
                        "HalfAnnual",
                        "Annual",
                        "SinglePayment",
                        "Weekly",
                        "Fortnightly",
                        "FourWeekly"
                    ],
                    "type": "string"
                }
            }
        },
        "PrivateIncomeSimulationInputRM": {
            "required": [
                "InitialValue"
            ],
            "type": "object",
            "properties": {
                "InitialValue": {
                    "$ref": "#/definitions/Money"
                },
                "IsCapitalValue": {
                    "type": "boolean"
                },
                "StartAge": {
                    "format": "int32",
                    "maximum": 110,
                    "minimum": 0,
                    "type": "integer"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "PaymentPeriods": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "enum": [
                            1,
                            4,
                            12
                        ],
                        "type": "integer"
                    }
                },
                "Arrears": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "TechnicalInterestRate": {
                    "format": "double",
                    "minimum": 0,
                    "type": "number"
                },
                "ReversibilityPartner": {
                    "$ref": "#/definitions/PrivateIncomePartner"
                },
                "AreAnnuitiesGuaranteed": {
                    "type": "boolean"
                },
                "GuaranteedAnnuitiesDuration": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "PrivateIncomePartner": {
            "type": "object",
            "properties": {
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReversibilityRate": {
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                }
            }
        },
        "PrivateIncomeSimulationOutputRM": {
            "type": "object",
            "properties": {
                "PaymentPeriod": {
                    "format": "int32",
                    "enum": [
                        1,
                        4,
                        12
                    ],
                    "type": "integer"
                },
                "Amount": {
                    "$ref": "#/definitions/TaxableAmount"
                }
            }
        },
        "TaxableAmount": {
            "type": "object",
            "properties": {
                "GrossAmount": {
                    "$ref": "#/definitions/Money"
                },
                "NetAmount": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "RetirementOptions": {
            "type": "object",
            "properties": {
                "drawdownInfo": {
                    "$ref": "#/definitions/DrawdownInfos"
                },
                "annuityInfos": {
                    "$ref": "#/definitions/AnnuityInfos"
                },
                "withdrawCash": {
                    "$ref": "#/definitions/WithdrawCashInfos"
                },
                "incomeInfos": {
                    "$ref": "#/definitions/AdditionalIncomeInfos"
                }
            }
        },
        "WithdrawCashInfos": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "MinDrawdownAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "MaxDrawdownAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountsInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountWithdrawCashInfos"
                    }
                }
            }
        },
        "AdditionalIncomeInfos": {
            "type": "object",
            "properties": {
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "IncomeType": {
                    "type": "string"
                },
                "FirstIncome": {
                    "$ref": "#/definitions/Money"
                },
                "GraphicIncomes": {
                    "type": "string"
                }
            }
        },
        "AccountWithdrawCashInfos": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "AccountName": {
                    "type": "string"
                },
                "ProviderName": {
                    "type": "string"
                },
                "InitialCapital": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TaxedWithdrawal": {
                    "$ref": "#/definitions/Money"
                },
                "TotalTax": {
                    "$ref": "#/definitions/Money"
                },
                "WithdrawalFee": {
                    "$ref": "#/definitions/Money"
                },
                "NetCashBalanceWithdraw": {
                    "$ref": "#/definitions/Money"
                },
                "RemainingBalance": {
                    "$ref": "#/definitions/Money"
                },
                "DrawdownAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "GraphicDatas": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                }
            }
        },
        "ValueTuple[Int32,Int32,Int32]": {
            "type": "object",
            "properties": {
                "Item1": {
                    "format": "int32",
                    "type": "integer"
                },
                "Item2": {
                    "format": "int32",
                    "type": "integer"
                },
                "Item3": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DrawdownConfirmation": {
            "type": "object",
            "properties": {
                "optionsInput": {
                    "$ref": "#/definitions/RetirementOptionsInput"
                },
                "drawdownInfos": {
                    "$ref": "#/definitions/DrawdownInfos"
                },
                "paymentInfos": {
                    "$ref": "#/definitions/PaymentInfos"
                },
                "portfolio": {
                    "$ref": "#/definitions/PortfolioCompleteInfosRM"
                },
                "redirectURL": {
                    "type": "string"
                }
            }
        },
        "DrawdownPurchaseRM": {
            "type": "object",
            "properties": {
                "TransactionRef": {
                    "type": "string"
                },
                "signatureUrl": {
                    "type": "string"
                }
            }
        },
        "AnnuityQuotesFormRequest": {
            "type": "object",
            "properties": {
                "jsonData": {
                    "type": "string"
                }
            }
        },
        "AnnuityQuoteConfirmation": {
            "type": "object",
            "properties": {
                "quoteReference": {
                    "type": "string"
                },
                "optionsInput": {
                    "$ref": "#/definitions/RetirementOptionsInput"
                },
                "annuityCaseId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "redirectUrlAfterSign": {
                    "type": "string"
                }
            }
        },
        "AnnuityQuoteConfirmationResult": {
            "type": "object",
            "properties": {
                "annuityCaseId": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "AnnuityBlock": {
            "type": "object",
            "properties": {
                "BlockId": {
                    "format": "int32",
                    "enum": [
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.10",
                        "1.11",
                        "1.12",
                        "1.13",
                        "1.14",
                        "1.15",
                        "1.16",
                        "1.17",
                        "1.18",
                        "1.19",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.10",
                        "2.11",
                        "2.12",
                        "2.13",
                        "2.14",
                        "2.15",
                        "2.16",
                        "2.17",
                        "2.18",
                        "2.19",
                        "3.1"
                    ],
                    "type": "integer"
                },
                "BlockPayload": {
                    "type": "object"
                },
                "AnnuityCaseId": {
                    "type": "string"
                },
                "AnnuityBlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockStatus"
                    }
                },
                "AnnuityCaseStatus": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                }
            }
        },
        "BlockStatus": {
            "type": "object",
            "properties": {
                "blockId": {
                    "format": "int32",
                    "enum": [
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.10",
                        "1.11",
                        "1.12",
                        "1.13",
                        "1.14",
                        "1.15",
                        "1.16",
                        "1.17",
                        "1.18",
                        "1.19",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.10",
                        "2.11",
                        "2.12",
                        "2.13",
                        "2.14",
                        "2.15",
                        "2.16",
                        "2.17",
                        "2.18",
                        "2.19",
                        "3.1"
                    ],
                    "type": "integer"
                },
                "Status": {
                    "enum": [
                        "NotStarted",
                        "filled",
                        "invalid"
                    ],
                    "type": "string"
                },
                "ValidationErrors": {
                    "type": "string"
                }
            }
        },
        "AnnuityBlockCommon": {
            "type": "object",
            "properties": {
                "AnnuityCaseId": {
                    "type": "string"
                },
                "AnnuityBlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockStatus"
                    }
                },
                "AnnuityCaseStatus": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                }
            }
        },
        "AnnuityCaseReferencesData": {
            "type": "object",
            "properties": {
                "References": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/AQReferenceItem"
                    }
                }
            }
        },
        "AQReferenceItem": {
            "type": "object",
            "properties": {
                "Reference": {
                    "type": "string"
                },
                "ErrorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AnnuityQuotesModel": {
            "type": "object",
            "properties": {
                "OperationErrorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Quotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnnuityQuoteModel"
                    }
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AnnuityQuoteModel": {
            "type": "object",
            "properties": {
                "HasMedicalConditions": {
                    "type": "boolean"
                },
                "Conditions": {
                    "type": "string"
                },
                "Information": {
                    "type": "string"
                },
                "IsMock": {
                    "type": "boolean"
                },
                "ProviderName": {
                    "type": "string"
                },
                "QuoteType": {
                    "type": "string"
                },
                "QuoteReference": {
                    "type": "string"
                },
                "ProviderQuoteId": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "Success",
                        "Warning",
                        "Error"
                    ],
                    "type": "string"
                },
                "MonthlyGuaranteedIncome": {
                    "$ref": "#/definitions/Money"
                },
                "FromAge": {
                    "type": "string"
                },
                "HasAnnualIncrease": {
                    "type": "boolean"
                },
                "AnnualIncreaseType": {
                    "type": "string"
                },
                "IncreaseRatio": {
                    "type": "string"
                },
                "PaymentMode": {
                    "type": "string"
                },
                "HasGuarantee": {
                    "type": "boolean"
                },
                "GuaranteeDecsription": {
                    "type": "string"
                },
                "AmountInvested": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeCash": {
                    "$ref": "#/definitions/Money"
                },
                "Commission": {
                    "$ref": "#/definitions/Money"
                },
                "KeyFacts": {
                    "type": "string"
                },
                "HealthAssessment": {
                    "type": "string"
                },
                "Logo": {
                    "type": "string"
                }
            }
        },
        "AnnuityQuoteConfirmed": {
            "type": "object",
            "properties": {
                "AnnuityCaseData": {
                    "$ref": "#/definitions/AnnuityCaseInputData"
                },
                "QuoteDocuments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ProviderDocuments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "AnnuityTransaction": {
                    "$ref": "#/definitions/ProfileTransactionModel"
                }
            }
        },
        "AnnuityCaseInputData": {
            "type": "object",
            "properties": {
                "Client": {
                    "$ref": "#/definitions/AQClientInfo"
                },
                "ClientLifeStyle": {
                    "$ref": "#/definitions/AQLifeStyle"
                },
                "ClientConditions": {
                    "$ref": "#/definitions/AQConditions"
                },
                "ClientDailyLiving": {
                    "$ref": "#/definitions/AQDailyLiving"
                },
                "Dependant": {
                    "$ref": "#/definitions/AQDependantInfo"
                },
                "DependantLifeStyle": {
                    "$ref": "#/definitions/AQLifeStyle"
                },
                "DependantConditions": {
                    "$ref": "#/definitions/AQConditions"
                },
                "DependantDailyLiving": {
                    "$ref": "#/definitions/AQDailyLiving"
                },
                "Quote": {
                    "$ref": "#/definitions/AQQuotesDetails"
                }
            }
        },
        "ProfileTransactionModel": {
            "type": "object",
            "properties": {
                "TransactionPayloadJSON": {
                    "type": "string"
                },
                "TransactionPayloadTransformedJSON": {
                    "type": "string"
                },
                "TransactionPayload": {
                    "$ref": "#/definitions/BaseTransaction",
                    "readOnly": true
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "ReferenceNumber": {
                    "type": "string"
                },
                "ProfileId": {
                    "type": "string"
                },
                "UserProfile": {
                    "$ref": "#/definitions/Profile"
                },
                "TypeOfTransaction": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string"
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "EnterpriseUniqueName": {
                    "type": "string"
                },
                "Enterprise": {
                    "$ref": "#/definitions/Enterprise"
                },
                "CreatedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProcessedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TransactionDetails": {
                    "$ref": "#/definitions/BaseTransaction"
                },
                "StatusCodeChangeReason": {
                    "type": "string"
                }
            }
        },
        "AQClientInfo": {
            "type": "object",
            "properties": {
                "MaritalStatus": {
                    "enum": [
                        "Unknown",
                        "Married",
                        "CivilPartnership",
                        "Divorced",
                        "Separated",
                        "Widowed",
                        "Single",
                        "Partner",
                        "LegallySeparated",
                        "SameSexMarriage",
                        "SameSexRelationship",
                        "CommonLaw"
                    ],
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "Occupation": {
                    "type": "string"
                },
                "PensionFund": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "AQLifeStyle": {
            "type": "object",
            "properties": {
                "HeightFt": {
                    "format": "int32",
                    "type": "integer"
                },
                "HeightIns": {
                    "format": "int32",
                    "type": "integer"
                },
                "WeightSt": {
                    "format": "int32",
                    "type": "integer"
                },
                "WeightLbs": {
                    "format": "int32",
                    "type": "integer"
                },
                "WaistIns": {
                    "format": "int32",
                    "type": "integer"
                },
                "AlcoholUnitsWeekly": {
                    "format": "int32",
                    "type": "integer"
                },
                "SmokerQuestion": {
                    "type": "string"
                },
                "CurrentSmokerStr": {
                    "type": "string"
                },
                "PreviousSmokerStr": {
                    "type": "string"
                },
                "SmokerForLast10YearsStr": {
                    "type": "string"
                },
                "StartedSmokingDate": {
                    "type": "string"
                },
                "StoppedSmokingDate": {
                    "type": "string"
                },
                "AmountSmokedCigarettes": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmountSmokedCigars": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmountSmokedRollingTobacco": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmountSmokedPipeTobacco": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AQConditions": {
            "type": "object",
            "properties": {
                "Cancer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CancerCondition"
                    }
                },
                "Cholesterol": {
                    "$ref": "#/definitions/CholesterolCondition"
                },
                "Diabetes": {
                    "$ref": "#/definitions/DiabetesCondition"
                },
                "Heart": {
                    "$ref": "#/definitions/HeartCondition"
                },
                "Hypertension": {
                    "$ref": "#/definitions/HypertensionCondition"
                },
                "Neurological": {
                    "$ref": "#/definitions/NeurologicalCondition"
                },
                "Other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherCondition"
                    }
                },
                "Respiratory": {
                    "$ref": "#/definitions/RespiratoryCondition"
                },
                "Sclerosis": {
                    "$ref": "#/definitions/SclerosisCondition"
                },
                "Stroke": {
                    "$ref": "#/definitions/StrokeCondition"
                }
            }
        },
        "AQDailyLiving": {
            "type": "object",
            "properties": {
                "Dressing": {
                    "enum": [
                        "Dependent",
                        "NeedsHelp",
                        "Independent"
                    ],
                    "type": "string"
                },
                "Mobility": {
                    "enum": [
                        "Bedridden",
                        "DailyNursingCare",
                        "WheelchairPermanent",
                        "WheelchairNonPermanent",
                        "WalksWithAssistance",
                        "Independent"
                    ],
                    "type": "string"
                },
                "Transferring": {
                    "enum": [
                        "Unable",
                        "MajorHelp",
                        "MinorHelp",
                        "Independent"
                    ],
                    "type": "string"
                },
                "ContinenceBladder": {
                    "enum": [
                        "Incontinent",
                        "OccasionalAccident",
                        "Continent"
                    ],
                    "type": "string"
                },
                "ContinenceBowels": {
                    "enum": [
                        "Incontinent",
                        "OccasionalAccident",
                        "Continent"
                    ],
                    "type": "string"
                },
                "Bathing": {
                    "enum": [
                        "Dependent",
                        "NeedsSomeAssistance",
                        "Independent"
                    ],
                    "type": "string"
                },
                "Feeding": {
                    "enum": [
                        "Unable",
                        "NeedsHelp",
                        "Independent"
                    ],
                    "type": "string"
                },
                "Progression": {
                    "enum": [
                        "Stable",
                        "Deteriorating",
                        "RapidDeterioration"
                    ],
                    "type": "string"
                }
            }
        },
        "AQDependantInfo": {
            "type": "object",
            "properties": {
                "Title": {
                    "type": "string"
                },
                "Forenames": {
                    "type": "string"
                },
                "Surname": {
                    "type": "string"
                },
                "MaritalStatus": {
                    "enum": [
                        "Unknown",
                        "Married",
                        "CivilPartnership",
                        "Divorced",
                        "Separated",
                        "Widowed",
                        "Single",
                        "Partner",
                        "LegallySeparated",
                        "SameSexMarriage",
                        "SameSexRelationship",
                        "CommonLaw"
                    ],
                    "type": "string"
                },
                "Gender": {
                    "enum": [
                        "None",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "DateOfBirth": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PostCode": {
                    "type": "string"
                },
                "Occupation": {
                    "type": "string"
                }
            }
        },
        "AQQuotesDetails": {
            "type": "object",
            "properties": {
                "PaymentFrequency": {
                    "enum": [
                        "Monthly",
                        "Quarterly",
                        "HalfYearly",
                        "Yearly"
                    ],
                    "type": "string"
                },
                "PaymentTiming": {
                    "enum": [
                        "InAdvance",
                        "InArrears"
                    ],
                    "type": "string"
                },
                "TaxFreeCashPercent": {
                    "format": "double",
                    "type": "number"
                },
                "GuaranteeType": {
                    "enum": [
                        "None",
                        "GuaranteePeriod",
                        "ValueProtection"
                    ],
                    "type": "string"
                },
                "GuaranteePeriod": {
                    "type": "string"
                },
                "Overlap": {
                    "type": "boolean"
                },
                "ValueProtection": {
                    "format": "int32",
                    "type": "integer"
                },
                "JointValueProtectionType": {
                    "enum": [
                        "Client",
                        "Dependant"
                    ],
                    "type": "string"
                },
                "Escalation": {
                    "enum": [
                        "Fixed",
                        "RPI",
                        "LPI"
                    ],
                    "type": "string"
                },
                "EscalationValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "JointLife": {
                    "type": "boolean"
                },
                "DependantIncome": {
                    "format": "double",
                    "type": "number"
                },
                "ProportionalPayment": {
                    "type": "boolean"
                },
                "AnySpouse": {
                    "type": "boolean"
                },
                "Advised": {
                    "type": "boolean"
                }
            }
        },
        "CancerCondition": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "DiagnosedDate": {
                    "type": "string"
                },
                "TumourType": {
                    "enum": [
                        "Benign",
                        "PreCancerous",
                        "Malignant"
                    ],
                    "type": "string"
                },
                "TumourNature": {
                    "enum": [
                        "TinyGrowth",
                        "LocalGrowth",
                        "AdjacentLymphNodes",
                        "DistantLymphNodes",
                        "DistantOrgans"
                    ],
                    "type": "string"
                },
                "Recurrence": {
                    "type": "boolean"
                },
                "LastAppointmentDate": {
                    "type": "string"
                },
                "NowDischarged": {
                    "type": "boolean"
                },
                "TumourStagingType": {
                    "enum": [
                        "Unknown",
                        "general_staging_classification",
                        "dukes_classification",
                        "tnm_classification",
                        "mac_classification",
                        "figo_classification",
                        "clark_level",
                        "breslow_thickness",
                        "ann_arbor_classification"
                    ],
                    "type": "string"
                },
                "StageGeneralStage": {
                    "enum": [
                        "Stage0",
                        "Stage1",
                        "Stage2",
                        "Stage3",
                        "Stage4"
                    ],
                    "type": "string"
                },
                "StageGeneralSubStage": {
                    "enum": [
                        "A",
                        "B",
                        "C"
                    ],
                    "type": "string"
                },
                "StageDukes": {
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "type": "string"
                },
                "StageTNMTType": {
                    "enum": [
                        "Ta",
                        "Tis",
                        "T0",
                        "T1",
                        "T2",
                        "T3",
                        "T4",
                        "TX"
                    ],
                    "type": "string"
                },
                "StageTNMTSubType": {
                    "enum": [
                        "a",
                        "b",
                        "c"
                    ],
                    "type": "string"
                },
                "StageTNMNType": {
                    "enum": [
                        "N0",
                        "N1",
                        "N2",
                        "N3",
                        "NX"
                    ],
                    "type": "string"
                },
                "StageTNMNSubType": {
                    "enum": [
                        "a",
                        "b",
                        "c"
                    ],
                    "type": "string"
                },
                "StageTNMMType": {
                    "enum": [
                        "M0",
                        "M1",
                        "MX"
                    ],
                    "type": "string"
                },
                "StageMAC": {
                    "enum": [
                        "A1",
                        "A2",
                        "A3",
                        "B1",
                        "B2",
                        "B3",
                        "C1",
                        "C2",
                        "C3"
                    ],
                    "type": "string"
                },
                "StageFIGO": {
                    "format": "int32",
                    "type": "integer"
                },
                "StageClark": {
                    "format": "int32",
                    "type": "integer"
                },
                "StageBreslow": {
                    "format": "int32",
                    "type": "integer"
                },
                "StageAnnArbor": {
                    "format": "int32",
                    "type": "integer"
                },
                "TumourGrade": {
                    "enum": [
                        "Unknown",
                        "Grade1LowGrade",
                        "Grade2IntermediateGrade",
                        "Grade3HighGrade"
                    ],
                    "type": "string"
                },
                "Surgery": {
                    "type": "boolean"
                },
                "SurgeryType": {
                    "type": "string"
                },
                "SurgeryDate": {
                    "type": "string"
                },
                "Chemotherapy": {
                    "type": "boolean"
                },
                "ChemotherapyStartDate": {
                    "type": "string"
                },
                "ChemotherapyEndDate": {
                    "type": "string"
                },
                "Radiotherapy": {
                    "type": "boolean"
                },
                "RadiotherapyStartDate": {
                    "type": "string"
                },
                "RadiotherapyEndDate": {
                    "type": "string"
                },
                "BoneMarrow": {
                    "type": "boolean"
                },
                "BoneMarrowStartDate": {
                    "type": "string"
                },
                "BoneMarrowEndDate": {
                    "type": "string"
                },
                "HormoneTherapy": {
                    "type": "boolean"
                },
                "HormoneTherapyStartDate": {
                    "type": "string"
                },
                "HormoneTherapyEndDate": {
                    "type": "string"
                },
                "OtherTreatment": {
                    "type": "boolean"
                },
                "OtherTreatmentStartDate": {
                    "type": "string"
                },
                "OtherTreatmentEndDate": {
                    "type": "string"
                },
                "ProstateCurrentPSA": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProstateCurrentPSADate": {
                    "type": "string"
                },
                "ProstatePreTreatmentPSA": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProstatePreTreatmentPSADate": {
                    "type": "string"
                },
                "ProstateGleasonScore": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProstateGleasonScoreDate": {
                    "type": "string"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "CholesterolCondition": {
            "type": "object",
            "properties": {
                "DiagnosedDate": {
                    "type": "string"
                },
                "LatestReadingSystolic": {
                    "format": "double",
                    "type": "number"
                },
                "LatestReadingDiastolic": {
                    "format": "double",
                    "type": "number"
                },
                "LatestReadingDate": {
                    "type": "string"
                },
                "PreviousReadingSystolic": {
                    "format": "double",
                    "type": "number"
                },
                "PreviousReadingDiastolic": {
                    "format": "double",
                    "type": "number"
                },
                "PreviousReadingDate": {
                    "type": "string"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "DiabetesCondition": {
            "type": "object",
            "properties": {
                "DiagnosedDate": {
                    "type": "string"
                },
                "DiabetesType": {
                    "enum": [
                        "Type1",
                        "Type2"
                    ],
                    "type": "string"
                },
                "ControlMethod": {
                    "enum": [
                        "Diet",
                        "NonInsulin",
                        "Insulin"
                    ],
                    "type": "string"
                },
                "MonitorFrequency": {
                    "format": "int32",
                    "type": "integer"
                },
                "MonitorFrequencyTimePeriod": {
                    "enum": [
                        "Day",
                        "Week",
                        "Fortnight",
                        "FourWeeks",
                        "Month",
                        "Quarter",
                        "HalfYear",
                        "Year"
                    ],
                    "type": "string"
                },
                "LastHospitalisedDate": {
                    "type": "string"
                },
                "HbA1cReading1": {
                    "format": "double",
                    "type": "number"
                },
                "HbA1cReading1Units": {
                    "enum": [
                        "DCCT",
                        "IFFCmmolmol"
                    ],
                    "type": "string"
                },
                "HbA1cReading1Date": {
                    "type": "string"
                },
                "HbA1cReading2": {
                    "format": "double",
                    "type": "number"
                },
                "HbA1cReading2Units": {
                    "enum": [
                        "DCCT",
                        "IFFCmmolmol"
                    ],
                    "type": "string"
                },
                "HbA1cReading2Date": {
                    "type": "string"
                },
                "HeartDisease": {
                    "type": "boolean"
                },
                "Retinopathy": {
                    "type": "boolean"
                },
                "Neuropathy": {
                    "type": "boolean"
                },
                "KidneyDisease": {
                    "type": "boolean"
                },
                "PeripheralVascularDisease": {
                    "type": "boolean"
                },
                "Amputation": {
                    "type": "boolean"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "HeartCondition": {
            "type": "object",
            "properties": {
                "Diagnoses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeartDiagnosis"
                    }
                },
                "Surgeries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeartSurgery"
                    }
                },
                "CardiologistUnderCare": {
                    "type": "boolean"
                },
                "CardiologistLastConsultationDate": {
                    "type": "string"
                },
                "NumberOfHospitalAdmissions": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastHospitalAdmissionDate": {
                    "type": "string"
                },
                "FutureTreatmentPlanned": {
                    "type": "boolean"
                },
                "StressTestDate": {
                    "type": "string"
                },
                "SymptomsAtRest": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "BreathlessnessWalking": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "BreathlessnessClimbing": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "ChestPainsMinor": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "ChestPainsSevere": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "SwollenAnkles": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "Dizziness": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "Blackouts": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "HypertensionCondition": {
            "type": "object",
            "properties": {
                "DiagnosedDate": {
                    "type": "string"
                },
                "LatestReadingSystolic": {
                    "format": "int32",
                    "type": "integer"
                },
                "LatestReadingDiastolic": {
                    "format": "int32",
                    "type": "integer"
                },
                "LatestReadingDate": {
                    "type": "string"
                },
                "PreviousReadingSystolic": {
                    "format": "int32",
                    "type": "integer"
                },
                "PreviousReadingDiastolic": {
                    "format": "int32",
                    "type": "integer"
                },
                "PreviousReadingDate": {
                    "type": "string"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "NeurologicalCondition": {
            "type": "object",
            "properties": {
                "Diagnoses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NeurologicalDiagnosis"
                    }
                },
                "NumberOfHospitalAdmissions": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastHospitalAdmissionDate": {
                    "type": "string"
                },
                "MMSEScore": {
                    "format": "int32",
                    "type": "integer"
                },
                "PressureSores": {
                    "type": "boolean"
                },
                "Falls": {
                    "type": "boolean"
                },
                "Tremors": {
                    "type": "boolean"
                },
                "Seizures": {
                    "type": "boolean"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "OtherCondition": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "DiagnosedDate": {
                    "type": "string"
                },
                "LastSufferedSymptomsDate": {
                    "type": "string"
                },
                "LastReceivedTreatmentDate": {
                    "type": "string"
                },
                "NumberOfHospitalAdmissions": {
                    "format": "int32",
                    "type": "integer"
                },
                "TreatmentReceivedLast5Years": {
                    "type": "boolean"
                },
                "TreatmentRenalDialysis": {
                    "type": "boolean"
                },
                "TreatmentSurgery": {
                    "type": "boolean"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "RespiratoryCondition": {
            "type": "object",
            "properties": {
                "Diagnoses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RespiratoryDiagnosis"
                    }
                },
                "NumberOfHospitalAdmissions": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastHospitalAdmissionDate": {
                    "type": "string"
                },
                "LungFunctionImpairment": {
                    "enum": [
                        "Unaffected",
                        "Minimal",
                        "Moderate",
                        "Severe"
                    ],
                    "type": "string"
                },
                "RecurrentChestInfections": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "NeedForHomeOxygen": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "NeedForCPAPBreathingMachine": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "SignsOfCorPulmonale": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "BreathlessnessWalkingFromRoomToRoom": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "BreathlessnessClimbingStairs": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "BreathlessnessWhenLyingFlat": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "OralSteroids": {
                    "enum": [
                        "Never",
                        "SomeOfTheTime",
                        "MostOfTheTime",
                        "Always"
                    ],
                    "type": "string"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "SclerosisCondition": {
            "type": "object",
            "properties": {
                "SubType": {
                    "enum": [
                        "RelapsingRemitting",
                        "SecondaryProgressive",
                        "PrimaryProgressive",
                        "ProgressiveRelapsing"
                    ],
                    "type": "string"
                },
                "DiagnosedDate": {
                    "type": "string"
                },
                "NumberOfAttacksInLast5Years": {
                    "format": "int32",
                    "type": "integer"
                },
                "NumberOfHospitalAdmissions": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastHospitalAdmissionDate": {
                    "type": "string"
                },
                "BladderIncontinence": {
                    "type": "boolean"
                },
                "SecondaryInfection": {
                    "type": "boolean"
                },
                "ProgressiveMentalDeterioration": {
                    "type": "boolean"
                },
                "ImpairmentOfVision": {
                    "type": "boolean"
                },
                "ImpairmentOfSpeech": {
                    "type": "boolean"
                },
                "ParalysisOfLimb": {
                    "type": "boolean"
                },
                "UseOfSteroids": {
                    "type": "boolean"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "StrokeCondition": {
            "type": "object",
            "properties": {
                "Strokes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Stroke"
                    }
                },
                "SpeechDifficulties": {
                    "type": "boolean"
                },
                "VisualImpairment": {
                    "type": "boolean"
                },
                "ArmParalysis": {
                    "type": "boolean"
                },
                "LegParalysis": {
                    "type": "boolean"
                },
                "ShortTermMemoryLoss": {
                    "type": "boolean"
                },
                "UnderFollowUp": {
                    "type": "boolean"
                },
                "Medications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Medication"
                    }
                }
            }
        },
        "Medication": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "HeartDiagnosisType": {
                    "enum": [
                        "HeartAttack",
                        "Angina",
                        "HeartFailure",
                        "AorticAneurysm",
                        "Cardiomyopathy",
                        "HeartValveDisorders",
                        "AtrialFibrillation",
                        "OtherIrregularHeartRhythm",
                        "Other"
                    ],
                    "type": "string"
                },
                "Dosage": {
                    "format": "double",
                    "type": "number"
                },
                "DosageUnit": {
                    "enum": [
                        "Milligram",
                        "Microgram",
                        "Gram",
                        "Millilitre"
                    ],
                    "type": "string"
                },
                "TakenAsRequired": {
                    "type": "boolean"
                },
                "DosageFrequency": {
                    "format": "int32",
                    "type": "integer"
                },
                "DosageFrequencyTimePeriod": {
                    "enum": [
                        "Day",
                        "Week",
                        "Fortnight",
                        "FourWeeks",
                        "Month",
                        "Quarter",
                        "HalfYear",
                        "Year"
                    ],
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "EndDate": {
                    "type": "string"
                }
            }
        },
        "HeartDiagnosis": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "HeartAttack",
                        "Angina",
                        "HeartFailure",
                        "AorticAneurysm",
                        "Cardiomyopathy",
                        "HeartValveDisorders",
                        "AtrialFibrillation",
                        "OtherIrregularHeartRhythm",
                        "Other"
                    ],
                    "type": "string"
                },
                "OtherDescription": {
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                },
                "NumberOfOccurrences": {
                    "format": "int32",
                    "type": "integer"
                },
                "Ongoing": {
                    "type": "boolean"
                }
            }
        },
        "HeartSurgery": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "Angioplasty",
                        "CABG",
                        "AorticAneurysmRepair",
                        "AorticValveReplacement",
                        "Cardioversion",
                        "MitralValveReplacement",
                        "Pacemaker",
                        "TricuspidValveReplacement"
                    ],
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                },
                "NumberOfArteries": {
                    "format": "int32",
                    "type": "integer"
                },
                "Successful": {
                    "type": "boolean"
                }
            }
        },
        "NeurologicalDiagnosis": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "SenileDementia",
                        "VascularDementia",
                        "AlzheimersDisease",
                        "ParkinsonsDisease",
                        "MotorNeuroneDisease",
                        "Other"
                    ],
                    "type": "string"
                },
                "OtherDescription": {
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                }
            }
        },
        "RespiratoryDiagnosis": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "COADorCOPD",
                        "Emphysema",
                        "Bronchiectasis",
                        "Pneumoconiosis",
                        "Asbestosis",
                        "Asthma",
                        "PleuralPlaques",
                        "SleepApnoea",
                        "Other"
                    ],
                    "type": "string"
                },
                "OtherDescription": {
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                }
            }
        },
        "Stroke": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "CerebralHaemorrhageBleed",
                        "CVACerebrovascularAccidentMajorStroke",
                        "SubarachnoidHaemorrhageSAH",
                        "TIATransientIschaemicAttackMiniStroke"
                    ],
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                },
                "InitialSymptomsDurationDays": {
                    "format": "int32",
                    "type": "integer"
                },
                "DurationUntilFullRecovery": {
                    "type": "string"
                }
            }
        },
        "AnnuityQuoteSignature": {
            "type": "object",
            "properties": {
                "annuityCaseId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "redirectUrlAfterSign": {
                    "type": "string"
                }
            }
        },
        "KeepInvestedInfos": {
            "type": "object",
            "properties": {
                "AccountsInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountInvestedInfos"
                    }
                }
            }
        },
        "AccountInvestedInfos": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "InitialBalance": {
                    "$ref": "#/definitions/Money"
                },
                "MonthlyContributions": {
                    "$ref": "#/definitions/Money"
                },
                "projectedValue5Years": {
                    "$ref": "#/definitions/Money"
                },
                "GraphicDatas": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                }
            }
        },
        "KeepPensionInvestmentConfirmation": {
            "type": "object",
            "properties": {
                "optionsInput": {
                    "$ref": "#/definitions/RetirementOptionsInput"
                },
                "keepInvestedInfos": {
                    "$ref": "#/definitions/KeepInvestedInfos"
                }
            }
        },
        "PensionWithdrawConfirmation": {
            "type": "object",
            "properties": {
                "optionsInput": {
                    "$ref": "#/definitions/RetirementOptionsInput"
                },
                "withdrawInput": {
                    "$ref": "#/definitions/WithdrawalInput"
                },
                "paymentInfos": {
                    "$ref": "#/definitions/PaymentInfos"
                }
            }
        },
        "WithdrawalInput": {
            "type": "object",
            "properties": {
                "TotalSum": {
                    "$ref": "#/definitions/Money"
                },
                "TaxFreeLumpSum": {
                    "$ref": "#/definitions/Money"
                },
                "PayeeName": {
                    "type": "string"
                },
                "AccountHolder": {
                    "type": "string"
                },
                "SortCode": {
                    "type": "string"
                },
                "AccountNumber": {
                    "type": "string"
                }
            }
        },
        "IncreasePensionContributionTransaction": {
            "type": "object",
            "properties": {
                "PensionProviderId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "Employer": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "PensionContributionPercentage": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "PensionContributionChange": {
                    "$ref": "#/definitions/Money"
                },
                "PensionTopUpChange": {
                    "$ref": "#/definitions/Money"
                },
                "CurrentEmployerContribution": {
                    "$ref": "#/definitions/Money"
                },
                "CurrentEmployeeContribution": {
                    "$ref": "#/definitions/Money"
                },
                "PensionProviderName": {
                    "pattern": "^[^\\]\\[!\"\\$%'\\*\\+,\\.;<=>\\?\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "EstimatedEmployerContribution": {
                    "$ref": "#/definitions/Money"
                },
                "EstimatedEmployerPercentageContribution": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "AccountsInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountInfos"
                    }
                },
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "AccountInfos": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "PolicyNumber": {
                    "type": "string"
                },
                "AmountToConsider": {
                    "$ref": "#/definitions/Money"
                }
            }
        },
        "ChangePensionInvestmentsTransaction": {
            "type": "object",
            "properties": {
                "Funds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Fund"
                    }
                },
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "AccountsInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountInfos"
                    }
                },
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "Fund": {
            "type": "object",
            "properties": {
                "Isin": {
                    "pattern": "^[^\\]\\[!\"#\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^_`{\\|}~\\-]*$",
                    "type": "string"
                },
                "Name": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\*\\+,\\./;<=>\\?@\\\\\\^`{\\|}~]*$",
                    "type": "string"
                },
                "Percentage": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                }
            }
        },
        "SavingMonthlyContributionTransaction": {
            "type": "object",
            "properties": {
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "SavingAccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "BankAccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "IsAccountHolder": {
                    "type": "boolean"
                },
                "IsAuthorizedDebits": {
                    "type": "boolean"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Contribution": {
                    "$ref": "#/definitions/Money"
                },
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "SavingSingleContributionTransaction": {
            "type": "object",
            "properties": {
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "GoalId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "SavingAccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "BankAccountId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "IsAccountHolder": {
                    "type": "boolean"
                },
                "IsAuthorizedDebits": {
                    "type": "boolean"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Contribution": {
                    "$ref": "#/definitions/Money"
                },
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "CallMeBackTransactionRM": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "Purpose": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "AlreadyClient": {
                    "type": "boolean"
                },
                "RelatedItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CallMeBackTransactionRelatedItemRM"
                    }
                }
            }
        },
        "CallMeBackTransactionRelatedItemRM": {
            "type": "object",
            "properties": {
                "Type": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        4
                    ],
                    "type": "integer"
                },
                "Values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "BeneficiaryForTransaction": {
            "required": [
                "FullName",
                "Address1",
                "CountryId",
                "Ratio",
                "Relationship"
            ],
            "type": "object",
            "properties": {
                "FullName": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Address3": {
                    "type": "string"
                },
                "Address4": {
                    "type": "string"
                },
                "Address5": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "CountryId": {
                    "type": "string"
                },
                "Ratio": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "Relationship": {
                    "enum": [
                        "None",
                        "Parent",
                        "Child",
                        "Spouse",
                        "Sibling",
                        "Adult_Dependant",
                        "Aunt",
                        "Charity",
                        "Friend",
                        "Beneficiary_Of_Will",
                        "Common_Law",
                        "Cousin",
                        "Civil_Partner",
                        "Fiancee",
                        "Grandparents",
                        "Nephew",
                        "Niece",
                        "Partner",
                        "Step_relative",
                        "Uncle",
                        "Grandchild",
                        "Nomination_Form"
                    ],
                    "type": "string"
                }
            }
        },
        "TransferPensionInput": {
            "type": "object",
            "properties": {
                "pensionTransferTransaction": {
                    "$ref": "#/definitions/PensionTransferTransaction"
                },
                "redirectURL": {
                    "type": "string"
                }
            }
        },
        "PensionTransferTransaction": {
            "type": "object",
            "properties": {
                "ProviderName": {
                    "type": "string"
                },
                "SchemeName": {
                    "type": "string"
                },
                "ApproximateTransferValue": {
                    "$ref": "#/definitions/Money"
                },
                "TypeOfScheme": {
                    "type": "string"
                },
                "InvestmentPlan": {
                    "type": "string"
                },
                "TransferFormSigned": {
                    "type": "boolean"
                },
                "SignatureEnvelopeId": {
                    "type": "string"
                },
                "PreviousEmployer": {
                    "type": "string"
                },
                "PreviousSchemeAdministratorAddress": {
                    "type": "string"
                },
                "TransactionType": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "ReferenceNumber": {
                    "type": "string"
                },
                "AccountsInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountInfos"
                    }
                },
                "TransactionId": {
                    "maxLength": 128,
                    "minLength": 0,
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "StatusCode": {
                    "enum": [
                        "NONE",
                        "INPROGRESS",
                        "COMPLETED",
                        "ERROR",
                        "CANCELLED",
                        "CANCELLED_BY_IFA",
                        "PENDING",
                        "UPDATED",
                        "READY_TO_SEND",
                        "SENT",
                        "REJECTED",
                        "ALL"
                    ],
                    "type": "string"
                },
                "ProductFeatureId": {
                    "pattern": "^[^\\]\\[!\"\\$%&'\\(\\)\\*\\+,\\./:;<=>\\?@\\\\\\^#`{\\|}~\\-]*$",
                    "type": "string"
                },
                "RequestDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonalIdentifier": {
                    "type": "string"
                }
            }
        },
        "TransferPensionOutput": {
            "type": "object",
            "properties": {
                "transactionId": {
                    "type": "string"
                },
                "signingUrl": {
                    "type": "string"
                }
            }
        },
        "TransferPensionConfirmation": {
            "type": "object",
            "properties": {
                "transactionId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "redirectURL": {
                    "type": "string"
                }
            }
        },
        "LinkTransferInfoModel": {
            "type": "object",
            "properties": {
                "Balance": {
                    "$ref": "#/definitions/Money"
                },
                "ExtraRetirementIncome": {
                    "$ref": "#/definitions/Money"
                },
                "Name": {
                    "type": "string"
                },
                "AccountType": {
                    "type": "string"
                },
                "RetirementAge": {
                    "format": "int32",
                    "type": "integer"
                },
                "CashTransferValue": {
                    "$ref": "#/definitions/Money"
                },
                "IsOverLimit": {
                    "type": "boolean"
                }
            }
        },
        "MinimumProfile": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "ObjectId": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "Login": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "BirthDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Age": {
                    "format": "int32",
                    "type": "integer"
                },
                "AipLogin": {
                    "type": "string"
                },
                "HasAlreadyConnected": {
                    "type": "boolean"
                },
                "IsRetired": {
                    "type": "boolean"
                },
                "AvaIntroduced": {
                    "type": "boolean"
                },
                "ProfileEnterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileEnterprise"
                    }
                },
                "ProfileIncome": {
                    "$ref": "#/definitions/ProfileIncome"
                },
                "City": {
                    "type": "string"
                },
                "Country": {
                    "$ref": "#/definitions/Countries"
                },
                "Configuration": {
                    "$ref": "#/definitions/EnterpriseSelectorConfiguration"
                },
                "PreferredLanguage": {
                    "$ref": "#/definitions/Language"
                },
                "ImpersonatingProfileId": {
                    "type": "string"
                }
            }
        },
        "EnterpriseSelectorConfiguration": {
            "type": "object",
            "properties": {
                "CustodianName": {
                    "type": "string"
                },
                "FinancialEngineName": {
                    "type": "string"
                },
                "EnterpriseFees": {
                    "format": "double",
                    "type": "number"
                },
                "WithdrawalFees": {
                    "format": "double",
                    "type": "number"
                },
                "AIPDefaultInstitutions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Provider"
                        }
                    }
                },
                "DefaultEnterpriseName": {
                    "type": "string"
                },
                "SupportOrganizationName": {
                    "type": "string"
                },
                "TermLength": {
                    "type": "string"
                },
                "TutorialVideo": {
                    "type": "string"
                },
                "ContentPublishers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentPublisher"
                    }
                },
                "CustomStyle": {
                    "type": "string"
                },
                "AdaptiveCardStyle": {
                    "type": "object"
                },
                "DefaultAccountPortfolioNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "DefaultProviderIdentifier": {
                    "$ref": "#/definitions/ProviderIdentifier"
                },
                "AboutDetails": {
                    "$ref": "#/definitions/AboutDetails"
                },
                "EmailTemplates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Policy": {
                    "$ref": "#/definitions/B2CPolicy"
                },
                "TransactionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionConfig"
                    }
                },
                "EquityReleaseCallCenterEmail": {
                    "type": "string"
                },
                "DisableEquityReleaseUserEmail": {
                    "type": "boolean"
                },
                "LockedOutAlerts": {
                    "type": "boolean"
                },
                "NotificationBusinessRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotificationBusinessRule"
                    }
                },
                "Contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                },
                "DeepLink": {
                    "$ref": "#/definitions/DeepLink"
                },
                "DisableRecommendationEngine": {
                    "type": "boolean"
                },
                "ExternalLinksCTA": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "OneSignalAppId": {
                    "type": "string"
                },
                "OneSignalAppSecret": {
                    "type": "string"
                },
                "KcFixedButtons": {
                    "type": "boolean"
                },
                "PublishCampaignsPipeline": {
                    "type": "string"
                },
                "NudgeCallbackPipeline": {
                    "type": "string"
                },
                "NotificationChannelSettings": {
                    "$ref": "#/definitions/NotificationChannelConfig"
                },
                "WebViewSettings": {
                    "$ref": "#/definitions/WebViewSettings"
                },
                "CallsToThirdParties": {
                    "$ref": "#/definitions/CallToThirdPartySettings"
                },
                "HandoverConfig": {
                    "$ref": "#/definitions/HandoverConfig"
                },
                "SavingGoalMaxDuration": {
                    "format": "double",
                    "type": "number"
                },
                "AnnuityFactorSettings": {
                    "$ref": "#/definitions/AnnuityFactorSettings"
                },
                "B2CCustomDomain": {
                    "type": "string"
                },
                "Sensitive": {
                    "type": "boolean"
                },
                "NLUSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NLUSetting"
                    }
                },
                "IntentSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntentSetting"
                    }
                },
                "IsEmployeeContributionTaxReliefIncluded": {
                    "type": "boolean"
                },
                "AlwaysIncludeStatePensionInIncomeForecast": {
                    "type": "boolean"
                },
                "UseImportedRetirementAge": {
                    "type": "boolean"
                },
                "DocuSignBrandId": {
                    "type": "string"
                },
                "UseGrossIncomeValues": {
                    "type": "boolean"
                },
                "UseNetIncomeValuesForLifestyles": {
                    "type": "boolean"
                },
                "DisableSalaryRequirement": {
                    "type": "boolean"
                },
                "CreateDefaultStatePension": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsEmployerExternalIdMandatory": {
                    "type": "boolean"
                },
                "GoogleAnalyticsId": {
                    "type": "string"
                },
                "MinimumAnnualSalaryToConsider": {
                    "format": "double",
                    "type": "number"
                },
                "AccountCategoriesForIncomeForecast": {
                    "type": "string"
                },
                "NBASettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NBASetting"
                    }
                },
                "IsMenuGoalAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuFinancialProfileAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuFindTransferAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuKnowledgeAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuLinkAccountsAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuPersonalProfileAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMenuPaymentsAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsBudgetGoalAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsBuyGiftAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsChildrenEducationAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsEmergencyFundAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsGeneralInvestingAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsMortgageAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsPayOffDebtAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsPlanWeddingAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveFamilyEventAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveForCarAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveForChristmasAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveForHouseAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveHolidayAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsSaveRetirementAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "IsOptimiseRetirementIncomeAvailable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Enterprise": {
                    "$ref": "#/definitions/Enterprise"
                },
                "Configuration": {
                    "type": "string"
                },
                "AIPAutomationDisabled": {
                    "type": "boolean"
                },
                "ManualEstimateRetirementIncome": {
                    "type": "boolean"
                },
                "GoalTypesUnavailable": {
                    "format": "int32",
                    "type": "integer"
                },
                "MenuItemsUnavailable": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsLGPSMember": {
                    "type": "boolean"
                },
                "CreateDBPensionsAtOnboarding": {
                    "type": "boolean"
                },
                "DisablePinCodeCheck": {
                    "type": "boolean"
                },
                "IsAVARegulatedAdviceProvided": {
                    "type": "boolean"
                },
                "AvaRegulatedAdvicePricing": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "IFARegulatedAdviceType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "IFARegulatedAdvicePlan": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "IsIntelligentPredictEnabled": {
                    "type": "boolean"
                },
                "UniqueBotPublicKey": {
                    "type": "string"
                },
                "UniqueAbakaConnectPublicKey": {
                    "type": "string"
                }
            }
        },
        "TransactionConfig": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "enum": [
                        "None",
                        "PensionTransfer",
                        "ChangeRetirementGoalLumpSum",
                        "IncreasePensionContribution",
                        "ChangePensionInvestments",
                        "OpenSavingsAccount",
                        "EquityReleaseLead",
                        "DrawdownPurchase",
                        "AnnuityQuote",
                        "PensionCashWithdrawal",
                        "PensionTracing",
                        "PensionKeepInvested",
                        "Beneficiaries",
                        "SavingMonthlyContribution",
                        "SavingSingleContribution",
                        "CallMeBack",
                        "WealthLead",
                        "FundsOrders",
                        "RetirementGoal",
                        "ChangePersonalProfile",
                        "DrawdownUpdate",
                        "UserRegistration",
                        "RetirementOptions",
                        "CommunicationsPreferences"
                    ],
                    "type": "string"
                },
                "EmailActivated": {
                    "type": "boolean"
                },
                "Email": {
                    "type": "string"
                },
                "TicketActivated": {
                    "type": "boolean"
                },
                "IntegrationActivated": {
                    "type": "boolean"
                },
                "AutomaticCompletion": {
                    "type": "boolean"
                }
            }
        },
        "NotificationBusinessRule": {
            "type": "object",
            "properties": {
                "Types": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "NONE",
                            "SMS",
                            "APP_INSTANT",
                            "APP_BATCH",
                            "EMAIL",
                            "WEB_PUSH",
                            "PUSH",
                            "POST",
                            "CARD",
                            "WEB_PUSH_AND_APP",
                            "WEB_PUSH_AND_INSTANT",
                            "SMS_AND_APP",
                            "EMAIL_AND_APP",
                            "ALL"
                        ],
                        "type": "string"
                    }
                },
                "MaxPerWeek": {
                    "format": "int32",
                    "type": "integer"
                },
                "MaxPerDay": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "NotificationChannelConfig": {
            "type": "object",
            "properties": {
                "DisableSmsFallback": {
                    "type": "boolean"
                },
                "ChannelsOrder": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotificationChannelOrder"
                    }
                }
            }
        },
        "HandoverConfig": {
            "type": "object",
            "properties": {
                "TeamsHandoffConfig": {
                    "$ref": "#/definitions/TeamsHandoverConfig"
                },
                "DynamicsHandoffConfig": {
                    "$ref": "#/definitions/DynamicsHandoverConfig"
                }
            }
        },
        "AnnuityFactorSettings": {
            "type": "object",
            "properties": {
                "UseAnnuityFactor": {
                    "type": "boolean"
                },
                "AnnuityFees": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "NLUSetting": {
            "type": "object",
            "properties": {
                "LanguageCultureCode": {
                    "type": "string"
                },
                "AzureMLModelDeployment": {
                    "type": "string"
                },
                "AzureMLModelSecret": {
                    "type": "string"
                }
            }
        },
        "IntentSetting": {
            "type": "object",
            "properties": {
                "BaseIntentName": {
                    "type": "string"
                },
                "OverridenIntentName": {
                    "type": "string"
                }
            }
        },
        "NBASetting": {
            "type": "object",
            "properties": {
                "UniqueName": {
                    "enum": [
                        "NONE",
                        "PRODUCT_RECOMMENDATION"
                    ],
                    "type": "string"
                },
                "AzureMLModelDeployment": {
                    "type": "string"
                },
                "AzureMLModelSecret": {
                    "type": "string"
                }
            }
        },
        "NotificationChannelOrder": {
            "type": "object",
            "properties": {
                "ChannelType": {
                    "enum": [
                        "NONE",
                        "SMS",
                        "APP_INSTANT",
                        "APP_BATCH",
                        "EMAIL",
                        "WEB_PUSH",
                        "PUSH",
                        "POST",
                        "CARD",
                        "WEB_PUSH_AND_APP",
                        "WEB_PUSH_AND_INSTANT",
                        "SMS_AND_APP",
                        "EMAIL_AND_APP",
                        "ALL"
                    ],
                    "type": "string"
                },
                "Order": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "TeamsHandoverConfig": {
            "type": "object",
            "properties": {
                "AppId": {
                    "type": "string"
                },
                "AppSecret": {
                    "type": "string"
                },
                "ClientType": {
                    "enum": [
                        "TEAMS",
                        "DYNAMICS"
                    ],
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                }
            }
        },
        "DynamicsHandoverConfig": {
            "type": "object",
            "properties": {
                "DirectLineSecret": {
                    "type": "string"
                },
                "BotHandle": {
                    "type": "string"
                },
                "PollingIntervalInMilliseconds": {
                    "type": "string"
                },
                "InactivityInMilliseconds": {
                    "type": "string"
                },
                "ClientType": {
                    "enum": [
                        "TEAMS",
                        "DYNAMICS"
                    ],
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                }
            }
        },
        "UserSensitiveInfo": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "NationalInsuranceNumber": {
                    "type": "string"
                },
                "OtherNin": {
                    "type": "string"
                },
                "PassportNumber": {
                    "type": "string"
                },
                "DriverLicenceNumber": {
                    "type": "string"
                }
            }
        },
        "CustomerInsightsTagRM": {
            "required": [
                "Code",
                "Name"
            ],
            "type": "object",
            "properties": {
                "CustomerInsightsTagCategory": {
                    "$ref": "#/definitions/CustomerInsightsTagCategoryRM"
                },
                "Code": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "maxLength": 1024,
                    "minLength": 0,
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "CustomerInsightsTagCategoryRM": {
            "required": [
                "Code",
                "Name"
            ],
            "type": "object",
            "properties": {
                "CustomerInsightsTagArea": {
                    "$ref": "#/definitions/CustomerInsightsTagAreaRM"
                },
                "Code": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "maxLength": 1024,
                    "minLength": 0,
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "CustomerInsightsTagAreaRM": {
            "required": [
                "Code",
                "Name"
            ],
            "type": "object",
            "properties": {
                "Code": {
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "Name": {
                    "maxLength": 1024,
                    "minLength": 0,
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "ImportDataCheckUserExist": {
            "type": "object",
            "properties": {
                "MatchFound": {
                    "enum": [
                        "None",
                        "Single",
                        "Multiple"
                    ],
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                }
            }
        },
        "ResponseRequestComments": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZendeskUser"
                    }
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "author_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "html_body": {
                    "type": "string"
                },
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attachments"
                    }
                }
            }
        },
        "ZendeskUser": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Attachments": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "content_url": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                }
            }
        },
        "Ticket": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "result_type": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "updated_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldOption"
                    }
                }
            }
        },
        "FieldOption": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "SupportRequest": {
            "type": "object",
            "properties": {
                "Subject": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                },
                "Message": {
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "type": "string"
                },
                "CustomFieldsValue": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "UserPreferenceRM": {
            "type": "object",
            "properties": {
                "Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string",
                    "readOnly": true
                },
                "Profile_Id": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "POLICY_CATEGORY",
                        "POLICY_PRODUCT",
                        "KNOWLEDGE_ARTICLE"
                    ],
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "INTERESTED",
                        "VIEWED",
                        "NOT_INTERESTED",
                        "ALREADY_OWNED",
                        "DONT_NEED",
                        "DONT_UNDERSTAND"
                    ],
                    "type": "string"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Entity": {
                    "type": "object"
                },
                "FeedbackReason": {
                    "type": "string"
                }
            }
        },
        "DeleteUserPreferenceRM": {
            "required": [
                "EntityType",
                "EntityId"
            ],
            "type": "object",
            "properties": {
                "EntityType": {
                    "enum": [
                        "POLICY_CATEGORY",
                        "POLICY_PRODUCT",
                        "KNOWLEDGE_ARTICLE"
                    ],
                    "type": "string"
                },
                "EntityId": {
                    "pattern": "^([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})$",
                    "type": "string"
                }
            }
        }
    }
}